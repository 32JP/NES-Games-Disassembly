
The Legend of Zelda
Bank 2
0x8000 - 0xBFFF

--------

8000: Pointer table for Graphics Data (3 * 2 = 6 bytes)

7F80 -> 807F	Common Sprites (Link, Pause Screen)
7F87 -> 877F
7F8E -> 8E7F

----

8006: Table for Graphics Blocks PPU Address (6 * 2 = C bytes)

Values are big-endian

Number of bytes to transfer

0700
0700
00E0

800C: PPU Address

0000
1000
1F20

----

8012: 20 25 E6	Table for ? (3 bytes)

----

8015: AD 0220	LDA $2002

8018: AD 1D05	LDA $051D
801B: 0A	ASL
801C: AA	TAX
801D: BD 0080	LDA $8000,X
8020: 85 00	STA $00
8022: BD 0680	LDA $8006,X
8025: 85 02	STA $02
8027: BD 0C80	LDA $800C,X
802A: 8D 0620	STA $2006
802D: E8	INX
802E: BD 0080	LDA $8000,X
8031: 85 01	STA $01
8033: BD 0680	LDA $8006,X
8036: 85 03	STA $03
8038: BD 0C80	LDA $800C,X

803B: 20 4F80	JSR $804F

803E: AD 1D05	LDA $051D
8041: C9 03	CMP #$03
8043: D0 D3	BNE $8018

8045: A9 5A	LDA #$5A	; A = 5A
8047: 85 F5	STA $F5
8049: A9 00	LDA #$00	; A = 00
804B: 8D 1D05	STA $051D

804E: 60	RTS

----

804F: 8D 0620	STA $2006
8052: A0 00	LDY #$00	; Y = 00

8054: B1 00	LDA ($00),Y
8056: 8D 0720	STA $2007
8059: A5 00	LDA $00
805B: 18	CLC
805C: 69 01	ADC #$01
805E: 85 00	STA $00
8060: A5 01	LDA $01
8062: 69 00	ADC #$00
8064: 85 01	STA $01
8066: A5 03	LDA $03
8068: 38	SEC
8069: E9 01	SBC #$01
806B: 85 03	STA $03
806D: A5 02	LDA $02
806F: E9 00	SBC #$00
8071: 85 02	STA $02
8073: A5 02	LDA $02
8075: D0 DD	BNE $8054

8077: A5 03	LDA $03
8079: D0 D9	BNE $8054

807B: EE 1D05	INC $051D

807E: 60	RTS

----

807F: Graphics Data for Common Sprites (700 bytes)

----

877F: Graphics Data for ? (700 bytes)

----

8E7F: Graphics Data for ? (E0 bytes)

----

8F5F: Unused Space (A1 bytes)

----

9000: 20 25E6	JSR $E625

9003: AD 2C04	LDA $042C
9006: D0 0C	BNE $9014

9008: AD 2D04	LDA $042D

900B: 20 E2E5	JSR $E5E2

----

900E: Pointer table for ? (3 * 2 = 6 bytes)

E794 -> 94E7
1295 -> 9512
4595 -> 9545

----

9014: AD 2D04	LDA $042D
9017: 20 E2E5	JSR $E5E2

----

901A: Pointer table for ? (3 * 2 = 6 bytes)

E794 -> 94E7
7395 -> 9573
9A95 -> 959A

----

9020: A5 13	LDA $13
9022: D0 0C	BNE $9030

9024: AD 2805	LDA $0528
9027: D0 07	BNE $9030

9029: 20 CF90	JSR $90CF

902C: A5 11	LDA $11
902E: F0 2C	BEQ $905C

9030: A5 13	LDA $13

9032: 20 E2E5	JSR $E5E2

----

9035: Pointer table for ? (3 * 2 = 6 bytes)

3B90 -> 903B
A0A2 -> A2A0
5D90 -> 905D

----

903B: A5 F8	LDA $F8		; Controller 1 buttons pressed
903D: 29 10	AND #$10	; keep bits ...x .... (Start button)
903F: F0 1B	BEQ $905C

9041: 85 F6	STA $F6
9043: A9 00	LDA #$00	; A = 00
9045: 8D 0006	STA $0600

9048: 20 E96E	JSR $6EE9

904B: A9 5A	LDA #$5A	; A = 5A
904D: 8D 2805	STA $0528
9050: E6 13	INC $13		; Routine Index

9052: 20 25E6	JSR $E625
9055: 20 F7E5	JSR $E5F7	; Remove All Sprites

9058: A9 12	LDA #$12	; A = 12
905A: 85 14	STA $14		; PPU Loading Index

905C: 60	RTS

----

905D: 20 25E6	JSR $E625

9060: A9 00	LDA #$00	; A = 00
9062: 85 16	STA $16		; Selected Save Slot (0-2)

9064: 20 F16D	JSR $6DF1

9067: A0 02	LDY #$02	; Y = 02

9069: B1 06	LDA ($06),Y
906B: 99 3306	STA $0633,Y
906E: D0 13	BNE $9083

9070: 98	TYA
9071: 48	PHA
9072: 84 16	STY $16

9074: 20 F16D	JSR $6DF1
9077: 20 5DA3	JSR $A35D

907A: A9 00	LDA #$00	; A = 00
907C: 85 16	STA $16

907E: 20 F16D	JSR $6DF1

9081: 68	PLA
9082: A8	TAY

9083: B1 0A	LDA ($0A),Y
9085: 99 3006	STA $0630,Y	; Death Count
9088: B1 0C	LDA ($0C),Y
908A: 99 2D06	STA $062D,Y	; Quest Flag
908D: 88	DEY
908E: 10 D9	BPL $9069

9090: A0 18	LDY #$18	; Y = 18
9092: A2 00	LDX #$00	; X = 00

9094: B1 00	LDA ($00),Y
9096: 48	PHA
9097: 8A	TXA
9098: 4A	LSR
9099: B0 0C	BCS $90A7

909B: 68	PLA
909C: 29 F0	AND #$F0	; keep bits xxxx ....
909E: 85 0C	STA $0C
90A0: 4A	LSR
90A1: 4A	LSR
90A2: 4A	LSR
90A3: 4A	LSR
90A4: 05 0C	ORA $0C
90A6: 48	PHA

90A7: 68	PLA
90A8: 9D 5006	STA $0650,X
90AB: C8	INY
90AC: E8	INX
90AD: E0 06	CPX #$06
90AF: F0 0B	BEQ $90BC

90B1: 8A	TXA
90B2: 4A	LSR
90B3: B0 DF	BCS $9094

90B5: 98	TYA
90B6: 69 26	ADC #$26
90B8: A8	TAY

90B9: 4C 9490	JMP $9094

----

90BC: A0 17	LDY #$17	; Y = 17

90BE: B1 04	LDA ($04),Y
90C0: 99 3806	STA $0638,Y
90C3: 88	DEY
90C4: 10 F8	BPL $90BE

90C6: E6 12	INC $12
90C8: A9 00	LDA #$00	; A = 00
90CA: 85 11	STA $11
90CC: 85 13	STA $13

90CE: 60	RTS

----

90CF: AD 2C04	LDA $042C
90D2: D0 0A	BNE $90DE

90D4: AD 2D04	LDA $042D

90D7: 20 E2E5	JSR $E5E2

----

90DA: Pointer table for ? (2 * 2 = 4 bytes)

AC95 -> 95AC
799B -> 9B79

----

90DE: AD 2D04	LDA $042D
90E1: 20 E2E5	JSR $E5E2

----

90E4: Pointer table for ? (5 * 2 = A bytes)

C195 -> 95C1
EC95 -> 95EC
0C96 -> 960C
3098 -> 9830
3C98 -> 983C

----

90EE: Intro Screen Extra Ornaments - Sprites Attributes (1C * 4 = 70 bytes)

Byte 0: Y Position
Byte 1: Tile Code
Byte 2: Color Code, sprite drawn behind background, flipping
Byte 3: X Position

77 CA C2 D0
77 CC C2 C8
77 CA 82 28
77 CC 82 30
27 CA 42 D0
27 CC 42 C8
27 CA 02 28
27 CC 02 30
57 CE 02 74	Middle Leaves
57 D0 02 7C	Middle Leaves
31 D2 02 57
4F D2 02 CC
67 D2 02 7B
83 D2 02 50
31 D4 02 5F
3F D4 02 24
41 D4 02 64
7B D4 02 90
27 D6 02 50
2B D6 02 A0
4F D6 02 2C
7B D6 02 BC
67 A0 03 60	Sword Blade
67 A0 03 68
67 A0 03 70
67 A0 03 78
67 A0 03 80
67 A0 03 88

----

915E: Table for ? (E2 bytes)

Related to All of Treasures (graphics display command bytes)

80 00 00 00 00 00 00 00
40 80 80 00 60 00 00 00
40 80 00 00 60 00 00 00
00 C0 00 00 60 00 40 00
00 C0 00 00 20 00 40 00
00 C0 00 00 20 00 40 00
40 80 80 00 20 00 40 00
40 80 80 00 60 00 00 00
40 80 80 00 60 00 00 00
40 80 00 00 60 00 00 00
40 80 80 00 60 00 00 00
40 C0 80 00 20 00 40 00
40 80 80 00 20 00 40 00 40 80 80 00 20 00 40 00
40 80 00 00 20 00 40 00 40 80 80 00 60 00 00 00
40 80 80 00 60 00 00 00 00 C0 00 00 60 00 00 00
40 00 C0 00 00 20 40 00 00 00 40 00 00 00 00 20
00 20 00 20 00 20 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00

----

9240: Table for All of Treasures Text (27 bytes)

Sprite Codes - Left Column

22	Heart
23	Fairy
18	Rupy
1F	Life Potion
15	Letter
01	Sword
03	Magical Sword
1D	Boomerang
00	Bomb
08	Arrow
06	Blue Candle
12	Blue Ring
14	Power Bracelet
0C	Raft
10	Magical Rod
19	Key
17	Map

Sprite Codes - Center

1B	Triforce

30	Parchment - Part 1
31	Parchment - Part 2
32	Parchment - Part 3
33	Link Holding Parchment

Sprite Codes - Right Column

1A	Container Heart
21	Clock
0F	5 Rupies
20	2nd Potion
04	Food
02	White Sword
1C	Magical Shield
1E	Magical Boomerang
0A	Bow
09	Silver Arrow
07	Red Candle
13	Red Ring
05	Recorder
0D	Stepladder
11	Book of Magic
0B	Magical Key
16	Compass

----

9267: Table for various data (33 bytes)

1B: ? Related to Triforce Piece
44: X Position of Sprites in the Left Column
AC: X Position of Sprites in the Right Column

Parchment parts (Please read the manual...)

E0 E2 EC EE F8 FA E4 E6 F0 F2 FC FE E8 EA F4 F6
DC DE

00 00: Sprites left of Link

78: Link Sprite, left part
78: Link Sprite, right part

00 00: Sprites right of Link

00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 40 00 00

----

All of Treasure Text Data

Byte 0 is X Start Position
Ends with FF

929A: ALL OF TREASURES (with vines left and right)

E4 E5 E4 E5 E4 E5 E6 24 0A 15 15 24 18 0F 24
1D 1B 0E 0A 1C 1E 1B 0E 1C 24 E6 E4 E5 E4 E5 E4
E5 FF

92BC: HEART     CONTAINER

07 11 0E 0A 1B 1D 24 24 24 24 24 0C 18 17 1D 0A
12 17 0E 1B FF

92D1: HEART

14 11 0E 0A 1B 1D FF

92D8: FAIRY        CLOCK

07 0F 0A 12 1B 22 24 24 24 24 24 24 24 24 0C 15
18 0C 14 FF

...

9475

0C 1D 1B 12 0F 18 1B 0C 0E FF

947F

04 15 12 0F 0E 24 19 18 1D 12 18 17 24 24 24 02
17 0D 24 19 18 1D 12 18 17 FF

9499

06 15 0E 1D 1D 0E 1B 24 24 24 24 24 24 24 24 0F
18 18 0D FF

----

94AD: Pointer table (1D * 2 = 3A bytes)

Intro All of Treasure Text Pointers

9A92 -> 929A
BC92 -> 92BC
D192 -> 92D1
D892 -> 92D8
EC92 -> 92EC
7F94 -> 947F
9994 -> 9499
0193 -> 9301
1593 -> 9315
1C93 -> 931C
3293 -> 9332
4793 -> 9347
5E93 -> 935E
6993 -> 9369
7C93 -> 937C
9193 -> 9391
9893 -> 9398
AB93 -> 93AB
C193 -> 93C1
D493 -> 93D4
E893 -> 93E8
FE93 -> 93FE
0894 -> 9408
1F94 -> 941F
3594 -> 9435
4894 -> 9448
5C94 -> 945C
6194 -> 9461
7594 -> 9475

----

94E7: 20 6DE4	JSR $E46D
94EA: EE 2D04	INC $042D

94ED: 60	RTS

----

94EE: Palettes for Intro Screen (24 bytes)

3F 00 20	PPU Address 3F00, transfer 20 bytes

36 0F 00 10
36 17 27 0F
36 08 1A 28
36 30 3B 22

36 30 3B 16
36 17 27 0F
36 08 1A 28
36 30 3B 22

FF

----

9512: A2 23	LDX #$23	; X = 23
9514: 8E 0003	STX $0300
9517: 8E 0103	STX $0301

951A: BD EE94	LDA $94EE,X
951D: 9D 0203	STA $0302,X
9520: CA	DEX
9521: 10 F7	BPL $951A

9523: A2 0A	LDX #$0A	; X = 0A
9525: A9 00	LDA #$00	; A = 00
9527: 8D 2E04	STA $042E
952A: 8D 2F04	STA $042F

952D: 9D 1204	STA $0412,X	; Enemy Status
9530: 9D 1F04	STA $041F,X
9533: 9D 3704	STA $0437,X
9536: CA	DEX
9537: 10 F4	BPL $952D

9539: A2 0A	LDX #$0A	; X = 0A

953B: A9 FF	LDA #$FF	; A = FF
953D: 95 AC	STA $AC,X
953F: CA	DEX
9540: D0 F9	BNE $953B

9542: 4C EA94	JMP $94EA

----

9545: A9 80	LDA #$80	; A = 80
9547: 8D 0006	STA $0600
954A: A9 10	LDA #$10	; A = 10

954C: 4C A295	JMP $95A2

----

954F: Palettes for ? (24 bytes)

3F 00 20	PPU Address 3F00, transfer 20 bytes

0F 30 30 30
0F 21 30 30
0F 16 30 30
0F 29 1A 09

0F 29 37 17
0F 02 22 30
0F 16 27 30
0F 0B 1B 2B

FF

----

9573: A2 23	LDX #$23	; X = 23
9575: 8E 0003	STX $0300
9578: 8E 0103	STX $0301

957B: BD 4F95	LDA $954F,X
957E: 9D 0203	STA $0302,X
9581: CA	DEX
9582: 10 F7	BPL $957B

9584: A2 0A	LDX #$0A	; X = 0A
9586: A9 00	LDA #$00	; A = 00

9588: 9D 1204	STA $0412,X	; Enemy Status
958B: 9D 1F04	STA $041F,X
958E: 9D 3704	STA $0437,X
9591: 9D 4404	STA $0444,X
9594: CA	DEX
9595: 10 F1	BPL $9588

9597: 4C EA94	JMP $94EA

----

959A: E6 5C	INC $5C
959C: A9 10	LDA #$10	; A = 10
959E: 85 FC	STA $FC		; Vertical Scrolling Offset
95A0: A9 02	LDA #$02	; A = 02
95A2: 85 14	STA $14		; PPU Loading Index
95A4: A9 00	LDA #$00	; A = 00
95A6: 8D 2D04	STA $042D
95A9: E6 11	INC $11

95AB: 60	RTS

----

95AC: A5 15	LDA $15		; Frame Counter
95AE: 29 01	AND #$01	; keep bits .... ...x
95B0: F0 0B	BEQ $95BD

95B2: EE 1A04	INC $041A
95B5: AD 1A04	LDA $041A
95B8: D0 03	BNE $95BD

95BA: 4C EA94	JMP $94EA

----

95BD: 20 6B98	JSR $986B
95C0: 60	RTS

----

95C1: A5 15	LDA $15		; Frame Counter
95C3: 29 01	AND #$01	; keep bits .... ...x
95C5: F0 11	BEQ $95D8

95C7: E6 FC	INC $FC		; Vertical Scrolling Offset
95C9: A5 FC	LDA $FC
95CB: C9 F0	CMP #$F0
95CD: D0 09	BNE $95D8

95CF: EE 1504	INC $0415
95D2: A9 00	LDA #$00	; A = 00
95D4: 85 FC	STA $FC		; Vertical Scrolling Offset
95D6: E6 5C	INC $5C

95D8: A5 FC	LDA $FC		; Vertical Scrolling Offset
95DA: C9 08	CMP #$08
95DC: D0 0D	BNE $95EB

95DE: AD 1504	LDA $0415
95E1: F0 08	BEQ $95EB

95E3: A9 00	LDA #$00	; A = 00
95E5: 8D 1504	STA $0415
95E8: EE 2D04	INC $042D

95EB: 60	RTS

----

95EC: EE 1A04	INC $041A
95EF: AD 1A04	LDA $041A
95F2: D0 03	BNE $95F7

95F4: EE 2D04	INC $042D

95F7: A9 29	LDA #$29	; A = 29
95F9: 8D 1D04	STA $041D
95FC: A9 00	LDA #$00	; A = 00
95FE: 8D 1C04	STA $041C
9601: A9 2B	LDA #$2B	; A = 2B
9603: 8D 1804	STA $0418
9606: A9 E0	LDA #$E0	; A = E0
9608: 8D 1704	STA $0417

960B: 60	RTS

----

960C: 20 F7E5	JSR $E5F7	; Remove All Sprites
960F: 20 2A97	JSR $972A
9612: 20 9D97	JSR $979D

9615: A5 15	LDA $15		; Frame Counter
9617: 29 01	AND #$01	; keep bits .... ...x
9619: F0 23	BEQ $963E

961B: A2 0A	LDX #$0A	; X = 0A
961D: D6 84	DEC $84,X	; Intro Sprite Y Position
961F: CA	DEX
9620: D0 FB	BNE $961D

9622: EE 1B04	INC $041B
9625: AD 1B04	LDA $041B
9628: D0 03	BNE $962D

962A: EE 1504	INC $0415
962D: AD 1504	LDA $0415
9630: C9 05	CMP #$05
9632: D0 0B	BNE $963F

9634: AD 1B04	LDA $041B
9637: C9 80	CMP #$80
9639: D0 04	BNE $963F

963B: EE 2D04	INC $042D

963E: 60	RTS

----

963F: E6 FC	INC $FC		; Vertical Scrolling Offset
9641: A5 FC	LDA $FC
9643: C9 F0	CMP #$F0
9645: D0 06	BNE $964D

9647: E6 5C	INC $5C
9649: A9 00	LDA #$00	; A = 00
964B: 85 FC	STA $FC
964D: AD 1B04	LDA $041B
9650: 29 07	AND #$07	; keep bits .... .xxx
9652: D0 EA	BNE $963E

9654: 20 3A97	JSR $973A

9657: A2 20	LDX #$20	; X = 20
9659: A9 FF	LDA #$FF	; A = FF
965B: 9D 0503	STA $0305,X
965E: CA	DEX
965F: A9 24	LDA #$24	; A = 24
9661: 9D 0503	STA $0305,X
9664: CA	DEX
9665: 10 F8	BPL $965F

9667: A9 20	LDA #$20	; A = 20
9669: 8D 0403	STA $0304
966C: AD 1D04	LDA $041D
966F: 8D 0203	STA $0302
9672: AD 1C04	LDA $041C
9675: 8D 0303	STA $0303
9678: 18	CLC
9679: 69 20	ADC #$20
967B: 8D 1C04	STA $041C
967E: D0 06	BNE $9686

9680: EE 1D04	INC $041D

9683: 4C A796	JMP $96A7

----

9686: C9 C0	CMP #$C0
9688: D0 1D	BNE $96A7

968A: AD 1D04	LDA $041D
968D: C9 2B	CMP #$2B
968F: D0 08	BNE $9699

9691: A9 20	LDA #$20	; A = 20
9693: 8D 1D04	STA $041D

9696: 4C A296	JMP $96A2

----

9699: C9 23	CMP #$23
969B: D0 0A	BNE $96A7

969D: A9 28	LDA #$28	; A = 28
969F: 8D 1D04	STA $041D
96A2: A9 00	LDA #$00	; A = 00
96A4: 8D 1C04	STA $041C

96A7: AE 1904	LDX $0419
96AA: BD 5E91	LDA $915E,X
96AD: 29 80	AND #$80	; keep bits x... ....
96AF: F0 25	BEQ $96D6

Bit 7 Set
Draw Tiles until FF
First byte is X Start Position

96B1: AD 2E04	LDA $042E
96B4: 0A	ASL
96B5: AA	TAX
96B6: A0 00	LDY #$00	; Y = 00
96B8: BD AD94	LDA $94AD,X
96BB: 85 00	STA $00
96BD: BD AE94	LDA $94AE,X
96C0: 85 01	STA $01
96C2: B1 00	LDA ($00),Y
96C4: AA	TAX

96C5: C8	INY
96C6: B1 00	LDA ($00),Y
96C8: C9 FF	CMP #$FF
96CA: F0 07	BEQ $96D3

96CC: 9D 0503	STA $0305,X
96CF: E8	INX

96D0: 4C C596	JMP $96C5

----

96D3: EE 2E04	INC $042E
96D6: 20 DD96	JSR $96DD

96D9: EE 1904	INC $0419

96DC: 60	RTS

----

96DD: AE 1904	LDX $0419
96E0: BD 5E91	LDA $915E,X
96E3: 29 40	AND #$40	; keep bits .x.. ....
96E5: F0 42	BEQ $9729

Bit 6 Set

96E7: AD 1804	LDA $0418
96EA: 8D 2503	STA $0325
96ED: AD 1704	LDA $0417
96F0: 8D 2603	STA $0326
96F3: A9 48	LDA #$48	; A = 48
96F5: 8D 2703	STA $0327
96F8: A9 00	LDA #$00	; A = 00
96FA: 8D 2803	STA $0328
96FD: A9 FF	LDA #$FF	; A = FF
96FF: 8D 2903	STA $0329
9702: EE 1604	INC $0416
9705: AD 1704	LDA $0417
9708: 18	CLC
9709: 69 08	ADC #$08
970B: 8D 1704	STA $0417
970E: D0 19	BNE $9729

9710: AD 1804	LDA $0418
9713: C9 23	CMP #$23
9715: D0 08	BNE $971F

9717: A9 2B	LDA #$2B	; A = 2B
9719: 8D 1804	STA $0418

971C: 4C 2497	JMP $9724

----

971F: A9 23	LDA #$23	; A = 23
9721: 8D 1804	STA $0418
9724: A9 C0	LDA #$C0	; A = C0
9726: 8D 1704	STA $0417

9729: 60	RTS

----

972A: A2 0A	LDX #$0A	; X = 0A

972C: B5 84	LDA $84,X
972E: C9 F0	CMP #$F0
9730: D0 04	BNE $9736

9732: A9 FF	LDA #$FF	; A = FF
9734: 95 AC	STA $AC,X

9736: CA	DEX
9737: D0 F3	BNE $972C

9739: 60	RTS

----

973A: AC 1904	LDY $0419
973D: B9 5E91	LDA $915E,Y
9740: 29 20	AND #$20	; keep bits ..x. ....
9742: D0 01	BNE $9745

9744: 60	RTS

----

Bit 5 Set

9745: A2 0A	LDX #$0A	; X = 0A

9747: B5 AC	LDA $AC,X
9749: D0 04	BNE $974F

974B: CA	DEX

974C: 4C 4797	JMP $9747

----

974F: AC 2F04	LDY $042F
9752: B9 4092	LDA $9240,Y
9755: 9D 4404	STA $0444,X
9758: A9 EF	LDA #$EF	; A = EF
975A: 95 84	STA $84,X
975C: AD 6892	LDA $9268
975F: 95 70	STA $70,X
9761: A9 00	LDA #$00	; A = 00
9763: 95 AC	STA $AC,X
9765: BD 4404	LDA $0444,X
9768: C9 30	CMP #$30
976A: B0 2A	BCS $9796

976C: CA	DEX
976D: B9 5692	LDA $9256,Y
9770: 9D 4404	STA $0444,X
9773: A9 EF	LDA #$EF	; A = EF
9775: 95 84	STA $84,X
9777: AD 6992	LDA $9269
977A: 95 70	STA $70,X
977C: A9 00	LDA #$00	; A = 00
977E: 95 AC	STA $AC,X
9780: B9 4092	LDA $9240,Y
9783: C9 1B	CMP #$1B
9785: D0 0B	BNE $9792

9787: A9 78	LDA #$78	; A = 78
9789: 95 70	STA $70,X
978B: 95 71	STA $71,X
978D: A9 00	LDA #$00	; A = 00
978F: 8D 3004	STA $0430

9792: EE 2F04	INC $042F

9795: 60	RTS

----

9796: A9 68	LDA #$68	; A = 68
9798: 95 70	STA $70,X

979A: 4C 9297	JMP $9792

----

979D: A2 0A	LDX #$0A	; X = 0A
979F: B5 AC	LDA $AC,X
97A1: D0 1E	BNE $97C1

97A3: 8A	TXA
97A4: 48	PHA
97A5: BD 4404	LDA $0444,X
97A8: C9 23	CMP #$23
97AA: D0 06	BNE $97B2

97AC: 20 D897	JSR $97D8

97AF: 4C BF97	JMP $97BF

----

97B2: C9 30	CMP #$30
97B4: B0 06	BCS $97BC

97B6: 20 0EE7	JSR $E70E

97B9: 4C BF97	JMP $97BF

----

97BC: 20 EA97	JSR $97EA

97BF: 68	PLA
97C0: AA	TAX
97C1: CA	DEX
97C2: D0 DB	BNE $979F

97C4: 60	RTS

----

97C5: A2 04	LDX #$04	; X = 04
97C7: C9 14	CMP #$14
97C9: D0 02	BNE $97CD

97CB: A2 0C	LDX #$0C	; X = 0C

97CD: DE 5002	DEC $0250,X
97D0: AA	TAX
97D1: 38	SEC
97D2: E9 04	SBC #$04
97D4: AA	TAX
97D5: 10 F6	BPL $97CD

97D7: 60	RTS

----

Sprite 23 ?

97D8: 20 93FA	JSR $FA93
97DB: 20 8679	JSR $7986

97DE: 0A	ASL
97DF: 25 15	AND $15		; Frame Counter
97E1: 4A	LSR
97E2: 4A	LSR
97E3: 85 0C	STA $0C
97E5: A0 14	LDY #$14	; Y = 14

97E7: 4C 1579	JMP $7915

----

97EA: BD 4404	LDA $0444,X
97ED: 29 0F	AND #$0F	; keep bits .... xxxx
97EF: 0A	ASL
97F0: 85 00	STA $00
97F2: 0A	ASL
97F3: 18	CLC
97F4: 65 00	ADC $00
97F6: A8	TAY
97F7: B5 84	LDA $84,X
97F9: 85 00	STA $00
97FB: B5 70	LDA $70,X
97FD: 85 01	STA $01
97FF: A9 05	LDA #$05	; A = 05
9801: 85 02	STA $02
9803: 98	TYA
9804: 0A	ASL
9805: 0A	ASL
9806: AA	TAX

9807: B9 6A92	LDA $926A,Y
980A: F0 17	BEQ $9823

980C: 9D 0102	STA $0201,X
980F: A5 00	LDA $00
9811: 9D 0002	STA $0200,X
9814: B9 8292	LDA $9282,Y
9817: 9D 0202	STA $0202,X
981A: A5 01	LDA $01
981C: 9D 0302	STA $0203,X
981F: E8	INX
9820: E8	INX
9821: E8	INX
9822: E8	INX

9823: A5 01	LDA $01
9825: 18	CLC
9826: 69 08	ADC #$08
9828: 85 01	STA $01
982A: C8	INY
982B: C6 02	DEC $02
982D: 10 D8	BPL $9807

982F: 60	RTS

----

9830: EE 1A04	INC $041A
9833: AD 1A04	LDA $041A
9836: D0 1C	BNE $9854

9838: EE 2D04	INC $042D

983B: 60	RTS

----

983C: EE 1A04	INC $041A
983F: AD 1A04	LDA $041A
9842: C9 39	CMP #$39
9844: D0 0E	BNE $9854

9846: A9 00	LDA #$00	; A = 00
9848: 85 11	STA $11
984A: 8D 1A04	STA $041A
984D: 8D 2C04	STA $042C
9850: 8D 2D04	STA $042D

9853: 60	RTS

----

9854: 20 F7E5	JSR $E5F7
9857: 20 9D97	JSR $979D

985A: 60	RTS

----

985B: Palette for Zelda Title (3D Letters) (8 bytes)

3F 04 04
36 17 27 0F
FF

----

9863: Palette Codes for Triforce (First Screen) (8 bytes)

27 37 37 27 17 07 07 17

----

986B: A0 70	LDY #$70	; Y = 70

986D: B9 ED90	LDA $90ED,Y
9870: 99 FF01	STA $01FF,Y
9873: 88	DEY
9874: D0 F7	BNE $986D

9876: 20 C398	JSR $98C3

9879: AD 1204	LDA $0412
987C: D0 2D	BNE $98AB

987E: A0 07	LDY #$07	; Y = 07

9880: B9 5B98	LDA $985B,Y
9883: 99 0203	STA $0302,Y
9886: 88	DEY
9887: 10 F7	BPL $9880

9889: AC 1304	LDY $0413
988C: B9 6398	LDA $9863,Y
988F: 8D 0703	STA $0307
9892: A9 06	LDA #$06	; A = 06
9894: 8D 1204	STA $0412
9897: EE 1304	INC $0413
989A: AD 1304	LDA $0413
989D: C9 08	CMP #$08
989F: D0 0A	BNE $98AB

98A1: A9 10	LDA #$10	; A = 10
98A3: 8D 1204	STA $0412
98A6: A9 00	LDA #$00	; A = 00
98A8: 8D 1304	STA $0413

98AB: CE 1204	DEC $0412

98AE: 60	RTS

----

Tables for Waterfall Sprites (14 bytes)

98AF: B2 B4 B6 B8 A2 A4 A6 A8		Sprite Codes (8 bytes)
98B7: 50 58 60 68			X Positions (4 bytes)
98BB: 70 80 90 A0 B0 C0 D0 E0		Y Positions (8 bytes)

----

98C3: AD 1F04	LDA $041F
98C6: D0 21	BNE $98E9

98C8: A9 B6	LDA #$B6	; A = B6
98CA: 8D 2004	STA $0420
98CD: A9 C8	LDA #$C8	; A = C8
98CF: 8D 2104	STA $0421
98D2: A9 D8	LDA #$D8	; A = D8
98D4: 8D 2204	STA $0422
98D7: A9 C0	LDA #$C0	; A = C0
98D9: 8D 2304	STA $0423
98DC: A9 D0	LDA #$D0	; A = D0
98DE: 8D 2404	STA $0424
98E1: A9 DD	LDA #$DD	; A = DD
98E3: 8D 2504	STA $0425
98E6: EE 1F04	INC $041F

98E9: A2 02	LDX #$02	; X = 02
98EB: 20 F598	JSR $98F5

98EE: CA	DEX
98EF: 10 FA	BPL $98EB

98F1: 20 4399	JSR $9943

98F4: 60	RTS

----

98F5: FE 2004	INC $0420,X
98F8: FE 2004	INC $0420,X
98FB: BD 2004	LDA $0420,X
98FE: C9 E3	CMP #$E3
9900: 90 05	BCC $9907

9902: A9 B2	LDA #$B2	; A = B2
9904: 9D 2004	STA $0420,X

9907: 85 05	STA $05
9909: A8	TAY
990A: A9 10	LDA #$10	; A = 10
990C: C0 C2	CPY #$C2
990E: B0 07	BCS $9917

9910: 4A	LSR
9911: C0 B9	CPY #$B9
9913: B0 02	BCS $9917

9915: A9 00	LDA #$00	; A = 00

9917: 85 00	STA $00
9919: 86 02	STX $02
991B: BC BB98	LDY $98BB,X
991E: A2 03	LDX #$03	; X = 03

9920: BD AF98	LDA $98AF,X
9923: 18	CLC
9924: 65 00	ADC $00
9926: 99 0102	STA $0201,Y
9929: BD B798	LDA $98B7,X
992C: 99 0302	STA $0203,Y
992F: A5 05	LDA $05
9931: 99 0002	STA $0200,Y
9934: A9 00	LDA #$00	; A = 00
9936: 99 0202	STA $0202,Y
9939: C8	INY
993A: C8	INY
993B: C8	INY
993C: C8	INY
993D: CA	DEX
993E: 10 E0	BPL $9920

9940: A6 02	LDX $02

9942: 60	RTS

----

9943: A2 03	LDX #$03	; X = 03
9945: A0 F0	LDY #$F0	; Y = F0
9947: A5 15	LDA $15		; Frame Counter
9949: 29 08	AND #$08	; keep bits .... x...
994B: 7D B398	ADC $98B3,X
994E: 99 0102	STA $0201,Y
9951: A9 A8	LDA #$A8	; A = A8
9953: 99 0002	STA $0200,Y
9956: BD B798	LDA $98B7,X
9959: 99 0302	STA $0203,Y
995C: A9 00	LDA #$00	; A = 00
995E: 99 0202	STA $0202,Y
9961: C8	INY
9962: C8	INY
9963: C8	INY
9964: C8	INY
9965: CA	DEX
9966: 10 DF	BPL $9947

9968: 60	RTS

----

*** rendu ***

--------

9BD7: Unused Space (129 bytes)

--------

9D00

--------

9D2A

--------

9F11: 99 2A65	STA $652A,Y
9F14: 98	TYA
9F15: 0A	ASL
9F16: A8	TAY
9F17: A9 00	LDA #$00	; A = 00
9F19: 8D 2604	STA $0426
9F1C: 99 9C6D	STA $6D9C,Y
9F1F: C8	INY
9F20: 99 9C6D	STA $6D9C,Y

9F23: 8A	TXA
9F24: 48	PHA
9F25: 20 2A9D	JSR $9D2A
9F28: 68	PLA
9F29: AA	TAX

9F2A: AC 2304	LDY $0423
9F2D: B9 3806	LDA $0638,Y
9F30: AC 2504	LDY $0425
9F33: 91 C4	STA ($C4),Y
9F35: C9 24	CMP #$24
9F37: F0 40	BEQ $9F79

9F39: BD 3306	LDA $0633,X
9F3C: D0 3B	BNE $9F79

9F3E: A0 18	LDY #$18	; Y = 18
9F40: A9 22	LDA #$22	; A = 22
9F42: 91 C0	STA ($C0),Y
9F44: C8	INY
9F45: A9 FF	LDA #$FF	; A = FF
9F47: 91 C0	STA ($C0),Y
9F49: A0 25	LDY #$25	; Y = 25
9F4B: A9 08	LDA #$08	; A = 08
9F4D: 91 C0	STA ($C0),Y
9F4F: 8A	TXA
9F50: 48	PHA
9F51: 0A	ASL
9F52: 0A	ASL
9F53: 0A	ASL
9F54: A8	TAY
9F55: A2 00	LDX #$00	; X = 00
9F57: B9 3806	LDA $0638,Y
9F5A: DD EB9E	CMP $9EEB,X
9F5D: D0 0F	BNE $9F6E

9F5F: C8	INY
9F60: E8	INX
9F61: E0 05	CPX #$05
9F63: 90 F2	BCC $9F57

9F65: 68	PLA
9F66: 48	PHA
9F67: AA	TAX
9F68: A0 00	LDY #$00	; Y = 00
9F6A: A9 01	LDA #$01	; A = 01
9F6C: 91 CC	STA ($CC),Y

9F6E: 68	PLA
9F6F: AA	TAX
9F70: A9 01	LDA #$01	; A = 01
9F72: 8D 2604	STA $0426
9F75: A0 00	LDY #$00	; Y = 00
9F77: 91 C6	STA ($C6),Y

9F79: EE 2304	INC $0423
9F7C: EE 2504	INC $0425
9F7F: AD 2504	LDA $0425
9F82: C9 08	CMP #$08
9F84: D0 A4	BNE $9F2A

9F86: E8	INX
9F87: A9 00	LDA #$00	; A = 00
9F89: 8D 2504	STA $0425
9F8C: AD 2604	LDA $0426
9F8F: F0 03	BEQ $9F94

9F91: 20 C8A3	JSR $A3C8

9F94: E6 16	INC $16		; Selected Save Slot (0-2)
9F96: A5 16	LDA $16
9F98: C9 03	CMP #$03
9F9A: F0 03	BEQ $9F9F

9F9C: 4C 0D9F	JMP $9F0D

----

9F9F: A9 00	LDA #$00	; A = 00
9FA1: 8D 2604	STA $0426
9FA4: 85 16	STA $16

9FA6: 20 DE9F	JSR $9FDE

9FA9: A9 01	LDA #$01	; A = 01
9FAB: 85 11	STA $11

9FAD: 4C 03A8	JMP $A803

--------

A287: 29 32 16		Link Tunic Color in Selection Screen

--------

A2A0
A35D

--------

A531: A4 0A	LDY $0A
A533: B9 3006	LDA $0630,Y

A536: 20 556E	JSR $6E55

A539: A6 0B	LDX $0B
A53B: A5 01	LDA $01
A53D: 9D 0203	STA $0302,X
A540: A5 02	LDA $02
A542: 9D 0303	STA $0303,X
A545: A5 03	LDA $03
A547: D0 19	BNE $A562

A549: A5 01	LDA $01
A54B: C9 24	CMP #$24
A54D: D0 11	BNE $A560

A54F: A5 02	LDA $02
A551: C9 24	CMP #$24
A553: D0 0B	BNE $A560

A555: A4 0A	LDY $0A
A557: B9 3306	LDA $0633,Y
A55A: D0 04	BNE $A560

A55C: A9 24	LDA #$24	; A = 24
A55E: D0 02	BNE $A562

A560: A9 00	LDA #$00	; A = 00
A562: 9D 0403	STA $0304,X
A565: 8A	TXA
A566: 18	CLC
A567: 69 06	ADC #$06
A569: 85 0B	STA $0B
A56B: E6 0A	INC $0A
A56D: A5 0A	LDA $0A
A56F: C9 03	CMP #$03
A571: D0 BE	BNE $A531

A573: A0 FF	LDY #$FF	; Y = FF
A575: 84 16	STY $16
A577: 8C 2605	STY $0526
A57A: C8	INY
A57B: E6 16	INC $16
A57D: B9 3306	LDA $0633,Y
A580: F0 F8	BEQ $A57A

A582: A9 00	LDA #$00	; A = 00
A584: 85 13	STA $13
A586: E6 11	INC $11

A588: 60	RTS

--------

A830: Unused Space (D0 bytes)

----

A900: A5 13	LDA $13		; Routine Index
A902: 20 E2E5	JSR $E5E2	; Go to Routine A in following table

----

A905: Table for Ending (5 * 2 = A bytes)

0FA9 -> A90F
3FA9 -> A93F
7FA9 -> A97F
F5A9 -> A9F5
FFA9 -> A9FF

----

Ending - Pointer 0

A90F: 20 21A9	JSR $A921

A912: A5 13	LDA $13		; Routine Index
A914: F0 42	BEQ $A958

A916: 20 F7E5	JSR $E5F7	; Remove All Sprites
A919: 20 31F2	JSR $F231

A91C: A2 01	LDX #$01	; X = 01

A91E: 4C CA79	JMP $79CA

----

A921: A5 28	LDA $28
A923: D0 14	BNE $A939

A925: AD 0906	LDA $0609	; Current Song
A928: D0 0F	BNE $A939

A92A: 20 4072	JSR $7240

A92D: A5 7C	LDA $7C
A92F: C9 11	CMP #$11
A931: B0 06	BCS $A939

A933: A9 80	LDA #$80	; A = 80
A935: 85 28	STA $28
A937: E6 13	INC $13		; Routine Index

A939: 60	RTS

----

A93A: 23 D8 68 00 FF	Table for ? (PPU macro) (5 bytes)

----

Ending - Pointer 1

A93F: A0 04	LDY #$04	; Y = 04

A941: B9 3AA9	LDA $A93A,Y
A944: 99 0203	STA $0302,Y
A947: 88	DEY
A948: 10 F7	BPL $A941

A94A: A9 A4	LDA #$A4	; A = A4
A94C: 8D 5F04	STA $045F
A94F: A9 00	LDA #$00	; A = 00
A951: 8D 1604	STA $0416
A954: 85 AD	STA $AD
A956: E6 13	INC $13		; Routine Index

A958: 60	RTS

----

A959: Text for Zelda (26 bytes)

1D 11 0A 17 14 1C 24 15 12 17 14 28 22 18 1E 2A 1B 8E
64
1D 11 0E 24 11 0E 1B 18 24 18 0F 24 11 22 1B 1E 15 0E EC

THANKS LINK,YOU'RE
 
THE HERO OF HYRULE.

64 = Space character, and skip to third line

----

Ending - Pointer 2

A97F: 20 95A9	JSR $A995

A982: A5 AD	LDA $AD
A984: F0 06	BEQ $A98C

A986: A9 50	LDA #$50	; A = 50
A988: 85 29	STA $29
A98A: E6 13	INC $13		; Routine Index

A98C: 60	RTS

----

A98D: 21 A4 01 24 FF	Table for ? (PPU macro) (5 bytes)

----

A992: C4 E4	Offsets for second and third lines of text (2 bytes)

----

A994: A4 20	LDY $20
A996: 31 F2	AND ($F2),Y
A998: A5 29	LDA $29
A99A: D0 58	BNE $A9F4

A99C: A9 06	LDA #$06	; A = 06
A99E: 85 29	STA $29
A9A0: A0 04	LDY #$04	; Y = 04

A9A2: B9 8DA9	LDA $A98D,Y
A9A5: 99 0203	STA $0302,Y
A9A8: 88	DEY
A9A9: 10 F7	BPL $A9A2

A9AB: AD 5F04	LDA $045F
A9AE: 8D 0303	STA $0303
A9B1: EE 5F04	INC $045F
A9B4: A9 59	LDA #$59	; A = 59
A9B6: 85 00	STA $00		; Text for Zelda - Low Byte
A9B8: A9 A9	LDA #$A9	; A = A9
A9BA: 85 01	STA $01		; Text for Zelda - High Byte
A9BC: AC 1604	LDY $0416
A9BF: EE 1604	INC $0416
A9C2: B1 00	LDA ($00),Y
A9C4: 29 3F	AND #$3F	; keep bits ..xx xxxx
A9C6: C9 25	CMP #$25
A9C8: F0 E1	BEQ $A9AB

A9CA: 8D 0503	STA $0305
A9CD: A9 10	LDA #$10	; A = 10
A9CF: 8D 0406	STA $0604
A9D2: B1 00	LDA ($00),Y
A9D4: 29 C0	AND #$C0	; keep bits xx.. ....
A9D6: F0 1C	BEQ $A9F4

A9D8: A0 02	LDY #$02	; Y = 02
A9DA: C9 C0	CMP #$C0
A9DC: F0 06	BEQ $A9E4

A9DE: 88	DEY
A9DF: C9 40	CMP #$40
A9E1: F0 01	BEQ $A9E4

A9E3: 88	DEY

A9E4: B9 92A9	LDA $A992,Y
A9E7: 8D 5F04	STA $045F
A9EA: C0 02	CPY #$02
A9EC: D0 06	BNE $A9F4

A9EE: E6 AD	INC $AD
A9F0: A9 00	LDA #$00	; A = 00
A9F2: 85 AC	STA $AC

A9F4: 60	RTS

----

A9F5: A5 29	LDA $29
A9F7: D0 FB	BNE $A9F4

A9F9: 20 E96E	JSR $6EE9

A9FC: E6 13	INC $13		; Routine Index

A9FE: 60	RTS

----

A9FF: A9 08	LDA #$08	; A = 08
AA01: 8D 0B05	STA $050B

AA04: 20 906C	JSR $6C90

AA07: 8D 1204	STA $0412
AA0A: 8D 1304	STA $0413

AA0D: 4C F7E5	JMP $E5F7	; Remove All Sprites

----

AA10: A5 13	LDA $13		; Routine Index
AA12: 20 E2E5	JSR $E5E2	; Go to Routine A in following table

----

AA15: Pointer table for ? (5 * 2 = A bytes)

23AA -> AA23
A9AA -> AAA9
A9AA -> AAA9
C4AB -> ABC4
7FAB -> AB7F

----

AA1F: 0F 12 16 2A	Palettes for Flashing before Ending Song (4 bytes)

----

AA23: 20 F7E5	JSR $E5F7	; Remove All Sprites

AA26: EE 0605	INC $0506
AA29: AD 0605	LDA $0506
AA2C: C9 C0	CMP #$C0
AA2E: F0 20	BEQ $AA50

AA30: 20 62AA	JSR $AA62

AA33: AE 0605	LDX $0506
AA36: E0 40	CPX #$40
AA38: 90 15	BCC $AA4F

AA3A: A0 23	LDY #$23	; Y = 23

AA3C: B9 7E6B	LDA $6B7E,Y
AA3F: 99 0203	STA $0302,Y
AA42: 88	DEY
AA43: 10 F7	BPL $AA3C

AA45: 8A	TXA
AA46: 29 03	AND #$03	; keep bits .... ..xx
AA48: AA	TAX
AA49: BD 1FAA	LDA $AA1F,X
AA4C: 8D 1503	STA $0315

AA4F: 60	RTS

----

AA50: A9 10	LDA #$10	; A = 10
AA52: 8D 0006	STA $0600
AA55: A9 40	LDA #$40	; A = 40
AA57: 85 28	STA $28
AA59: A9 40	LDA #$40	; A = 40
AA5B: 85 4D	STA $4D
AA5D: E6 13	INC $13		; Routine Index

AA5F: 4C 33AA	JMP $AA33

----

AA62: A5 70	LDA $70
AA64: 85 83	STA $83
AA66: A5 84	LDA $84
AA68: 38	SEC
AA69: E9 10	SBC #$10
AA6B: 85 97	STA $97
AA6D: A2 00	LDX #$00	; X = 00

AA6F: 20 93FA	JSR $FA93
AA72: 20 8879	JSR $7988

AA75: 85 0C	STA $0C
AA77: A9 48	LDA #$48	; A = 48
AA79: 8D 4303	STA $0343
AA7C: A9 4C	LDA #$4C	; A = 4C
AA7E: 8D 4403	STA $0344
AA81: A0 21	LDY #$21	; Y = 21

AA83: 20 2C79	JSR $792C

AA86: A9 1B	LDA #$1B	; A = 1B
AA88: A2 13	LDX #$13	; X = 13
AA8A: 20 0EE7	JSR $E70E

AA8D: A2 01	LDX #$01	; X = 01
AA8F: 20 93FA	JSR $FA93

AA92: 8A	TXA
AA93: 20 DB77	JSR $77DB

AA96: A5 71	LDA $71
AA98: 85 72	STA $72
AA9A: A5 85	LDA $85
AA9C: 38	SEC
AA9D: E9 10	SBC #$10
AA9F: 85 86	STA $86

AAA1: A2 02	LDX #$02	; X = 02
AAA3: A9 1B	LDA #$1B	; A = 1B
AAA5: 20 0EE7	JSR $E70E

AAA8: 60	RTS

----

AAA9: A5 4D	LDA $4D
AAAB: F0 1A	BEQ $AAC7

AAAD: 20 F7E5	JSR $E5F7	; Remove All Sprites

AAB0: A5 4D	LDA $4D
AAB2: C9 04	CMP #$04
AAB4: 90 10	BCC $AAC6

AAB6: 20 62AA	JSR $AA62

AAB9: A5 13	LDA $13		; Routine Index
AABB: C9 01	CMP #$01
AABD: D0 07	BNE $AAC6

AABF: A5 28	LDA $28
AAC1: D0 03	BNE $AAC6

AAC3: 20 3CAB	JSR $AB3C

AAC6: 60	RTS

----

AAC7: A9 6A	LDA #$6A	; A = 6A
AAC9: 85 14	STA $14		; PPU Loading Index
AACB: E6 13	INC $13		; Routine Index

AACD: 60	RTS

----

AACE: 22 A4 01 24 FF	PPU Macro for ? (5 bytes)

----

AAD3: Table for ? (34 bytes)

AC AD AE AF B0 B1 B2 B3 E4 E5 E6 E7 E8 E9 EA EB
EC ED EE EF F0 F1 F2 F3 F4 F5 F6 F7 F8 F9 FA FB
46 47 48 49 4A 4B 4C 4D 4E 4F 50 51 52 53 54 55
56 57 58 59

----

AB07: Ending Text (35 bytes)


0F 12 17 0A 15 15 22 28 19 0E 0A 0C 0E 24 1B 0E		FINALLY,PEACE RE
1D 1E 1B 17 1C 24 1D 18 24 11 22 1B 1E 15 0E 2C		TURNS TO HYRULE.
1D 11 12 1C 24 0E 17 0D 1C 24 1D 11 0E 24 1C 1D		THIS ENDS THE ST
18 1B 22 2C						ORY.

FF	End Byte

----

AB3C: EE 1204	INC $0412
AB3F: AD 1204	LDA $0412
AB42: 29 07	AND #$07	; keep bits .... .xxx
AB44: C9 04	CMP #$04
AB46: D0 33	BNE $AB7B

AB48: A0 04	LDY #$04	; Y = 04
AB4A: B9 CEAA	LDA $AACE,Y
AB4D: 99 0203	STA $0302,Y
AB50: 88	DEY
AB51: 10 F7	BPL $AB4A

AB53: AC 1304	LDY $0413
AB56: B9 07AB	LDA $AB07,Y
AB59: C9 FF	CMP #$FF
AB5B: F0 1F	BEQ $AB7C

AB5D: 8D 0503	STA $0305
AB60: C9 24	CMP #$24
AB62: F0 05	BEQ $AB69

AB64: A9 10	LDA #$10	; A = 10
AB66: 8D 0406	STA $0604
AB69: EE 1304	INC $0413
AB6C: B9 D3AA	LDA $AAD3,Y
AB6F: 8D 0303	STA $0303
AB72: C9 A0	CMP #$A0
AB74: B0 05	BCS $AB7B

AB76: A9 23	LDA #$23	; A = 23
AB78: 8D 0203	STA $0302

AB7B: 60	RTS

----

AB7C: E6 13	INC $13		; Routine Index
AB7E: 60	RTS

----

Probably related to the Triforce at the end of the Credits

AB7F: 20 F7E5	JSR $E5F7	; Remove All Sprites

AB82: A2 02	LDX #$02	; X = 02
AB84: A9 78	LDA #$78	; A = 78
AB86: 95 70	STA $70,X	; Enemy X Position
AB88: A9 88	LDA #$88	; A = 88
AB8A: 95 84	STA $84,X	; Enemy Y Position
AB8C: A9 0E	LDA #$0E	; A = 0E

AB8E: 20 0EE7	JSR $E70E

AB91: A2 02	LDX #$02	; X = 02
AB93: A9 3E	LDA #$3E	; A = 3E
AB95: 9D 4F03	STA $034F,X	; Enemy Code

AB98: 20 B8AB	JSR $ABB8

AB9B: A5 28	LDA $28
AB9D: D0 DF	BNE $AB7E

AB9F: A5 F8	LDA $F8		; Controller 1 buttons pressed
ABA1: 29 10	AND #$10	; keep bits ...x .... (Start button)
ABA3: F0 D9	BEQ $AB7E

ABA5: 20 A3EB	JSR $EBA3

ABA8: A9 0D	LDA #$0D	; A = 0D
ABAA: 85 12	STA $12		; Game Mode

ABAC: 20 25E6	JSR $E625
ABAF: 20 6DE4	JSR $E46D
ABB2: 20 E96E	JSR $6EE9

ABB5: 4C 5AAF	JMP $AF5A

----

ABB8: 20 93FA	JSR $FA93

ABBB: A9 0B	LDA #$0B	; A = 0B
ABBD: 4C DF77	JMP $77DF

----

*** rendu ***

--------

AF90: Unused Space (FC0 bytes)

--------

BFC0: Unused Space (3A bytes)

--------

// End of Bank //

--------
