
The Legend of Zelda
Bank 5
0x14000 - 0x17FFF

--------

14000: 20 0680	JSR $8006
14003: 4C 89ED	JMP $ED89

----

14006: A5 E1	LDA $E1
14008: A4 10	LDY $10		; Current Level (0 = Overworld)
1400A: F0 15	BEQ $14021

1400C: 20 E2E5	JSR $E5E2	; Go to Routine A in following table

----

1400F: Pointer table for ? (9 * 2 = 12 bytes)

5680 -> 14056
3880 -> 14038
5780 -> 14057
5E80 -> 1405E
6280 -> 14062
6680 -> 14066
7680 -> 14076
D480 -> 140D4
0F81 -> 1410F

----

14021: 20 E2E5	JSR $E5E2	; Go to Routine A in following table

----

14024: Pointer table for ? (A * 2 = 14 bytes)

5680 -> 14056
9A81 -> 1419A
3880 -> 14038
5780 -> 14057
5E80 -> 1405E
6280 -> 14062
6C80 -> 1406C
7080 -> 14070
D480 -> 140D4
0F81 -> 1410F

----

14038: 20 F7E5	JSR $E5F7
1403B: 20 DE71	JSR $71DE
1403E: 20 79E6	JSR $E679

14041: A9 EF	LDA #$EF	; A = EF
14043: 85 FC	STA $FC		; Vertical Scrolling Offset
14045: 85 5C	STA $5C		; Vertical Scrolling Offset (high byte)

14047: A9 01	LDA #$01	; A = 01
14049: 20 3081	JSR $8130

1404C: E6 E1	INC $E1
1404E: A9 2B	LDA #$2B	; A = 2B
14050: 85 5E	STA $5E
14052: A9 7F	LDA #$7F	; A = 7F
14054: 85 5D	STA $5D

14056: 60	RTS

--------

142A8: A5 13	LDA $13		; Routine Index
142AA: 20 E2E5	JSR $E5E2	; Go to routine A in following table

----

142AD: Pointer table for ? (7 * 2 = E bytes)

0E83 -> 1430E
BB82 -> 142BB
1F83 -> 1431F
3D83 -> 1433D
3D83 -> 1433D
5C83 -> 1435C
9E83 -> 1439E

----

142BB: 20 3DEA	JSR $EA3D
142BE: 20 38F2	JSR $F238

142C1: A5 EE	LDA $EE
142C3: 8D 2105	STA $0521

142C6: 20 C283	JSR $83C2

142C9: C6 ED	DEC $ED
142CB: E6 13	INC $13		; Routine Index

142CD: 20 8FE6	JSR $E68F

142D0: A5 EC	LDA $EC		; Next Location
142D2: 30 20	BMI $142F4

142D4: A5 EB	LDA $EB		; Current Location
142D6: 48	PHA
142D7: A4 98	LDY $98		; Link Facing Direction (and more)
142D9: C0 08	CPY #$08	; 08 = Facing Up
142DB: F0 04	BEQ $142E1

142DD: A5 EC	LDA $EC		; Next Location
142DF: 85 EB	STA $EB		; Current Location

142E1: 20 D783	JSR $83D7

142E4: A9 15	LDA #$15	; A = 15
142E6: 85 E9	STA $E9
142E8: A4 98	LDY $98		; Link Facing Direction (and more)
142EA: C0 08	CPY #$08	; 08 = Facing Up
142EC: F0 07	BEQ $142F5

142EE: 20 C4A8	JSR $A8C4

142F1: 68	PLA
142F2: 85 EB	STA $EB		; Current Location

142F4: 60	RTS

----

142F5: 20 FB82	JSR $82FB
142F8: 4C F182	JMP $82F1

----

142FB: A5 10	LDA $10		; Current Level (0 = Overworld)
142FD: F0 0E	BEQ $1430D

142FF: A5 EE	LDA $EE
14301: 48	PHA
14302: AD 2105	LDA $0521
14305: 85 EE	STA $EE

14307: 20 F6A4	JSR $A4F6

1430A: 68	PLA
1430B: 85 EE	STA $EE

1430D: 60	RTS

----

Table at 142AD - Pointer 0

1430E: AD 2205	LDA $0522
14311: F0 04	BEQ $14317

14313: A5 EA	LDA $EA		; Location for Whistle Warp
14315: 85 EB	STA $EB		; Current Location

14317: AD 1A05	LDA $051A
1431A: F0 1E	BEQ $1433A

1431C: 4C 34FF	JMP $FF34

--------

143C2: A5 98	LDA $98		; Link Facing Direction (and more)
143C4: 4A	LSR
143C5: 29 05	AND #$05	; keep bits .... .x.x
143C7: 85 00	STA $00
143C9: A5 98	LDA $98		; Link Facing Direction (and more)
143CB: 0A	ASL
143CC: 29 0A	AND #$0A	; keep bits .... x.x.
143CE: 05 00	ORA $00
143D0: 85 EE	STA $EE

143D2: 60	RTS

----

143D3: 00 55 AA FF	Table for Outer/Inner Palette Mappings (4 bytes)

----

143D7: A8	TAY
143D8: B9 7E68	LDA $687E,Y	; Screen Attributes - Table 0
143DB: 29 03	AND #$03	; keep bits .... ..xx
143DD: AA	TAX
143DE: BD D383	LDA $83D3,X
143E1: A2 2F	LDX #$2F	; X = 2F
143E3: 9D 3005	STA $0530,X
143E6: CA	DEX
143E7: 10 FA	BPL $143E3

143E9: B9 FE68	LDA $68FE,Y	; Screen Attributes - Table 1
143EC: 29 03	AND #$03	; keep bits .... ..xx
143EE: AA	TAX
143EF: A0 09	LDY #$09	; Y = 09
143F1: 98	TYA
143F2: 29 07	AND #$07	; keep bits .... .xxx
143F4: F0 0E	BEQ $14404

143F6: C9 07	CMP #$07
143F8: F0 0A	BEQ $14404

143FA: C0 21	CPY #$21
143FC: B0 0C	BCS $1440A

143FE: BD D383	LDA $83D3,X
14401: 99 3005	STA $0530,Y
14404: C8	INY
14405: C0 27	CPY #$27
14407: 90 E8	BCC $143F1

14409: 60	RTS

--------

14521: AD 0220	LDA $2002
14524: 29 40	AND #$40	; keep bits .x.. ....
14526: F0 F9	BEQ $14521

40 = Number of scanlines for the HUD

14528: AD 0220	LDA $2002
1452B: A0 03	LDY #$03	; Y = 03

1452D: A2 30	LDX #$30	; X = 30

1452F: CA	DEX
14530: 10 FD	BPL $1452F

14532: 88	DEY
14533: 10 F8	BPL $1452D

14535: EA	NOP
14536: EA	NOP
14537: EA	NOP
14538: EA	NOP
14539: EA	NOP
1453A: EA	NOP
1453B: EA	NOP
1453C: EA	NOP
1453D: EA	NOP

1453E: A5 12	LDA $12		; Game Mode
14540: C9 08	CMP #$08
14542: B0 48	BCS $1458C

14544: A5 13	LDA $13		; Routine Index
14546: F0 43	BEQ $1458B

14548: A5 98	LDA $98		; Link Facing Direction
1454A: C9 04	CMP #$04
1454C: 90 1F	BCC $1456D

1454E: A0 5E	LDY #$5E	; Y = 5E

14550: EA	NOP
14551: 88	DEY
14552: 10 FC	BPL $14550

14554: EA	NOP
14555: EA	NOP
14556: EA	NOP
14557: EA	NOP
14558: EA	NOP

14559: AD 0220	LDA $2002
1455C: A5 58	LDA $58
1455E: A4 E2	LDY $E2
14560: 8D 0620	STA $2006
14563: 8C 0620	STY $2006
14566: AD 0720	LDA $2007
14569: AD 0720	LDA $2007

1456C: 60	RTS

----

1456D: A0 5E	LDY #$5E	; Y = 5E

1456F: EA	NOP
14570: 88	DEY
14571: 10 FC	BPL $1456F

14573: EA	NOP
14574: EA	NOP
14575: EA	NOP

14576: A5 FF	LDA $FF
14578: 29 FE	AND #$FE	; keep bits xxxx xxx.
1457A: 05 5F	ORA $5F
1457C: 85 FF	STA $FF
1457E: 8D 0020	STA $2000
14581: A5 FD	LDA $FD		; Horizontal Scrolling Offset
14583: 8D 0520	STA $2005
14586: A9 00	LDA #$00	; A = 00
14588: 8D 0520	STA $2005

1458B: 60	RTS

----

1458C: C9 11	CMP #$11
1458E: B0 03	BCS $14593

14590: 4C 25E6	JMP $E625

----

14593: A5 FF	LDA $FF
14595: 09 01	ORA #$01	; set  bits .... ...x
14597: 85 FF	STA $FF
14599: 8D 0020	STA $2000

1459C: 60	RTS

--------

14646: Table...
1464A: Table...

--------

14672: 18 E8 28 D8	Table for ? (4 bytes)

Some enemy or item velocities ?

----

14676: Table for Mixed Enemy Groups (C9 bytes)

03 03 04 03 04 03 04 03 04 1A 1A 02 01 02 01 0102 01 02 01 0F 02 01 10 02 0F 1A 10 1A 0F 1A 0908 08 08 08 08 07 08 07 08 09 08 09 08 0A 07 0A07 07 03 0A 04 0A 04 04 4A 00 00 00 13 13 00 134A 00 00 00 1B 1B 1B 1B 2B 2B 2B 13 13 1B 1B 1B16 30 30 1B 1B 16 00 00 2B 2B 2B 23 23 24 23 242B 2B 12 12 12 00 00 00 2B 2B 13 13 17 17 2B 2B0C 0B 0B 30 30 30 2B 2B 05 05 05 1B 1B 1B 4A 0000 00 17 17 17 17 4A 00 00 00 23 24 23 24 16 0C0B 0C 0B 16 2B 2B 2B 27 27 27 27 27 05 06 06 0506 05 00 00 23 23 24 23 24 2B 17 23 23 17 24 1724 2D 2D 2D 2C 23 24 23 24 2D 2D 2D 2C 0C 0B 0C0B 2D 2D 2D 2C 27 27 27 27

----

1473F: Pointer table for Mixed Enemy Groups (1E * 2 = 3C bytes)

First pointer is for Enemy Code 22
22-3F

7686 -> 14676
7B86 -> 1467B
7F86 -> 1467F
8586 -> 14685
8986 -> 14689
8F86 -> 1468F
9586 -> 14695	(28)
9A86 -> 1469A9E86 -> 1469E
A386 -> 146A3
A886 -> 146A8
AE86 -> 146AE
B686 -> 146B6
BE86 -> 146BE
C686 -> 146C6	(30)
CE86 -> 146CED686 -> 146D6
DE86 -> 146DE
E486 -> 146E4
EC86 -> 146EC
F486 -> 146F4
FC86 -> 146FC
0487 -> 14704	(38)
0A87 -> 1470A
1287 -> 14712
1A87 -> 1471A
1F87 -> 1471F
2787 -> 14727
2F87 -> 1472F
3787 -> 14737

----

1477B: A6 13	LDX $13		; Routine Index
1477D: F0 47	BEQ $147C6

1477F: CA	DEX
14780: D0 0C	BNE $1478E

14782: A5 E9	LDA $E9
14784: 30 05	BMI $1478B

14786: 20 16AC	JSR $AC16
14789: 90 02	BCC $1478D

1478B: E6 13	INC $13		; Routine Index

1478D: 60	RTS

----

1478E: CA	DEX
1478F: D0 28	BNE $147B9

14791: A4 EB	LDY $EB		; Current Location

14793: 20 8DB6	JSR $B68D
14796: D0 26	BNE $147BE

14798: A5 98	LDA $98		; Link Facing Direction (and more)
1479A: 20 60B5	JSR $B560

1479D: 38	SEC
1479E: E5 EB	SBC $EB		; Current Location

147A0: 20 2170	JSR $7021

147A3: 18	CLC
147A4: 65 EB	ADC $EB		; Current Location
147A6: A8	TAY

147A7: 20 8DB6	JSR $B68D
147AA: F0 12	BEQ $147BE

147AC: AD 1F05	LDA $051F
147AF: D0 0D	BNE $147BE

147B1: A9 C0	LDA #$C0	; A = C0
147B3: 8D 1C05	STA $051C
147B6: E6 13	INC $13		; Routine Index

147B8: 60	RTS

----

147B9: 20 B774	JSR $74B7
147BC: D0 FA	BNE $147B8

147BE: A9 00	LDA #$00	; A = 00
147C0: 85 13	STA $13		; Routine Index
147C2: 8D 1F05	STA $051F

147C5: 60	RTS

----

Related to Link stepping out of a cave in Overworld

147C6: 20 3DEA	JSR $EA3D
147C9: 20 51EA	JSR $EA51

147CC: A9 05	LDA #$05	; A = 05
147CE: A0 1F	LDY #$1F	; Y = 1F
147D0: 20 08E6	JSR $E608

147D3: A9 00	LDA #$00	; A = 00
147D5: 85 54	STA $54
147D7: 85 55	STA $55
147D9: A4 EB	LDY $EB		; Current Location
147DB: B9 FE6A	LDA $6AFE,Y	; Screen Attributes - Table 5
147DE: 8D CD04	STA $04CD

147E1: 20 B6B0	JSR $B0B6

147E4: A5 5A	LDA $5A
147E6: F0 38	BEQ $14820

147E8: A5 10	LDA $10		; Current Level (0 = Overworld)
147EA: D0 29	BNE $14815

147EC: A4 EB	LDY $EB		; Current Location
147EE: B9 7E68	LDA $687E,Y	; Screen Attributes - Table 0
147F1: 29 F0	AND #$F0	; keep bits xxxx .... (X Position Out of Cave)
147F3: 85 70	STA $70		; Link X Position
147F5: B9 FE6A	LDA $6AFE,Y	; Screen Attributes - Table 5
147F8: 29 07	AND #$07	; keep bits .... .xxx (Y Position Out of Cave)
147FA: 0A	ASL
147FB: 0A	ASL
147FC: 0A	ASL
147FD: 0A	ASL
147FE: 69 4D	ADC #$4D
14800: 85 84	STA $84		; Link Y Position
14802: A4 65	LDY $65
14804: C0 24	CPY #$24
14806: D0 0D	BNE $14815

14808: 8D 1204	STA $0412
1480B: 18	CLC
1480C: 69 10	ADC #$10
1480E: 85 84	STA $84		; Link Y Position
14810: A9 08	LDA #$08	; A = 08
14812: 8D 0306	STA $0603

14815: A9 04	LDA #$04	; A = 04
14817: 85 98	STA $98		; Link Facing Direction
14819: A9 00	LDA #$00	; A = 00
1481B: 85 53	STA $53

1481D: 4C 5988	JMP $8859

----

14820: A5 98	LDA $98		; Link Facing Direction (and more)
14822: 85 53	STA $53

14824: 20 1370	JSR $7013

14827: 25 EE	AND $EE
14829: 85 55	STA $55
1482B: F0 04	BEQ $14831

1482D: A9 02	LDA #$02	; A = 02
1482F: 85 54	STA $54

14831: A5 10	LDA $10		; Current Level (0 = Overworld)
14833: F0 24	BEQ $14859

14835: A0 00	LDY #$00	; Y = 00
14837: A5 98	LDA $98		; Link Facing Direction (and more)
14839: 29 03	AND #$03	; keep bits .... ..xx
1483B: F0 08	BEQ $14845

1483D: 29 01	AND #$01	; keep bits .... ...x
1483F: D0 02	BNE $14843

14841: A0 F0	LDY #$F0	; Y = F0

14843: 84 70	STY $70		; Link X Position

14845: 20 C3B0	JSR $B0C3

14848: 29 07	AND #$07	; keep bits .... .xxx
1484A: F0 0A	BEQ $14856

1484C: C9 05	CMP #$05
1484E: F0 06	BEQ $14856

14850: C9 06	CMP #$06
14852: F0 02	BEQ $14856

14854: C8	INY
14855: C8	INY
14856: B9 7286	LDA $8672,Y

14859: 8D 9403	STA $0394

1485C: 20 5EB0	JSR $B05E

1485F: A2 0B	LDX #$0B	; X = 0B
14861: 8E 4003	STX $0340

14864: DE 9204	DEC $0492,X

14867: 20 E4EE	JSR $EEE4

1486A: 95 AC	STA $AC,X	; Item Dropped by Enemy
1486C: 95 98	STA $98,X
1486E: 95 3D	STA $3D,X
14870: FE D003	INC $03D0,X
14873: FE 0504	INC $0405,X
14876: A9 20	LDA #$20	; A = 20
14878: 9D BC03	STA $03BC,X	; Link/Enemy Velocity
1487B: CA	DEX
1487C: D0 E6	BNE $14864

1487E: A4 EB	LDY $EB		; Current Location
14880: B9 7E69	LDA $697E,Y	; Screen Attributes - Table 2
14883: 48	PHA
14884: 29 3F	AND #$3F	; keep bits ..xx xxxx (Enemy Code)
14886: 85 02	STA $02
14888: B9 FE69	LDA $69FE,Y	; Screen Attributes - Table 3
1488B: 0A	ASL
1488C: 90 07	BCC $14895

1488E: A5 02	LDA $02
14890: 18	CLC
14891: 69 40	ADC #$40
14893: 85 02	STA $02

14895: 68	PLA
14896: 29 C0	AND #$C0	; keep bits xx.. ....
14898: 18	CLC
14899: 2A	ROL
1489A: 2A	ROL
1489B: 2A	ROL
1489C: A8	TAY
1489D: B9 A26B	LDA $6BA2,Y
148A0: A4 02	LDY $02
148A2: C0 62	CPY #$62
148A4: B0 06	BCS $148AC

148A6: C0 32	CPY #$32	; if Enemy Code >= 32, set quantity to 1
148A8: 90 02	BCC $148AC

148AA: A9 01	LDA #$01	; A = 01

148AC: 85 03	STA $03
148AE: A5 10	LDA $10		; Current Level (0 = Overworld)
148B0: D0 06	BNE $148B8

148B2: 20 AE90	JSR $90AE

148B5: 4C C788	JMP $88C7

----

148B8: 20 9392	JSR $9293

148BB: A5 12	LDA $12
148BD: C9 09	CMP #$09
148BF: D0 06	BNE $148C7

148C1: A9 00	LDA #$00	; A = 00
148C3: 85 02	STA $02
148C5: 85 03	STA $03

148C7: A5 03	LDA $03
148C9: 8D 4E03	STA $034E
148CC: F0 3B	BEQ $14909

148CE: A5 02	LDA $02
148D0: F0 37	BEQ $14909

148D2: C9 62	CMP #$62
148D4: B0 0F	BCS $148E5

148D6: A2 00	LDX #$00	; X = 00

148D8: A5 02	LDA $02
148DA: 9D 5003	STA $0350,X
148DD: E8	INX
148DE: C6 03	DEC $03
148E0: D0 F6	BNE $148D8

148E2: 4C 0389	JMP $8903

----

148E5: A5 02	LDA $02
148E7: 38	SEC
148E8: E9 62	SBC #$62
148EA: 0A	ASL
148EB: A8	TAY
148EC: B9 3F87	LDA $873F,Y
148EF: 85 04	STA $04
148F1: C8	INY
148F2: B9 3F87	LDA $873F,Y
148F5: 85 05	STA $05
148F7: A0 00	LDY #$00	; Y = 00

148F9: B1 04	LDA ($04),Y
148FB: 99 5003	STA $0350,Y
148FE: C8	INY
148FF: C4 03	CPY $03
14901: D0 F6	BNE $148F9

14903: AD 5003	LDA $0350
14906: 8D 5F03	STA $035F

14909: 20 6E89	JSR $896E

1490C: A5 10	LDA $10		; Current Level (0 = Overworld)
1490E: D0 03	BNE $14913

14910: 20 4189	JSR $8941

14913: 20 DE71	JSR $71DE

14916: A9 00	LDA #$00	; A = 00
14918: 85 3D	STA $3D
1491A: 85 C0	STA $C0
1491C: 85 D3	STA $D3
1491E: A9 04	LDA #$04	; A = 04
14920: 8D D003	STA $03D0

14923: 20 66B3	JSR $B366
14926: 20 D3EA	JSR $EAD3
14929: 20 406E	JSR $6E40

1492C: A5 12	LDA $12
1492E: C9 0B	CMP #$0B
14930: F0 07	BEQ $14939

14932: C9 0C	CMP #$0C
14934: F0 03	BEQ $14939

14936: 20 38F2	JSR $F238

14939: A5 5A	LDA $5A
1493B: F0 03	BEQ $14940

1493D: 20 AB8B	JSR $8BAB

14940: 60	RTS

----

14941: A5 EB	LDA $EB		; Current Location
14943: C9 3F	CMP #$3F	; Raft Screen 1
14945: F0 04	BEQ $1494B

14947: C9 55	CMP #$55	; Raft Screen 2
14949: D0 05	BNE $14950

1494B: A9 61	LDA #$61	; A = 61 (61 = raft event)

1494D: 4C 5D89	JMP $895D

----

14950: AD 2C05	LDA $052C
14953: 85 7B	STA $7B
14955: AD 2D05	LDA $052D
14958: 85 8F	STA $8F
1495A: AD 2B05	LDA $052B

1495D: 8D 5A03	STA $035A

14960: 20 B76D	JSR $6DB7	; Set $052B, $052C, $052D to Zero

14963: 85 B7	STA $B7

14965: 60	RTS

----

14966: 20 60 90 D0	Table for ? (4 bytes)
1496A: 9D 5D 7D 9D	Table for ? (4 bytes)

----

1496E: AC 4E03	LDY $034E
14971: A5 02	LDA $02
14973: F0 4F	BEQ $149C4

14975: C9 37	CMP #$37
14977: F0 4B	BEQ $149C4

14979: A5 10	LDA $10
1497B: D0 07	BNE $14984

1497D: AD CD04	LDA $04CD	; Table 5 - Screen Attributes - Overworld
14980: 29 08	AND #$08	; keep bits .... x... (enemies from sides)
14982: D0 40	BNE $149C4

14984: AD 4E03	LDA $034E
14987: F0 3B	BEQ $149C4

14989: A5 98	LDA $98		; Link Facing Direction
1498B: A0 FF	LDY #$FF	; Y = FF

1498D: C8	INY
1498E: 4A	LSR
1498F: 90 FC	BCC $1498D

14991: B9 4686	LDA $8646,Y
14994: 85 06	STA $06
14996: B9 4A86	LDA $864A,Y
14999: 85 07	STA $07
1499B: AC 2405	LDY $0524
1499E: A2 01	LDX #$01	; X = 01

149A0: B1 06	LDA ($06),Y
149A2: 48	PHA
149A3: 0A	ASL
149A4: 0A	ASL
149A5: 0A	ASL
149A6: 0A	ASL
149A7: 95 70	STA $70,X	; Link/Enemy X Position
149A9: 68	PLA
149AA: 29 F0	AND #$F0	; keep bits xxxx ....
149AC: 09 0D	ORA #$0D	; set  bits .... xx.x
149AE: 95 84	STA $84,X	; Link/Enemy Y Position

149B0: 20 048A	JSR $8A04
149B3: B0 01	BCS $149B6

149B5: E8	INX

149B6: C8	INY
149B7: C0 09	CPY #$09
149B9: 90 02	BCC $149BD

149BB: A0 00	LDY #$00	; Y = 00

149BD: E0 0A	CPX #$0A
149BF: 90 DF	BCC $149A0

149C1: 8C 2405	STY $0524

149C4: A5 12	LDA $12
149C6: C9 09	CMP #$09
149C8: D0 15	BNE $149DF

149CA: A2 03	LDX #$03	; X = 03

149CC: A9 1B	LDA #$1B	; A = 1B
149CE: 9D 5003	STA $0350,X
149D1: BD 6689	LDA $8966,X
149D4: 95 71	STA $71,X	; Enemy X Position
149D6: B9 6A89	LDA $896A,Y
149D9: 95 85	STA $85,X	; Enemy Y Position
149DB: CA	DEX
149DC: 10 EE	BPL $149CC

149DE: 60	RTS

----

149DF: C9 0B	CMP #$0B
149E1: F0 04	BEQ $149E7

149E3: C9 0C	CMP #$0C
149E5: D0 1C	BNE $14A03

149E7: A2 07	LDX #$07	; X = 07
149E9: A9 00	LDA #$00	; A = 00

149EB: 9D 5003	STA $0350,X
149EE: CA	DEX
149EF: 10 FA	BPL $149EB

149F1: A4 EB	LDY $EB		; Current Location
149F3: B9 FE68	LDA $68FE,Y
149F6: 29 FC	AND #$FC	; keep bits xxxx xx..
149F8: 38	SEC
149F9: E9 40	SBC #$40
149FB: 4A	LSR
149FC: 4A	LSR
149FD: 18	CLC
149FE: 69 6A	ADC #$6A
14A00: 8D 5003	STA $0350

14A03: 60	RTS

----

14A04

--------

14B5D: A5 13	LDA $13		; Routine Index
14B5F: 29 03	AND #$03	; keep bits .... ..xx
14B61: 85 13	STA $13

14B63: 20 51EA	JSR $EA51

14B66: A4 13	LDY $13		; Routine Index
14B68: B9 E98A	LDA $8AE9,Y
14B6B: 85 12	STA $12		; Game Mode
14B6D: AD 6F06	LDA $066F	; Heart Containers / Filled Hearts
14B70: 29 F0	AND #$F0	; keep bits xxxx ....
14B72: 09 02	ORA #$02	; set  bits .... ..x.
14B74: 8D 6F06	STA $066F	; Heart Containers / Filled Hearts
14B77: A9 FF	LDA #$FF	; A = FF
14B79: 8D 7006	STA $0670	; Heart following the last filled heart

14B7C: 20 A3EB	JSR $EBA3

14B7F: C0 02	CPY #$02
14B81: D0 05	BNE $14B88

14B83: 88	DEY
14B84: 84 13	STY $13
14B86: E6 11	INC $11

14B88: 4C E96E	JMP $6EE9

----

14B8B: AD 9E04	LDA $049E
14B8E: C9 24	CMP #$24
14B90: D0 0F	BNE $14BA1

14B92: A5 15	LDA $15		; Frame Counter
14B94: 29 03	AND #$03	; keep bits .... ..xx
14B96: D0 10	BNE $14BA8

14B98: E6 84	INC $84		; Link Y Position
14B9A: A5 84	LDA $84
14B9C: CD 1204	CMP $0412
14B9F: D0 07	BNE $14BA8

14BA1: A5 5B	LDA $5B
14BA3: 85 12	STA $12		; Game Mode

14BA5: 20 A3EB	JSR $EBA3
14BA8: 20 3CF2	JSR $F23C

14BAB: AD 4A02	LDA $024A
14BAE: 09 20	ORA #$20	; set  bits ..x. ....
14BB0: 8D 4A02	STA $024A
14BB3: AD 4E02	LDA $024E
14BB6: 09 20	ORA #$20	; set  bits ..x. ....
14BB8: 8D 4E02	STA $024E

14BBB: 60	RTS

----

14BBC: 20 FA8B	JSR $8BFA

14BBF: AD CD04	LDA $04CD
14BC2: 29 07	AND #$07	; keep bits .... .xxx
14BC4: F0 20	BEQ $14BE6

14BC6: 20 E78B	JSR $8BE7
14BC9: 90 1B	BCC $14BE6

14BCB: AD CD04	LDA $04CD
14BCE: 29 07	AND #$07	; keep bits .... .xxx
14BD0: C9 07	CMP #$07
14BD2: D0 12	BNE $14BE6

14BD4: A5 BF	LDA $BF
14BD6: F0 0E	BEQ $14BE6

14BD8: 20 1473	JSR $7314
14BDB: D0 09	BNE $14BE6

14BDD: A9 00	LDA #$00	; A = 00
14BDF: 85 BF	STA $BF
14BE1: A9 02	LDA #$02	; A = 02
14BE3: 8D 0206	STA $0602

14BE6: 60	RTS

--------

1459D: Unused Space (63 bytes)

--------

14EC6: 60	RTS

--------

14ED7: A5 12	LDA $12		; Game Mode
14ED9: C9 09	CMP #$09
14EDB: D0 3F	BNE $14F1C

14EDD: A5 84	LDA $84		; Link Y Position
14EDF: C9 40	CMP #$40
14EE1: B0 E3	BCS $14EC6

14EE3: AD F803	LDA $03F8	; Link Movement Direction ?
14EE6: 29 08	AND #$08	; keep bits .... x...
14EE8: F0 DC	BEQ $14EC6

14EEA: A0 06	LDY #$06	; Y = 06
14EEC: A5 EB	LDA $EB		; Current Location
14EEE: 48	PHA

14EEF: 88	DEY
14EF0: D9 B26B	CMP $6BB2,Y	; Table for Stairway Data
14EF3: D0 FA	BNE $14EEF

14EF5: A8	TAY
14EF6: A5 70	LDA $70		; Link X Position
14EF8: C9 80	CMP #$80
14EFA: B0 06	BCS $14F02

14EFC: B9 7E68	LDA $687E,Y

14EFF: 4C 058F	JMP $8F05

--------

14F1C

--------

15060

150E5

15293

152D7

--------

15352: Unused Space (AE bytes)

--------

15400: A4 09	LDY $09
15402: B9 E3A5	LDA $A5E3,Y
15405: 18	CLC
15406: 65 07	ADC $07
15408: A8	TAY
15409: B9 D5A5	LDA $A5D5,Y
1540C: A8	TAY
1540D: B1 02	LDA ($02),Y
1540F: 9D 0203	STA $0302,X
15412: E8	INX
15413: E6 07	INC $07
15415: C6 04	DEC $04

15417: 60	RTS

----

15418: Column Data for Overworld Screens (7C0 bytes)

15B38: Column Data of Starting Screen (77)

01 A7 84 90 10 02 A5 08 08 A0 06 06 06 06 01 01

15BA8: Column Data of Caves (79) (Old Man, Old Woman, Secret Moblin, etc.)
15BB8: Column Data of Secret Passages Caves (7A) (3 Stairways)
15BC8: Column Data of ? (7B) (lake with dead trees)

Screens 7C to 7F are undefined

CA 4E 0E 4E 4E 4A C5 45 05 0B C5

----

15BD8: Column Definitions for Overworld (3C4 bytes)

..xx xxxx	Tile Code
.x.. ....	Tile is Repeated Once
x... ....	Start of a Column Definition

DB 5B 5B DB 5B 1B ...

Each column is defined by 6 to B bytes

----

15F9C: Pointer table for Overworld Screens and Columns Data (2 * 2 = 4 bytes)

1894 -> 15418	Column Data for Overworld
D89B -> 15BD8	Column Definitions for Overworld

----

15FA0: Table for Dungeon Walls Tile Mappings

E0 F5 F5 F5 F5 B8 F5 D4 F5 F5 F5	Left/Right Wall Column 1
C4 DE DE BC C8 DE BC DE DE F5 DC	Left/Right Wall Column 2
C4 DE C8 DE BC C8 DE DE F5 DC DC	Left/Right Wall Column 3

Top and Bottom Walls

00 C0 D0 DC 00 F5 DC CC 00 F5 DC DC 00 F5 CC
D0 00 F5 DC DC 00 C0 D0 DC 00 F5 DC CC 00 F5
DC DC 00 D8 CC D0 00 F5 DC DC 00 F5 DC DC 00

00 -> Bricks Tile 4 Times (Tile Code is F6)
F0-FF -> Same Tile 4 Times
E0-EF -> Other type of mirroring ?

----

15FEE: Table for Dungeon Doors Tile Mappings (C * 5 * 4 = F0 bytes)

Layout for right and left doors:

ACE
BDF
GIK
HJL

88 74 8A 24 87 87 75 89 24 8B 87 87	Right Wall - Door
88 A4 8A A6 87 87 A5 89 A7 8B 87 87	Right Wall - Locked Door
88 AC 8A AE 87 87 AD 89 AF 8B 87 87	Right Wall - Shutter
DF DF DF DF F5 F5 DF DF DF DF F5 F5	Right Wall - Bombable
DF 24 DF 92 F5 F5 24 DF 93 DF F5 F5	Right Wall - Bombed

82 82 83 24 85 76 82 82 24 84 77 86	Left Wall - Door
82 82 83 A0 85 A2 82 82 A1 84 A3 86	Left Wall - Locked Door
82 82 83 AC 85 AE 82 82 AD 84 AF 86	Left Wall - Shutter
F5 F5 DE DE DE DE F5 F5 DE DE DE DE	Left Wall - Bombable
F5 F5 DE 90 DE 24 F5 F5 91 DE 24 DE	Left Wall - Bombed

Layout for bottom and top doors:

ADGJ
BEHK
CFIL

7E 7F 7D 76 24 7D 74 24 7D 80 81 7D	Bottom Wall - Door
7E 7F 7D 9C 9D 7D 9E 9F 7D 80 81 7D	Bottom Wall - Locked Door
7E 7F 7D A8 A9 7D AA AB 7D 80 81 7D	Bottom Wall - Shutter
DD DD F5 DD DD F5 DD DD F5 DD DD F5	Bottom Wall - Bombable
DD DD F5 24 8E F5 24 8F F5 DD DD F5	Bottom Wall - Bombed

78 79 7A 78 24 77 78 24 75 78 7B 7C	Top Wall - Door
78 79 7A 78 98 99 78 9A 9B 78 7B 7C	Top Wall - Locked Door
78 79 7A 78 A8 A9 78 AA AB 78 7B 7C	Top Wall - Shutter
F5 DC DC F5 DC DC F5 DC DC F5 DC DC	Top Wall - Bombable
F5 DC DC F5 8C 24 F5 8D 24 F5 DC DC	Top Wall - Bombed

----

160DE: Column Data for Dungeons Rooms (2A * C = 1F8 bytes)

C columns per room

----

162D6: Column Definitions for Dungeons (DE bytes) (probably)

.... .xxx	Tile Code
.... x...	? (never used) (posssible expansion of tile codes)
.xxx ....	Number of Times the Tile is Repeated
x... ....	Start of a Column Definition

0 = Block	B0-B1-B2-B3
1 = Floor	74-75-76-77
2 = Statue 1	94-95-96-97
3 = Statue 2	B4-B5-B6-B7
4 = Stairs	70-71-72-73

Codes 5-7 use the same tile 4 times

5 = Sand	68-68-68-68
6 = Water	F4-F4-F4-F4
7 = Black	24-24-24-24

Each column is defined by 1 to 7 bytes

E1

...

80 27 21
81 00 02 11 00
81 00 03 11 00
81 02
81 02 01 02 01 02 05
C1 15
B1 25
81 03
81 03 01 03 01 03 05

...

82 47 82	Statue 1, Black, Black, Black, Black, Black, Statue 1

...

****

162D6

E1
80 C1 00 01
A0 04
A0 01
A0 31
90 21
90 21 00

162E6

81 00 01 04 81 00 01 00 01 00 81 00 21 00 81 40
81 20 01 00 81 00 04 00 01 00 01 90 41 80

16304: 
16315: 
16326: 
1633D: 
16354: 
16365: 
16377: 
16391: 

----

163B4: Column Data for Underground Passages (2 * 10 = 20 bytes)

04 04 00 01 00 00 00 00 00 00 00 00 01 00 04 04		Passage Room
04 04 00 01 00 00 00 03 03 03 03 02 03 03 04 04		Item Room

----

163D4: Column Definitions for Underground Passages (22 bytes)

Same Byte Format

.... xxxx	Tile Code
.x.. ....	Tile is Repeated Once
x... ....	Start of a Column Definition

0 = Black (top of stairs)
1 = Stairs
2 = Black (blocked)
3 = Bricks
C = Black (walkable)

82 43 43 43 02 0C 43		Column 0
80 41 41 41 41 43		Column 1
82 43 42 0C 01 41 43		Column 2
82 43 42 0C 03 02 0C 43		Column 3
82 43 43 43 43 43		Column 4

----

163F6: A9 01	LDA #$01	; A = 01
163F8: 85 01	STA $01
163FA: A9 03	LDA #$03	; A = 03
163FC: 85 03	STA $03

163FE: A4 EB	LDY $EB		; Current Location
16400: B9 7E68	LDA $687E,Y	; Screen Attributes - Table 0
16403: A4 03	LDY $03
16405: C0 02	CPY #$02
16407: 90 05	BCC $1640E

16409: A4 EB	LDY $EB		; Current Location
1640B: B9 FE68	LDA $68FE,Y	; Screen Attributes - Table 1

1640E: 85 00	STA $00
16410: A5 03	LDA $03
16412: 29 01	AND #$01	; keep bits .... ...x
16414: D0 06	BNE $1641C

16416: 46 00	LSR $00
16418: 46 00	LSR $00
1641A: 46 00	LSR $00

1641C: 46 00	LSR $00
1641E: 46 00	LSR $00
16420: A5 02	LDA $02
16422: 24 01	BIT $01
16424: D0 09	BNE $1642F

16426: 06 01	ASL $01
16428: C6 03	DEC $03
1642A: 10 D2	BPL $163FE

1642C: A9 08	LDA #$08	; A = 08

1642E: 60	RTS

----

1642F

--------

Tables for ?

164D3: 01 02 04 08

164E7: 14 01 01
164EA: 02 02 2C 2C	PPU Increment Types (the playfield is 16 tiles high)
164EE: 03 03 02 02
164F2: 01 01 02 02

----

164F6: A2 03	LDX #$03	; X = 03
164F8: A9 01	LDA #$01	; A = 01
164FA: 85 06	STA $06
164FC: 8A	TXA
164FD: 48	PHA
164FE: 85 0B	STA $0B

16500: BD D3A4	LDA $A4D3,X
16503: 85 02	STA $02

16505: 20 F6A3	JSR $A3F6

16508: C9 05	CMP #$05
1650A: B0 1C	BCS $16528

1650C: C9 04	CMP #$04
1650E: D0 08	BNE $16518

16510: A9 08	LDA #$08	; A = 08
16512: D0 14	BNE $16528

16514: A9 09	LDA #$09	; A = 09
16516: D0 2F	BNE $16547

16518: 48	PHA
16519: A5 02	LDA $02
1651B: 49 FF	EOR #$FF	; flip all bits
1651D: 25 EE	AND $EE
1651F: 85 EE	STA $EE
16521: 68	PLA
16522: C9 01	CMP #$01
16524: B0 02	BCS $16528

16526: A9 04	LDA #$04	; A = 04

16528: 48	PHA
16529: A5 EE	LDA $EE
1652B: 25 02	AND $02
1652D: AA	TAX
1652E: 68	PLA
1652F: E4 02	CPX $02
16531: D0 14	BNE $16547

16533: A8	TAY
16534: 68	PLA
16535: 48	PHA
16536: AA	TAX
16537: 98	TYA
16538: C9 07	CMP #$07
1653A: F0 09	BEQ $16545

1653C: 48	PHA
1653D: 20 978A	JSR $8A97
16540: 68	PLA

16541: C9 08	CMP #$08
16543: F0 CF	BEQ $16514

16545: A9 04	LDA #$04	; A = 04
16547: A6 06	LDX $06
16549: F0 0A	BEQ $16555

1654B: A6 0B	LDX $0B

1654D: 48	PHA
1654E: 20 F6A3	JSR $A3F6
16551: 20 41B6	JSR $B641
16554: 68	PLA

16555: C9 04	CMP #$04
16557: 90 4C	BCC $165A5
16559: 38	SEC
1655A: E9 03	SBC #$03
1655C: A8	TAY
1655D: C0 03	CPY #$03
1655F: 90 01	BCC $16562
16561: 88	DEY
16562: 68	PLA
16563: 48	PHA

16564: 20 B4A5	JSR $A5B4

16567: A5 06	LDA $06
16569: D0 0B	BNE $16576

1656B: BD EAA4	LDA $A4EA,X
1656E: 20 7672	JSR $7276	; Increment $00-$01 by A

16571: A9 06	LDA #$06	; A = 06
16573: 20 8272	JSR $7282	; Increment $02-$03 by A

16576: A0 00	LDY #$00	; Y = 00
16578: BD EEA4	LDA $A4EE,X
1657B: 85 05	STA $05
1657D: 68	PLA
1657E: 48	PHA
1657F: AA	TAX
16580: BD F2A4	LDA $A4F2,X
16583: AA	TAX

16584: B1 02	LDA ($02),Y
16586: 91 00	STA ($00),Y
16588: 20 8072	JSR $7280	; Increment $02-$03 by 1

1658B: BD E7A4	LDA $A4E7,X
1658E: 20 7672	JSR $7276	; Increment $00-$01 by A

16591: E0 00	CPX #$00
16593: D0 09	BNE $1659E

16595: 68	PLA
16596: 48	PHA
16597: C9 02	CMP #$02
16599: B0 03	BCS $1659E

1659B: 20 7472	JSR $7274	; Increment $00-$01 by 1

1659E: CA	DEX
1659F: 10 E3	BPL $16584

165A1: C6 05	DEC $05
165A3: D0 D8	BNE $1657D

165A5: 68	PLA
165A6: AA	TAX
165A7: C6 06	DEC $06
165A9: 30 03	BMI $165AE

165AB: 4C FCA4	JMP $A4FC

--------

165D5: Table...
165E3: Table...

--------

16704: Pointer table for Column definitions - Dungeons (A * 2 = 14 bytes)

D6A2 -> 162D6
E6A2 -> 162E6
04A3 -> 16304
15A3 -> 16315
26A3 -> 16326
3DA3 -> 1633D
54A3 -> 16354
65A3 -> 16365
77A3 -> 16377
91A3 -> 16391

----

16718: Tile Codes for Dungeons (8 bytes)

Tile Codes >= 10 means the tile is made of C,C+1,C+2,C+3
Tile Code B0 gives Tile Mapping B0-B1-B2-B3, in inverted N pattern

Tile Codes that are not >= 10 ?

B0 74 94 B4 70 68 F4 24

...

B0 B1 B2 B3	Block

----

16720: 20 5AE8	JSR $E85A	; Get Screen Code for Location

16723: 48	PHA
16724: A9 DE	LDA #$DE	; A = DE
16726: 85 02	STA $02
16728: A9 A0	LDA #$A0	; A = A0
1672A: 85 03	STA $03
1672C: 68	PLA

1672D: 0A	ASL
1672E: 0A	ASL

1672F: 85 00	STA $00
16731: 20 8272	JSR $7282	; Increment $02-$03 by A

16734: A5 00	LDA $00
16736: 20 8272	JSR $7282	; Increment $02-$03 by A

16739: A5 00	LDA $00
1673B: 20 8272	JSR $7282	; Increment $02-$03 by A

1673E: A9 8C	LDA #$8C	; A = 8C
16740: 85 00	STA $00
16742: A9 65	LDA #$65	; A = 65
16744: 85 01	STA $01
16746: A0 00	LDY #$00	; Y = 00
16748: 84 06	STY $06
1674A: A4 06	LDY $06
1674C: B1 02	LDA ($02),Y
1674E: 29 F0	AND #$F0	; keep bits xxxx ....
16750: 4A	LSR
16751: 4A	LSR
16752: 4A	LSR
16753: AA	TAX
16754: BD 04A7	LDA $A704,X
16757: 85 04	STA $04
16759: BD 05A7	LDA $A705,X
1675C: 85 05	STA $05
1675E: B1 02	LDA ($02),Y
16760: 29 0F	AND #$0F	; keep bits .... xxxx
16762: AA	TAX
16763: A0 00	LDY #$00	; Y = 00
16765: B1 04	LDA ($04),Y
16767: 10 03	BPL $1676C

16769: CA	DEX
1676A: 30 04	BMI $16770

1676C: C8	INY

1676D: 4C 65A7	JMP $A765

----

16770

--------

167F1

--------

168BE: 20 F4A9	JSR $A9F4	; Set Column Data Tile Mappings - Overworld
168C1: 4C 73AB	JMP $AB73

----

168C4: 20 30AB	JSR $AB30

168C7: A5 10	LDA $10		; Current Level (0 = Overworld)
168C9: F0 F3	BEQ $168BE

168CB: A9 F6	LDA #$F6	; A = F6
168CD: 85 0A	STA $0A

168CF: 20 D8E8	JSR $E8D8
168D2: 20 6CB6	JSR $B66C
168D5: 20 42A4	JSR $A442
168D8: 20 F6A4	JSR $A4F6

168DB: 4C 20A7	JMP $A720

----

168DE: A9 1A	LDA #$1A	; A = 1A
168E0: 85 00	STA $00
168E2: A9 65	LDA #$65	; A = 65
168E4: 85 01	STA $01
168E6: A6 E8	LDX $E8
168E8: CA	DEX
168E9: 8A	TXA
168EA: AC 0103	LDY $0301
168ED: 99 0303	STA $0303,Y
168F0: A9 21	LDA #$21	; A = 21
168F2: 99 0203	STA $0302,Y

168F5: A9 16	LDA #$16	; A = 16
168F7: 20 7672	JSR $7276	; Increment $00-$01 by A
168FA: CA	DEX
168FB: 10 F8	BPL $168F5

168FD: A9 96	LDA #$96	; A = 96
168FF: 99 0403	STA $0304,Y
16902: 8A	TXA
16903: 99 1B03	STA $031B,Y
16906: 98	TYA
16907: AA	TAX
16908: A0 00	LDY #$00	; Y = 00
1690A: 84 06	STY $06

1690C: B1 00	LDA ($00),Y
1690E: 9D 0503	STA $0305,X

16911: 20 7472	JSR $7274	; Increment $00-$01 by 1

16914: E8	INX
16915: E6 06	INC $06
16917: A5 06	LDA $06
16919: C9 16	CMP #$16
1691B: 90 EF	BCC $1690C

1691D: E8	INX
1691E: E8	INX
1691F: E8	INX
16920: 8E 0103	STX $0301

16923: 60	RTS

----

Create PPU Macro for Screen Tile Layout

16924: A9 65	LDA #$65	; A = 65
16926: 85 01	STA $01
16928: A5 E9	LDA $E9
1692A: AA	TAX
1692B: 18	CLC
1692C: 69 30	ADC #$30
1692E: 85 00	STA $00
16930: 90 02	BCC $16934

16932: E6 01	INC $01

16934: A9 20	LDA #$20	; A = 20
16936: 8D 0203	STA $0302
16939: A9 E0	LDA #$E0	; A = E0
1693B: 8D 0303	STA $0303

1693E: AD 0303	LDA $0303
16941: 18	CLC
16942: 69 20	ADC #$20
16944: 8D 0303	STA $0303
16947: 90 03	BCC $1694C

16949: EE 0203	INC $0302

1694C: CA	DEX
1694D: 10 EF	BPL $1693E

1694F: A9 20	LDA #$20	; A = 20
16951: 8D 0403	STA $0304
16954: 8E 2503	STX $0325
16957: A2 00	LDX #$00	; X = 00
16959: A0 00	LDY #$00	; Y = 00

1695B: B1 00	LDA ($00),Y
1695D: 9D 0503	STA $0305,X

16960: A9 16	LDA #$16	; A = 16
16962: 20 7672	JSR $7276	; Increment $00-$01 by A

16965: E8	INX
16966: E0 20	CPX #$20
16968: 90 F1	BCC $1695B

1696A: A9 23	LDA #$23	; A = 23
1696C: 8D 0103	STA $0301

1696F: 60	RTS

----

16970: 62 63 64 65 66 67	Table for ? (6 bytes)

----

16976: C8 D8 C4 BC C0 C0	Table for Secret Tiles Codes (6 bytes)

Codes E5 to EA

C8	Pushable Rock	(C8 C9 CA CB)
D8	Bombable Wall	(D8 D9 DA DB)
C4	Burnable Tree	(C4 C5 C6 C7)
BC	Pushable Tomb	(BC BD BE BF)
C0	Armos Statue	(C0 C1 C2 C3)
C0	Armos Statue	(C0 C1 C2 C3)

----

1697C: Tile Codes for Overworld (38 bytes)

Tile Code >= 10 means the tile is made of C,C+1,C+2,C+3
Tile Code 70 gives Tile Mappings 70-71-72-73, in inverted N pattern

Codes < 0x10

24 6F F3 FA 98 90 8F 95 8E 90 74 76 F3 24 26 89

Codes >= 0x10

03 04 70 C8 BC 8D 8F 93 95 C4 CE D8 B0 B4 AA AC
B8 9C A6 9A A2 A0 E5 E6 E7 E8 E9 EA C0 E0 78 7A
7E 80 CC D0 D4 DC 89 84

24 25 26 27	

...

D8 D9 DA DB	Rocky Wall - Full

----

169B4: Tile Mappings for Codes < 0x10 (10 * 4 = 40 bytes)

24 24 24 24	Dungeons Passages Top of Stairs (black) / Cave Entrance in OW
6F 6F 6F 6F	Dungeons Passages Stairs
F3 F3 F3 F3	Dungeons Passages Background (blocked)
FA FA FA FA	Dungeons Passages Walls (bricks)98 95 26 26
90 95 90 95
8F 90 8F 90
95 96 95 968E 93 90 95
90 95 92 97
74 74 75 75	Mountain Stairs
76 77 76 77F3 24 F3 24	Dungeons Passages Walkable Space (black)
24 24 24 24	Overworld Caves Ground
26 26 26 26	Overworld Ground
89 88 8B 88

----

Set Column Data Tile Mappings for current screen

$00-$01		Offset in Cartridge RAM for Screen Tile Mappings
$02-$03		Pointer for Screen Column Data
$04-$05		Pointer for Column Definitions
$06		Various Uses (Column Data Offset, Column Loop)
$07		Loop Variable (Column End)
$08-$09		Offset in Cartridge RAM for Screen Status (visited, secret)
$0C		Repeat Switch (00 or FF)
$0D		Column Tile Code

169F4: AD 9C9F	LDA $9F9C	; Pointer for Overworld Column Data (low byte)
169F7: 85 02	STA $02
169F9: AD 9D9F	LDA $9F9D	; Pointer for Overworld Column Data (high byte)
169FC: 85 03	STA $03
169FE: A9 00	LDA #$00	; A = 00
16A00: 85 06	STA $06
16A02: A6 EB	LDX $EB		; Current Location
16A04: BD FE69	LDA $69FE,X	; Screen Attributes - Table 3
16A07: 0A	ASL
16A08: 0A	ASL
16A09: 26 06	ROL $06
16A0B: 0A	ASL
16A0C: 26 06	ROL $06
16A0E: 0A	ASL
16A0F: 26 06	ROL $06
16A11: 65 02	ADC $02
16A13: 85 02	STA $02
16A15: A5 06	LDA $06
16A17: 65 03	ADC $03
16A19: 85 03	STA $03

16A1B: AD AF6B	LDA $6BAF	; Offset for Screen Status (high byte)
16A1E: 85 08	STA $08
16A20: AD B06B	LDA $6BB0	; Offset for Screen Status (low byte)
16A23: 85 09	STA $09

16A25: 20 07AC	JSR $AC07	; $00 = 30, $01 = 65 (Initial RAM Address)

16A28: A9 00	LDA #$00	; A = 00
16A2A: 85 0C	STA $0C
16A2C: 85 06	STA $06

Begin Column Loop (0x10 times)

16A2E: A4 06	LDY $06
16A30: B1 02	LDA ($02),Y
16A32: 29 F0	AND #$F0	; keep bits xxxx ....
16A34: 4A	LSR
16A35: 4A	LSR
16A36: 4A	LSR
16A37: AA	TAX
16A38: BD 2768	LDA $6827,X	; Pointer table for Column Definitions (high)
16A3B: 85 04	STA $04
16A3D: BD 2868	LDA $6828,X	; Pointer table for Column Definitions (low)
16A40: 85 05	STA $05
16A42: B1 02	LDA ($02),Y
16A44: 29 0F	AND #$0F	; keep bits .... xxxx
16A46: AA	TAX
16A47: A0 FF	LDY #$FF	; Y = FF

Look for the Start of a Column bit (bit 7 set)

16A49: C8	INY
16A4A: B1 04	LDA ($04),Y
16A4C: 10 FB	BPL $16A49

16A4E: CA	DEX
16A4F: 10 F8	BPL $16A49

16A51: 98	TYA
16A52: 20 8E72	JSR $728E	; Add A to $04-$05

16A55: A9 00	LDA #$00	; A = 00
16A57: 85 07	STA $07

16A59: A0 00	LDY #$00	; Y = 00
16A5B: B1 04	LDA ($04),Y
16A5D: 29 3F	AND #$3F	; keep bits ..xx xxxx (Tile Code)
16A5F: 85 0D	STA $0D
16A61: AA	TAX
16A62: BD 7CA9	LDA $A97C,X	; Tile Codes for Overworld

16A65: 48	PHA
16A66: A4 EB	LDY $EB		; Current Location
16A68: B1 08	LDA ($08),Y
16A6A: 29 80	AND #$80	; keep bits x... .... (Secret Found bit)
16A6C: F0 1A	BEQ $16A88

16A6E: 68	PLA
16A6F: C9 E7	CMP #$E7	; E7 = Burnable Tree
16A71: F0 08	BEQ $16A7B

16A73: C9 E6	CMP #$E6	; E6 = Bombable Wall
16A75: F0 0C	BEQ $16A83

16A77: C9 EA	CMP #$EA	; EA = Armos Statue
16A79: D0 0C	BNE $16A87

16A7B: A9 10	LDA #$10	; A = 10
16A7D: 85 0D	STA $0D
16A7F: A9 70	LDA #$70	; A = 70 (Code for Stairway)
16A81: D0 04	BNE $16A87

16A83: A9 0C	LDA #$0C	; A = 0C (Code for Cave Entrance)
16A85: 85 0D	STA $0D

16A87: 48	PHA

16A88: 68	PLA
16A89: 20 BFAA	JSR $AABF	; Check for Secret Tiles

16A8C: A0 00	LDY #$00	; Y = 00
16A8E: 20 F1AA	JSR $AAF1	; Set Tile Mappings for Tile

Go Down 2 Tiles

16A91: A9 02	LDA #$02	; A = 02
16A93: 20 7672	JSR $7276	; Increment $00-$01 by A

16A96: A0 00	LDY #$00	; Y = 00
16A98: B1 04	LDA ($04),Y
16A9A: 29 40	AND #$40	; keep bits .x.. .... (Tile Repeat bit)
16A9C: F0 06	BEQ $16AA4

16A9E: 45 0C	EOR $0C
16AA0: 85 0C	STA $0C
16AA2: D0 03	BNE $16AA7

16AA4: 20 8C72	JSR $728C	; Add 1 to $04-$05

16AA7: E6 07	INC $07
16AA9: A5 07	LDA $07
16AAB: C9 0B	CMP #$0B	; Number of Tiles per Column
16AAD: D0 AA	BNE $16A59

16AAF: A9 16	LDA #$16	; A = 16
16AB1: 20 7672	JSR $7276	; Increment $00-$01 by A

16AB4: E6 06	INC $06
16AB6: A5 06	LDA $06
16AB8: C9 10	CMP #$10	; Number of Columns per Screen
16ABA: B0 34	BCS $16AF0

16ABC: 4C 2EAA	JMP $AA2E

----

Check if a Tile must be replaced by its Secret equivalent

16ABF: A2 EA	LDX #$EA	; X = EA
16AC1: 86 0A	STX $0A
16AC3: A2 05	LDX #$05	; X = 05

16AC5: C5 0A	CMP $0A
16AC7: F0 07	BEQ $16AD0

16AC9: C6 0A	DEC $0A
16ACB: CA	DEX
16ACC: 10 F7	BPL $16AC5
16ACE: 30 20	BMI $16AF0

16AD0: BD 76A9	LDA $A976,X
16AD3: 48	PHA
16AD4: BD 70A9	LDA $A970,X
16AD7: 8D 2B05	STA $052B
16ADA: A5 06	LDA $06
16ADC: 0A	ASL
16ADD: 0A	ASL
16ADE: 0A	ASL
16ADF: 0A	ASL
16AE0: 8D 2C05	STA $052C
16AE3: A5 07	LDA $07
16AE5: 0A	ASL
16AE6: 0A	ASL
16AE7: 0A	ASL
16AE8: 0A	ASL
16AE9: 18	CLC
16AEA: 69 40	ADC #$40
16AEC: 8D 2D05	STA $052D
16AEF: 68	PLA

16AF0: 60	RTS

----

16AF1: A6 0D	LDX $0D
16AF3: E0 10	CPX #$10
16AF5: 90 17	BCC $16B0E

Set Tile Mappings for Codes >= 0x10
Values are C,C+1,C+2,C+3

16AF7: AA	TAX
16AF8: 91 00	STA ($00),Y
16AFA: C8	INY
16AFB: E8	INX
16AFC: 8A	TXA
16AFD: 91 00	STA ($00),Y
16AFF: 98	TYA
16B00: 18	CLC
16B01: 69 15	ADC #$15
16B03: A8	TAY
16B04: E8	INX
16B05: 8A	TXA
16B06: 91 00	STA ($00),Y
16B08: E8	INX
16B09: 8A	TXA

16B0A: C8	INY
16B0B: 91 00	STA ($00),Y

16B0D: 60	RTS

----

Set Tile Mappings for Codes < 0x10
Values from table at 169B4

16B0E: 8A	TXA
16B0F: 0A	ASL
16B10: 0A	ASL
16B11: AA	TAX
16B12: BD B4A9	LDA $A9B4,X	; Tile 0
16B15: 91 00	STA ($00),Y
16B17: C8	INY
16B18: E8	INX
16B19: BD B4A9	LDA $A9B4,X	; Tile 1
16B1C: 91 00	STA ($00),Y
16B1E: 98	TYA
16B1F: 18	CLC
16B20: 69 15	ADC #$15
16B22: A8	TAY
16B23: E8	INX
16B24: BD B4A9	LDA $A9B4,X	; Tile 2
16B27: 91 00	STA ($00),Y
16B29: E8	INX
16B2A: BD B4A9	LDA $A9B4,X	; Tile 3

16B2D: 4C 0AAB	JMP $AB0A

----

16B30: AD 9E9F	LDA $9F9E
16B33: AE 9F9F	LDX $9F9F
16B36: A4 10	LDY $10		; Current Level (0 = Overworld)
16B38: F0 04	BEQ $16B3E

Pointer values for Column Definitions for Underground Passages

16B3A: A9 D4	LDA #$D4	; A = D4
16B3C: A2 A3	LDX #$A3	; X = A3

16B3E: 8D 2768	STA $6827	; Pointer table for Column Definitions (high)
16B41: 8E 2868	STX $6828	; Pointer table for Column Definitions (low)

16B44: 60	RTS

----

16B45: Pointer table for ? (4 * 2 = 8 bytes)

A89B -> 15BA8	Column Data of Caves (79)
B89B -> 15BB8	Column Data of Secret Passages (7A)
B4A3 -> 163B4	Column Data for Underground Passage in Dungeons (Passage Room)
C4A3 -> 163C4	Column Data for Underground Passage in Dungeons (Item Room)

----

16B4D: A2 00	LDX #$00	; X = 00

16B4F: BD 45AB	LDA $AB45,X
16B52: 85 02	STA $02
16B54: BD 46AB	LDA $AB46,X
16B57: 85 03	STA $03
16B59: E6 13	INC $13		; Routine Index

16B5B: 4C 1BAA	JMP $AA1B

----

16B5E: A2 02	LDX #$02	; X = 02
16B60: D0 ED	BNE $16B4F

16B62: A9 00	LDA #$00	; A = 00
16B64: 85 E9	STA $E9
16B66: A2 04	LDX #$04	; X = 04

16B68: 20 5AE8	JSR $E85A	; Get Screen Code for Location

16B6B: 29 01	AND #$01	; keep bits .... ...x
16B6D: F0 E0	BEQ $16B4F

16B6F: A2 06	LDX #$06	; X = 06
16B71: D0 DC	BNE $16B4F

16B73: 20 CEE6	JSR $E6CE

16B76: 0A	ASL
16B77: B0 42	BCS $16BBB

16B79: B1 00	LDA ($00),Y
16B7B: 29 20	AND #$20	; keep bits ..x. ....
16B7D: F0 3C	BEQ $16BBB

16B7F: 20 07AC	JSR $AC07	; $00 = 30, $01 = 65 (Initial RAM Address)
16B82: 20 8A71	JSR $718A	; Corresponds to 69FA in Bank 1

16B85: 4A	LSR
16B86: 4A	LSR
16B87: AA	TAX
16B88: BD 00E4	LDA $E400,X
16B8B: 85 00	STA $00
16B8D: BD 01E4	LDA $E401,X
16B90: 85 01	STA $01
16B92: 98	TYA
16B93: 38	SEC
16B94: E9 40	SBC #$40
16B96: 4A	LSR
16B97: 4A	LSR
16B98: 4A	LSR
16B99: A8	TAY
16B9A: B1 00	LDA ($00),Y
16B9C: C9 C4	CMP #$C4
16B9E: F0 1C	BEQ $16BBC

16BA0: C9 BC	CMP #$BC
16BA2: F0 17	BEQ $16BBB

16BA4: C9 D8	CMP #$D8
16BA6: D0 14	BNE $16BBC

16BA8: AD 2B05	LDA $052B
16BAB: C9 62	CMP #$62
16BAD: F0 0D	BEQ $16BBC

16BAF: A9 00	LDA #$00	; A = 00
16BB1: 8D 2B05	STA $052B
16BB4: A9 0C	LDA #$0C	; A = 0C
16BB6: 85 0D	STA $0D

16BB8: 20 F1AA	JSR $AAF1

16BBB: 60	RTS

----

16BBC: A9 10	LDA #$10	; A = 10
16BBE: 85 0D	STA $0D
16BC0: A9 70	LDA #$70	; A = 70
16BC2: D0 F4	BNE $16BB8

16BC4: 8A	TXA
16BC5: 48	PHA
16BC6: B5 70	LDA $70,X
16BC8: 29 F0	AND #$F0	; keep bits xxxx ....
16BCA: 4A	LSR
16BCB: 4A	LSR
16BCC: AA	TAX
16BCD: BD 00E4	LDA $E400,X
16BD0: 85 00	STA $00
16BD2: BD 01E4	LDA $E401,X
16BD5: 85 01	STA $01
16BD7: 68	PLA
16BD8: 48	PHA
16BD9: AA	TAX
16BDA: B5 84	LDA $84,X	; Link/Enemy Y Position
16BDC: 29 F0	AND #$F0	; keep bits xxxx ....
16BDE: 38	SEC
16BDF: E9 40	SBC #$40
16BE1: 4A	LSR
16BE2: 4A	LSR
16BE3: 4A	LSR

16BE4: 20 7672	JSR $7276

16BE7: A0 00	LDY #$00	; Y = 00
16BE9: A2 10	LDX #$10	; X = 10
16BEB: A5 05	LDA $05
16BED: C9 27	CMP #$27
16BEF: 90 04	BCC $16BF5

16BF1: C9 F3	CMP #$F3
16BF3: 90 0A	BCC $16BFF

16BF5: A2 0E	LDX #$0E	; X = 0E
16BF7: DD 7CA9	CMP $A97C,X
16BFA: F0 03	BEQ $16BFF

16BFC: CA	DEX
16BFD: D0 F8	BNE $16BF7

16BFF: 86 0D	STX $0D
16C01: 20 F1AA	JSR $AAF1

16C04: 68	PLA
16C05: AA	TAX

16C06: 60	RTS

----

16C07: A9 30	LDA #$30	; A = 30
16C09: 85 00	STA $00
16C0B: A9 65	LDA #$65	; A = 65
16C0D: 85 01	STA $01

16C0F: 60	RTS

--------

16C2A: Unused Space (3D6 bytes)

--------

17000: A5 EB	LDA $EB		; Current Location
17002: 20 D783	JSR $83D7

17005: A9 18	LDA #$18	; A = 18
17007: D0 0F	BNE $17018

17009: A9 D0	LDA #$D0	; A = D0
1700B: A0 17	LDY #$17	; Y = 17

1700D: 4C 0185	JMP $8501

----

17010: A9 E8	LDA #$E8	; A = E8
17012: A0 2F	LDY #$2F	; Y = 2F
17014: D0 F7	BNE $1700D

17016: A9 0E	LDA #$0E	; A = 0E

17018: 85 14	STA $14		; PPU Loading Index
1701A: E6 13	INC $13		; Routine Index

1701C: 60	RTS

----

1701D: A5 10	LDA $10		; Current Level (0 = Overworld)
1701F: F0 05	BEQ $17026

17021: 20 EFB5	JSR $B5EF
17024: F0 F4	BEQ $1701A

17026: A9 44	LDA #$44	; A = 44
17028: D0 EE	BNE $17018

1702A: AD B16B	LDA $6BB1	; Level Number
1702D: F0 EB	BEQ $1701A

1702F: 8D 2568	STA $6825
17032: A9 0C	LDA #$0C	; A = 0C
17034: D0 E2	BNE $17018

17036: 20 C4A8	JSR $A8C4

17039: A0 10	LDY #$10	; Y = 10
1703B: 84 7C	STY $7C
1703D: C8	INY
1703E: 84 7D	STY $7D
17040: A9 00	LDA #$00	; A = 00
17042: 85 17	STA $17
17044: A9 08	LDA #$08	; A = 08
17046: 85 98	STA $98		; Link Facing Direction
17048: A9 78	LDA #$78	; A = 78
1704A: 85 70	STA $70		; Link X Position
1704C: AD A66B	LDA $6BA6	; Link's Starting Vertical Position in Overworld
1704F: 85 84	STA $84		; Link Y Position

17051: 4C 906C	JMP $6C90	; JMP $16500

----

17054: Table for ? (A bytes)

Related to Flying Sword Boundaries

11 E0 4E CD 89
21 D0 5E BD 78

----

1705E: A0 05	LDY #$05	; Y = 05
17060: A5 10	LDA $10		; Current Level (0 = Overworld)
17062: D0 04	BNE $17068

17064: A0 00	LDY #$00	; Y = 00
17066: 84 53	STY $53

17068: A2 00	LDX #$00	; X = 00

1706A: B9 54B0	LDA $B054,Y
1706D: 9D 4603	STA $0346,X
17070: C8	INY
17071: E8	INX
17072: E0 05	CPX #$05
17074: D0 F4	BNE $1706A

17076: 60	RTS

--------

170B6

17366: A9 60	LDA #$60	; A = 60
17368: 85 00	STA $00
1736A: A5 10	LDA $10		; Current Level (0 = Overworld)
1736C: D0 19	BNE $17387

1736E: AD 9E04	LDA $049E
17371: C9 74	CMP #$74
17373: F0 04	BEQ $17379

17375: C9 75	CMP #$75
17377: D0 0E	BNE $17387

17379: A9 30	LDA #$30	; A = 30
1737B: 85 00	STA $00
1737D: CD BC03	CMP $03BC	; Link Velocity
17380: F0 05	BEQ $17387

17382: A9 00	LDA #$00	; A = 00
17384: 8D A803	STA $03A8	; Time before item 0 disappears
17387: A5 00	LDA $00
17389: 8D BC03	STA $03BC	; Link Velocity

1738C: 60	RTS

----

1738D: AD F803	LDA $03F8
17390: F0 FA	BEQ $1738C

17392: 20 1370	JSR $7013

17395: B9 C36D	LDA $6DC3,Y
17398: C5 98	CMP $98
1739A: F0 CA	BEQ $17366

1739C: 05 98	ORA $98		; Link Facing Direction (and more)
1739E: C9 03	CMP #$03
173A0: F0 04	BEQ $173A6

173A2: C9 0C	CMP #$0C
173A4: D0 09	BNE $173AF

173A6: B9 C36D	LDA $6DC3,Y
173A9: 85 98	STA $98		; Link Facing Direction (and more)
173AB: 8D F803	STA $03F8

173AE: 60	RTS

----

173AF: A5 57	LDA $57
173B1: D0 B3	BNE $17366

173B3: AD 9403	LDA $0394	; Link Inter-Tile Offset (0-F)
173B6: 20 1F70	JSR $701F

173B9: 48	PHA
173BA: A5 98	LDA $98

173BC: 20 1370	JSR $7013

173BF: 85 01	STA $01
173C1: 68	PLA
173C2: C9 04	CMP #$04
173C4: B0 2D	BCS $173F3

173C6: A5 98	LDA $98		; Link Facing Direction (and more)
173C8: 29 0A	AND #$0A	; keep bits .... x.x.
173CA: F0 07	BEQ $173D3

173CC: AD 9403	LDA $0394	; Link Inter-Tile Offset (0-F)
173CF: 10 22	BPL $173F3

173D1: 30 05	BMI $173D8
173D3: AD 9403	LDA $0394	; Link Inter-Tile Offset (0-F)
173D6: 30 1B	BMI $173F3

173D8: A5 01	LDA $01
173DA: 85 98	STA $98		; Link Facing Direction (and more)
173DC: A9 08	LDA #$08	; A = 08
173DE: AC 9403	LDY $0394	; Link Inter-Tile Offset (0-F)
173E1: 30 02	BMI $173E5

173E3: A9 F8	LDA #$F8	; A = F8
173E5: 48	PHA
173E6: 98	TYA

173E7: 20 2170	JSR $7021

173EA: 85 01	STA $01
173EC: 68	PLA
173ED: 38	SEC
173EE: E5 01	SBC $01
173F0: 8D 9403	STA $0394	; Link Inter-Tile Offset (0-F)

173F3: 60	RTS

----

173F4: A5 5A	LDA $5A
173F6: 0D 9403	ORA $0394
173F9: D0 73	BNE $1746E

173FB: A5 10	LDA $10		; Current Level (0 = Overworld)
173FD: D0 0E	BNE $1740D

173FF: A5 EB	LDA $EB		; Current Location
17401: C9 22	CMP #$22
17403: D0 08	BNE $1740D

17405: A5 70	LDA $70		; Link X Position
17407: 29 07	AND #$07	; keep bits .... .xxx
17409: D0 63	BNE $1746E
1740B: F0 06	BEQ $17413

1740D: A5 70	LDA $70		; Link X Position
1740F: 29 0F	AND #$0F	; keep bits .... xxxx
17411: D0 5B	BNE $1746E

17413: A5 84	LDA $84		; Link Y Position
17415: 29 0F	AND #$0F	; keep bits .... xxxx
17417: C9 0D	CMP #$0D
17419: D0 53	BNE $1746E

1741B: 20 F4ED	JSR $EDF4

1741E: AD 9E04	LDA $049E
17421: A4 10	LDY $10		; Current Level (0 = Overworld)
17423: F0 4A	BEQ $1746F

17425: C9 70	CMP #$70
17427: 90 45	BCC $1746E

17429: C9 74	CMP #$74
1742B: B0 41	BCS $1746E

1742D: 20 64B4	JSR $B464

17430: A5 EB	LDA $EB		; Current Location
17432: 8D 2705	STA $0527
17435: A2 FF	LDX #$FF	; X = FF

17437: E8	INX
17438: BD B26B	LDA $6BB2,X
1743B: A8	TAY
1743C: A5 EB	LDA $EB		; Current Location
1743E: D9 7E68	CMP $687E,Y	; Screen Attributes - Table 0 (VRAM)
17441: F0 05	BEQ $17448

17443: D9 FE68	CMP $68FE,Y	; Screen Attributes - Table 1 (VRAM)
17446: D0 EF	BNE $17437

17448: 84 EB	STY $EB		; Current Location
1744A: A9 09	LDA #$09	; A = 09
1744C: 85 5B	STA $5B
1744E: C9 09	CMP #$09
17450: F0 08	BEQ $1745A

17452: 20 E96E	JSR $6EE9

17455: 8D 0206	STA $0602
17458: 85 3C	STA $3C

1745A: A9 10	LDA #$10	; A = 10
1745C: 85 12	STA $12		; Game Mode

1745E: 20 59B5	JSR $B559

17461: 4C 618F	JMP $8F61

----

17464: A5 10	LDA $10		; Current Level (0 = Overworld)
17466: D0 03	BNE $1746B

17468: 4C E590	JMP $90E5

----

1746B: 20 D792	JSR $92D7
1746E: 60	RTS

----

1746F: 85 65	STA $65
17471: C9 24	CMP #$24
17473: F0 11	BEQ $17486

17475: C9 88	CMP #$88
17477: F0 0D	BEQ $17486

17479: C9 70	CMP #$70
1747B: 90 F1	BCC $1746E

1747D: C9 74	CMP #$74
1747F: B0 ED	BCS $1746E

17481: A9 70	LDA #$70	; A = 70
17483: 8D 9E04	STA $049E

17486: 20 64B4	JSR $B464

17489: A4 EB	LDY $EB		; Current Location
1748B: B9 FE68	LDA $68FE,Y	; Screen Attributes - Table 1 (VRAM)
1748E: 29 FC	AND #$FC	; keep bits xxxx xx.. (Destination of Cave)
17490: C9 40	CMP #$40
17492: 90 0B	BCC $1749F

17494: A0 0B	LDY #$0B	; Y = 0B
17496: C9 50	CMP #$50
17498: D0 01	BNE $1749B

1749A: C8	INY
1749B: 98	TYA

1749C: 4C 4CB4	JMP $B44C

----

1749F: 4A	LSR
174A0: 4A	LSR
174A1: 85 10	STA $10		; Current Level (0 = Overworld)
174A3: A5 EB	LDA $EB		; Current Location
174A5: 8D 2605	STA $0526
174A8: A9 02	LDA #$02	; A = 02
174AA: D0 A0	BNE $1744C

174AC: AD 0160	LDA $6001
174AF: C9 5A	CMP #$5A
174B1: D0 07	BNE $174BA

174B3: AD FF7F	LDA $7FFF
174B6: C9 A5	CMP #$A5
174B8: F0 2C	BEQ $174E6

174BA: A9 FF	LDA #$FF	; A = FF
174BC: 8D 2A65	STA $652A
174BF: 8D 2B65	STA $652B
174C2: 8D 2C65	STA $652C
174C5: A9 65	LDA #$65	; A = 65
174C7: 85 01	STA $01
174C9: A9 30	LDA #$30	; A = 30
174CB: 85 00	STA $00
174CD: A0 00	LDY #$00	; Y = 00

174CF: A9 00	LDA #$00	; A = 00
174D1: 91 00	STA ($00),Y
174D3: A5 00	LDA $00
174D5: 18	CLC
174D6: 69 01	ADC #$01
174D8: 85 00	STA $00
174DA: A5 01	LDA $01
174DC: 69 00	ADC #$00
174DE: 85 01	STA $01
174E0: C9 80	CMP #$80
174E2: D0 EB	BNE $174CF

174E4: 38	SEC

174E5: 60	RTS

----

174E6: 18	CLC
174E7: 60	RTS

----

174E8: A9 07	LDA #$07	; A = 07
174EA: A0 FE	LDY #$FE	; Y = FE
174EC: 20 08E6	JSR $E608

174EF: A9 00	LDA #$00	; A = 00
174F1: 85 F7	STA $F7
174F3: 85 F5	STA $F5
174F5: 85 F6	STA $F6
174F7: 85 F3	STA $F3
174F9: A0 EF	LDY #$EF	; Y = EF

174FB: 99 0000	STA $0000,Y
174FE: 88	DEY
174FF: C0 FF	CPY #$FF
17501: D0 F8	BNE $174FB

17503: A9 40	LDA #$40	; A = 40
17505: 8D 2505	STA $0525
17508: 85 18	STA $18
1750A: A9 01	LDA #$01	; A = 01
1750C: 8D 3606	STA $0636
1750F: 8D 3706	STA $0637

17512: 60	RTS

----

17513: F0 10 FF 01	Table for Location Number +/- (4 bytes)

F0: Moving Up (-10)
10: Moving Down (+10)
FF: Moving Left (-1)
01: Moving Right (+1)

----

17517: A9 00	LDA #$00	; A = 00
17519: 85 E7	STA $E7

1751B: 60	RTS

----

1751C: 06 00	ASL $00
1751E: CA	DEX

1751F: 4C 28B5	JMP $B528

----

17522: A9 01	LDA #$01	; A = 01
17524: 85 00	STA $00
17526: A2 03	LDX #$03	; X = 03

17528: A5 E7	LDA $E7
1752A: 24 00	BIT $00
1752C: F0 EE	BEQ $1751C

1752E: 20 5AE8	JSR $E85A	; Get Screen Code for Location

17531: 8D E404	STA $04E4
17534: BD 13B5	LDA $B513,X
17537: 18	CLC
17538: 65 EB	ADC $EB		; Current Location
1753A: 85 EC	STA $EC		; Next Location
1753C: A5 10	LDA $10		; Current Level (0 = Overworld)
1753E: D0 03	BNE $17543

17540: 20 2F75	JSR $752F

17543: A5 EC	LDA $EC		; Next Location
17545: 10 12	BPL $17559

17547: 20 A3EB	JSR $EBA3	; Set $11 and $13 to 0

1754A: 85 E7	STA $E7
1754C: 85 10	STA $10		; Current Level (0 = Overworld)
1754E: A9 02	LDA #$02	; A = 02
17550: 85 12	STA $12		; Game Mode
17552: 85 5A	STA $5A
17554: A9 80	LDA #$80	; A = 80
17556: 8D 0406	STA $0604

17559: A5 FE	LDA $FE
1755B: 29 FE	AND #$FE	; keep bits xxxx xxx.
1755D: 85 FE	STA $FE

1755F: 60	RTS

--------

1781C: 8A	TXA
1781D: A8	TAY

1781E: 4C 35E7	JMP $E735

----

17821: A5 EF	LDA $EF
17823: 29 03	AND #$03	; keep bits .... ..xx
17825: F0 12	BEQ $17839

17827: C8	INY
17828: 4A	LSR
17829: B0 02	BCS $1782D

1782B: 88	DEY
1782C: 88	DEY

1782D: C0 FF	CPY #$FF
1782F: D0 02	BNE $17833

17831: A0 08	LDY #$08	; Y = 08

17833: C0 09	CPY #$09
17835: D0 02	BNE $17839

17837: A0 00	LDY #$00	; Y = 00

17839: 60	RTS

----

1783A: A9 00	LDA #$00	; A = 00
1783C: 85 BF	STA $BF
1783E: A5 10	LDA $10
17840: F0 47	BEQ $17889

17842: 20 1473	JSR $7314
17845: D0 1C	BNE $17863

17847: A4 EB	LDY $EB		; Current Location
17849: B9 7E6A	LDA $6A7E,Y
1784C: 29 1F	AND #$1F	; keep bits ...x xxxx
1784E: C9 03	CMP #$03
17850: D0 02	BNE $17854

17852: C6 BF	DEC $BF

17854: 85 AB	STA $AB
17856: B9 FE6A	LDA $6AFE,Y
17859: 29 07	AND #$07	; keep bits .... .xxx
1785B: C9 03	CMP #$03
1785D: F0 04	BEQ $17863

1785F: C9 07	CMP #$07
17861: D0 02	BNE $17865

17863: C6 BF	DEC $BF

17865: B9 FE69	LDA $69FE,Y
17868: 29 40	AND #$40	; keep bits .x.. ....
1786A: F0 03	BEQ $1786F

1786C: 20 F1A7	JSR $A7F1

1786F: 20 8A71	JSR $718A

17872: 85 83	STA $83
17874: 84 97	STY $97
17876: A4 EB	LDY $EB		; Current Location
17878: B9 7E6A	LDA $6A7E,Y
1787B: 29 1F	AND #$1F	; keep bits ...x xxxx
1787D: C9 1B	CMP #$1B
1787F: D0 07	BNE $17888

17881: A5 83	LDA $83
17883: 38	SEC
17884: E9 08	SBC #$08
17886: 85 83	STA $83

17888: 60	RTS

----

Item on the Overworld

17889: A9 1A	LDA #$1A	; A = 1A (1A = Code for Heart Container)
1788B: 85 AB	STA $AB
1788D: A9 C0	LDA #$C0	; A = C0 (X Position of Item)
1788F: A0 90	LDY #$90	; Y = 90 (Y Position of Item)
17891: A6 12	LDX $12
17893: E0 05	CPX #$05
17895: D0 06	BNE $1789D

17897: A6 EB	LDX $EB		; Current Location
17899: E0 5F	CPX #$5F	; Location of Heart Container in OW
1789B: F0 D5	BEQ $17872

1789D: C6 BF	DEC $BF

1789F: 60	RTS

----

178A0: Unused Space (6B0 bytes)

----

17F50: 78	SEI
17F51: D8	CLD
17F52: A9 00	LDA #$00	; A = 00
17F54: 8D 0020	STA $2000
17F57: A2 FF	LDX #$FF	; X = FF
17F59: 9A	TXS

17F5A: AD 0220	LDA $2002
17F5D: 29 80	AND #$80	; keep bits x... ....
17F5F: F0 F9	BEQ $17F5A

17F61: AD 0220	LDA $2002
17F64: 29 80	AND #$80	; keep bits x... ....
17F66: F0 F9	BEQ $17F61

17F68: 09 FF	ORA #$FF	; set  bits xxxx xxxx
17F6A: 8D 0080	STA $8000
17F6D: 8D 00A0	STA $A000
17F70: 8D 00C0	STA $C000
17F73: 8D 00E0	STA $E000

17F76: A9 0F	LDA #$0F	; A = 0F
17F78: 20 98BF	JSR $BF98

17F7B: A9 00	LDA #$00	; A = 00

17F7D: 8D 00A0	STA $A000
17F80: 4A	LSR
17F81: 8D 00A0	STA $A000
17F84: 4A	LSR
17F85: 8D 00A0	STA $A000
17F88: 4A	LSR
17F89: 8D 00A0	STA $A000
17F8C: 4A	LSR
17F8D: 8D 00A0	STA $A000

17F90: A9 07	LDA #$07	; A = 07
17F92: 20 ACBF	JSR $BFAC	; Switch to Bank A (7)

17F95: 4C 40E4	JMP $E440

----

17F98: 8D 0080	STA $8000
17F9B: 4A	LSR
17F9C: 8D 0080	STA $8000
17F9F: 4A	LSR
17FA0: 8D 0080	STA $8000
17FA3: 4A	LSR
17FA4: 8D 0080	STA $8000
17FA7: 4A	LSR
17FA8: 8D 0080	STA $8000

17FAB: 60	RTS

----

Bank Switch (Switch to Bank A)

17FAC: 8D 00E0	STA $E000
17FAF: 4A	LSR
17FB0: 8D 00E0	STA $E000
17FB3: 4A	LSR
17FB4: 8D 00E0	STA $E000
17FB7: 4A	LSR
17FB8: 8D 00E0	STA $E000
17FBB: 4A	LSR
17FBC: 8D 00E0	STA $E000

17FBF: 60	RTS

----

17FC0: Unused Space (3A bytes)

----

// End of Bank //

--------

