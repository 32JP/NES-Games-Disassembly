
The Legend of Zelda
Bank 7
0x1C000 - 0x1FFFF

--------

1C000

--------

1E400: Pointer table for Screen Tile Mappings Columns (20 * 2 = 40 bytes)

3065 -> 6530
4665 -> 6546
5C65 -> 655C
7265 -> 6572
8865 -> 6588
9E65 -> 659E
B465 -> 65B4
CA65 -> 65CA
E065 -> 65E0
F665 -> 65F6
0C66 -> 660C
2266 -> 6622
3866 -> 6638
4E66 -> 664E
6466 -> 6664
7A66 -> 667A

9066 -> 6690
A666 -> 66A6
BC66 -> 66BC
D266 -> 66D2
E866 -> 66E8
FE66 -> 66FE
1467 -> 6714
2A67 -> 672A
4067 -> 6740
5667 -> 6756
6C67 -> 676C
8267 -> 6782
9867 -> 6798
AE67 -> 67AE
C467 -> 67C4
DA67 -> 67DA

----

1E440: A9 00	LDA #$00	; A = 00
1E442: 85 F4	STA $F4

1E444: A9 05	LDA #$05	; A = 05
1E446: 20 ACFF	JSR $FFAC	; Bank Switch

1E449: 20 ACB4	JSR $B4AC
1E44C: 20 E8B4	JSR $B4E8
1E44F: 20 5EE4	JSR $E45E

1E452: A5 FF	LDA $FF
1E454: 09 A0	ORA #$A0	; set  bits x.x. ....
1E456: 8D 0020	STA $2000
1E459: 85 FF	STA $FF

1E45B: 4C 5BE4	JMP $E45B

----

1E45E: A9 00	LDA #$00	; A = 00
1E460: 8D 1140	STA $4011
1E463: A9 0F	LDA #$0F	; A = 0F
1E465: 8D 1540	STA $4015
1E468: A9 06	LDA #$06	; A = 06
1E46A: 8D 0120	STA $2001

1E46D: 20 F7E5	JSR $E5F7
1E470: 20 80E5	JSR $E580
1E473: 20 25E6	JSR $E625

1E476: A9 20	LDA #$20	; A = 20
1E478: 20 7DE4	JSR $E47D

1E47B: A9 28	LDA #$28	; A = 28
1E47D: A2 24	LDX #$24	; X = 24
1E47F: A0 00	LDY #$00	; Y = 00

1E481: 4C 94E5	JMP $E594

----

NMI Entry-Point

1E484: A5 FF	LDA $FF
1E486: A6 5C	LDX $5C
1E488: F0 02	BEQ $1E48C

1E48A: 49 02	EOR #$02	; flip bits .... ..x.

1E48C: 29 7F	AND #$7F	; keep bits .xxx xxxx
1E48E: 85 FF	STA $FF
1E490: 29 7E	AND #$7E	; keep bits .xxx xxx.
1E492: 8D 0020	STA $2000
1E495: A5 FE	LDA $FE
1E497: A4 E3	LDY $E3
1E499: D0 08	BNE $1E4A3

1E49B: A4 14	LDY $14		; PPU Loading Index
1E49D: D0 06	BNE $1E4A5

1E49F: A4 17	LDY $17
1E4A1: D0 02	BNE $1E4A5

1E4A3: 09 1E	ORA #$1E	; set  bits ...x xxx.

1E4A5: 8D 0120	STA $2001
1E4A8: 85 FE	STA $FE
1E4AA: A9 00	LDA #$00	; A = 00
1E4AC: 8D 0320	STA $2003
1E4AF: A9 02	LDA #$02	; A = 02
1E4B1: 8D 1440	STA $4014
1E4B4: A9 00	LDA #$00	; A = 00
1E4B6: 8D 0520	STA $2005
1E4B9: 8D 0520	STA $2005

1E4BC: A9 06	LDA #$06	; A = 06
1E4BE: 20 ACFF	JSR $FFAC	; Bank Switch

1E4C1: 20 80A0	JSR $A080	; PPU Loading

1E4C4: A9 3F	LDA #$3F	; A = 3F
1E4C6: 8D 0620	STA $2006
1E4C9: A9 00	LDA #$00	; A = 00
1E4CB: 8D 0620	STA $2006
1E4CE: 8D 0620	STA $2006
1E4D1: 8D 0620	STA $2006

1E4D4: AD 0220	LDA $2002
1E4D7: 29 40	AND #$40	; keep bits .x.. ....
1E4D9: D0 F9	BNE $1E4D4

1E4DB: AD 0220	LDA $2002
1E4DE: A5 E3	LDA $E3
1E4E0: F0 08	BEQ $1E4EA

1E4E2: A9 05	LDA #$05	; A = 05
1E4E4: 20 ACFF	JSR $FFAC	; Bank Switch

1E4E7: 20 2185	JSR $8521

1E4EA: A5 11	LDA $11
1E4EC: F0 2A	BEQ $1E518

1E4EE: A5 12	LDA $12		; Game Mode
1E4F0: F0 14	BEQ $1E506

1E4F2: C9 05	CMP #$05
1E4F4: F0 10	BEQ $1E506

1E4F6: C9 09	CMP #$09
1E4F8: F0 0C	BEQ $1E506

1E4FA: C9 0B	CMP #$0B
1E4FC: F0 08	BEQ $1E506

1E4FE: C9 0C	CMP #$0C
1E500: F0 04	BEQ $1E506

1E502: C9 13	CMP #$13
1E504: D0 12	BNE $1E518

1E506: AD 0220	LDA $2002
1E509: A5 FD	LDA $FD
1E50B: 8D 0520	STA $2005
1E50E: A5 FC	LDA $FC
1E510: 8D 0520	STA $2005
1E513: A5 FF	LDA $FF
1E515: 8D 0020	STA $2000
1E518: A5 E1	LDA $E1
1E51A: 05 E0	ORA $E0
1E51C: D0 1D	BNE $1E53B

1E51E: A2 26	LDX #$26	; X = 26
1E520: A9 3C	LDA #$3C	; A = 3C
1E522: A0 4E	LDY #$4E	; Y = 4E
1E524: 86 00	STX $00
1E526: D6 00	DEC $00,X
1E528: 10 05	BPL $1E52F

1E52A: A9 09	LDA #$09	; A = 09
1E52C: 95 00	STA $00,X
1E52E: 98	TYA

1E52F: AA	TAX

1E530: B5 00	LDA $00,X
1E532: F0 02	BEQ $1E536

1E534: D6 00	DEC $00,X

1E536: CA	DEX
1E537: E4 00	CPX $00
1E539: D0 F5	BNE $1E530

1E53B: A5 E3	LDA $E3
1E53D: D0 03	BNE $1E542

1E53F: 20 2DE6	JSR $E62D

1E542: A2 18	LDX #$18	; X = 18
1E544: A0 0D	LDY #$0D	; Y = 0D
1E546: B5 00	LDA $00,X
1E548: 29 02	AND #$02	; keep bits .... ..x.
1E54A: 85 00	STA $00
1E54C: B5 01	LDA $01,X
1E54E: 29 02	AND #$02	; keep bits .... ..x.
1E550: 45 00	EOR $00
1E552: 18	CLC
1E553: F0 01	BEQ $1E556

1E555: 38	SEC

1E556: 76 00	ROR $00,X
1E558: E8	INX
1E559: 88	DEY
1E55A: D0 FA	BNE $1E556

1E55C: A9 00	LDA #$00	; A = 00
1E55E: 20 ACFF	JSR $FFAC	; Bank Switch

1E561: 20 2598	JSR $9825

1E564: E6 15	INC $15		; Frame Counter
1E566: A5 11	LDA $11
1E568: D0 06	BNE $1E570

1E56A: 20 F8E8	JSR $E8F8

1E56D: 4C 73E5	JMP $E573

----

1E570: 20 30EB	JSR $EB30

1E573: AD 0220	LDA $2002
1E576: A5 FF	LDA $FF
1E578: 09 80	ORA #$80	; set  bits x... ....
1E57A: 8D 0020	STA $2000
1E57D: 85 FF	STA $FF

1E57F: 40	RTI

----

1E580: A9 00	LDA #$00	; A = 00
1E582: 8D 0520	STA $2005
1E585: 85 FD	STA $FD
1E587: 8D 0520	STA $2005
1E58A: 85 FC	STA $FC
1E58C: A9 30	LDA #$30	; A = 30
1E58E: 8D 0020	STA $2000
1E591: 85 FF	STA $FF

1E593: 60	RTS

----

1E594: 85 00	STA $00
1E596: 86 01	STX $01
1E598: 84 02	STY $02
1E59A: AD 0220	LDA $2002
1E59D: A5 FF	LDA $FF
1E59F: 29 FB	AND #$FB	; keep bits xxxx x.xx
1E5A1: 8D 0020	STA $2000
1E5A4: 85 FF	STA $FF
1E5A6: A5 00	LDA $00
1E5A8: 8D 0620	STA $2006
1E5AB: A0 00	LDY #$00	; Y = 00
1E5AD: 8C 0620	STY $2006
1E5B0: A2 04	LDX #$04	; X = 04
1E5B2: C9 20	CMP #$20
1E5B4: B0 02	BCS $1E5B8

1E5B6: A6 02	LDX $02

1E5B8: A0 00	LDY #$00	; Y = 00
1E5BA: A5 01	LDA $01

1E5BC: 8D 0720	STA $2007
1E5BF: 88	DEY
1E5C0: D0 FA	BNE $1E5BC

1E5C2: CA	DEX
1E5C3: D0 F7	BNE $1E5BC

1E5C5: A4 02	LDY $02
1E5C7: A5 00	LDA $00
1E5C9: C9 20	CMP #$20
1E5CB: 90 12	BCC $1E5DF

1E5CD: 69 02	ADC #$02
1E5CF: 8D 0620	STA $2006
1E5D2: A9 C0	LDA #$C0	; A = C0
1E5D4: 8D 0620	STA $2006
1E5D7: A2 40	LDX #$40	; X = 40

1E5D9: 8C 0720	STY $2007
1E5DC: CA	DEX
1E5DD: D0 FA	BNE $1E5D9

1E5DF: A6 01	LDX $01

1E5E1: 60	RTS

----

Go to Routine A in table that follows the JSR

1E5E2: 0A	ASL
1E5E3: A8	TAY
1E5E4: 68	PLA
1E5E5: 85 00	STA $00
1E5E7: 68	PLA
1E5E8: 85 01	STA $01
1E5EA: C8	INY
1E5EB: B1 00	LDA ($00),Y
1E5ED: 85 02	STA $02
1E5EF: C8	INY
1E5F0: B1 00	LDA ($00),Y
1E5F2: 85 03	STA $03

1E5F4: 6C 0200	JMP ($0002)

----

Remove All Sprites (all bytes set to F8)

1E5F7: A0 00	LDY #$00	; Y = 00
1E5F9: A2 40	LDX #$40	; X = 40

1E5FB: A9 F8	LDA #$F8	; A = F8
1E5FD: 99 0002	STA $0200,Y
1E600: C8	INY
1E601: C8	INY
1E602: C8	INY
1E603: C8	INY
1E604: CA	DEX
1E605: D0 F4	BNE $1E5FB

1E607: 60	RTS

----

1E608: 85 01	STA $01
1E60A: A9 00	LDA #$00	; A = 00
1E60C: 85 00	STA $00

1E60E: A9 00	LDA #$00	; A = 00
1E610: 91 00	STA ($00),Y
1E612: 88	DEY
1E613: C0 FF	CPY #$FF
1E615: D0 F7	BNE $1E60E

1E617: C6 01	DEC $01
1E619: A5 01	LDA $01
1E61B: C9 03	CMP #$03
1E61D: B0 EF	BCS $1E60E

1E61F: A9 FF	LDA #$FF	; A = FF
1E621: 8D 0203	STA $0302

1E624: 60	RTS

----

1E625: A9 00	LDA #$00	; A = 00
1E627: 8D 0120	STA $2001
1E62A: 85 FE	STA $FE

1E62C: 60	RTS

----

1E62D: A9 01	LDA #$01	; A = 01
1E62F: 8D 1640	STA $4016
1E632: A9 00	LDA #$00	; A = 00
1E634: 8D 1640	STA $4016
1E637: 85 03	STA $03
1E639: 85 04	STA $04
1E63B: AA	TAX

1E63C: 20 40E6	JSR $E640

1E63F: E8	INX

1E640: 85 02	STA $02
1E642: A9 01	LDA #$01	; A = 01
1E644: 8D 1640	STA $4016
1E647: A9 00	LDA #$00	; A = 00
1E649: 8D 1640	STA $4016
1E64C: A0 08	LDY #$08	; Y = 08

1E64E: BD 1640	LDA $4016,X
1E651: 4A	LSR
1E652: 36 F8	ROL $F8,X
1E654: 4A	LSR
1E655: 26 00	ROL $00
1E657: 88	DEY
1E658: D0 F4	BNE $1E64E

1E65A: B5 F8	LDA $F8,X
1E65C: C5 02	CMP $02
1E65E: D0 E0	BNE $1E640

1E660: F6 03	INC $03,X
1E662: B4 03	LDY $03,X
1E664: C0 02	CPY #$02
1E666: 90 D8	BCC $1E640

1E668: A5 00	LDA $00
1E66A: 15 F8	ORA $F8,X
1E66C: 95 F8	STA $F8,X
1E66E: 48	PHA
1E66F: 55 FA	EOR $FA,X
1E671: 35 F8	AND $F8,X
1E673: 95 F8	STA $F8,X
1E675: 68	PLA
1E676: 95 FA	STA $FA,X

1E678: 60	RTS

----

1E679: A5 10	LDA $10		; Current Level (0 = Overworld)
1E67B: F0 50	BEQ $1E6CD

1E67D: A9 05	LDA #$05	; A = 05
1E67F: 20 ACFF	JSR $FFAC	; Bank Switch

1E682: 20 EBB5	JSR $B5EB
1E685: F0 46	BEQ $1E6CD

1E687: AD AE6B	LDA $6BAE
1E68A: A2 04	LDX #$04	; X = 04

1E68C: 4C ED71	JMP $71ED

----

1E68F: A4 10	LDY $10		; Current Level (0 = Overworld)
1E691: F0 25	BEQ $1E6B8

1E693: A5 98	LDA $98		; Link Facing Direction (and more)
1E695: 85 02	STA $02

1E697: A9 05	LDA #$05	; A = 05
1E699: 20 ACFF	JSR $FFAC	; Bank Switch

1E69C: 20 F6A3	JSR $A3F6

1E69F: A4 01	LDY $01
1E6A1: 84 E7	STY $E7

1E6A3: 20 E2E5	JSR $E5E2	; Go to routine A in following table

----

1E6A6: Pointer table for ? (9 * 2 = 12 bytes)

Point to Bank 5

22B5 -> 17522
17B5 -> 17517
22B5 -> 17522
22B5 -> 17522
22B5 -> 17522
22B5 -> 17522
22B5 -> 17522
22B5 -> 1752217B5 -> 17517

----

1E6B8: A4 98	LDY $98		; Link Facing Direction (and more)
1E6BA: A9 00	LDA #$00	; A = 00
1E6BC: F0 E3	BEQ $1E6A1

----

1E6BE: 01 02 04 08 10 20 40 80		Masks for Triforce Pieces (8 bytes)

----

1E6C6: 20 CEE6	JSR $E6CE

1E6C9: 09 20	ORA #$20	; set  bits ..x. ....
1E6CB: 91 00	STA ($00),Y

1E6CD: 60	RTS

----

1E6CE: AD AF6B	LDA $6BAF	; Pointer for Column Data (low byte)
1E6D1: 85 00	STA $00
1E6D3: AD B06B	LDA $6BB0	; Pointer for Column Data (high byte)
1E6D6: 85 01	STA $01
1E6D8: A4 EB	LDY $EB		; Current Location
1E6DA: B1 00	LDA ($00),Y

1E6DC: 60	RTS

----

1E6DD: A5 71	LDA $71
1E6DF: 85 83	STA $83
1E6E1: A5 85	LDA $85
1E6E3: 85 97	STA $97

1E6E5: 4C 0CE7	JMP $E70C

----

1E6E8: 68	PLA
1E6E9: 60	RTS

----

1E6EA: 20 1473	JSR $7314
1E6ED: D0 FA	BNE $1E6E9

1E6EF: A5 BF	LDA $BF
1E6F1: 30 F6	BMI $1E6E9

1E6F3: A5 AB	LDA $AB
1E6F5: C9 3F	CMP #$3F
1E6F7: F0 F0	BEQ $1E6E9

1E6F9: A2 01	LDX #$01	; X = 01
1E6FB: AD 5003	LDA $0350
1E6FE: C9 17	CMP #$17
1E700: F0 DB	BEQ $1E6DD

1E702: C9 2A	CMP #$2A
1E704: F0 D7	BEQ $1E6DD

1E706: C9 30	CMP #$30
1E708: F0 D3	BEQ $1E6DD

1E70A: A2 13	LDX #$13	; X = 13
1E70C: A5 AB	LDA $AB

1E70E: 48	PHA
1E70F: BD A803	LDA $03A8,X	; Time before item disappears
1E712: C9 F0	CMP #$F0
1E714: 90 03	BCC $1E719

1E716: 4A	LSR
1E717: 90 CF	BCC $1E6E8

1E719: 20 93FA	JSR $FA93

1E71C: 68	PLA
1E71D: AA	TAX
1E71E: BD C872	LDA $72C8,X
1E721: C9 30	CMP #$30
1E723: F0 0C	BEQ $1E731

1E725: 29 0F	AND #$0F	; keep bits .... xxxx

1E727: 85 04	STA $04
1E729: BD A472	LDA $72A4,X
1E72C: AA	TAX
1E72D: A8	TAY

1E72E: 4C 3AE7	JMP $E73A

----

1E731: A9 FF	LDA #$FF	; A = FF
1E733: D0 F2	BNE $1E727

1E735: BD 5706	LDA $0657,X	; Item at index X (index 0 = Sword)
1E738: 85 04	STA $04

1E73A: BD EC72	LDA $72EC,X
1E73D: E0 16	CPX #$16	; Number of Rupees (66D)
1E73F: F0 0C	BEQ $1E74D

1E741: E0 1A	CPX #$1A	; Triforce Pieces (1 bit per piece) (671)
1E743: F0 08	BEQ $1E74D

1E745: E0 1B	CPX #$1B
1E747: F0 04	BEQ $1E74D

1E749: E0 19	CPX #$19	; Heart following the last filled heart
1E74B: D0 09	BNE $1E756

1E74D: A5 15	LDA $15		; Frame Counter
1E74F: 29 08	AND #$08	; keep bits .... x...
1E751: 4A	LSR
1E752: 4A	LSR
1E753: 4A	LSR
1E754: 69 01	ADC #$01

1E756: E0 00	CPX #$00	; Sword Type (657)
1E758: F0 19	BEQ $1E773

1E75A: E0 04	CPX #$04	; Candle Type (65B)
1E75C: F0 15	BEQ $1E773

1E75E: E0 02	CPX #$02	; Arrow Type (659)
1E760: F0 11	BEQ $1E773

1E762: E0 07	CPX #$07	; Potion Type (65E)
1E764: F0 0D	BEQ $1E773

1E766: E0 0B	CPX #$0B	; Ring Type (662)
1E768: F0 09	BEQ $1E773

1E76A: A2 00	LDX #$00	; X = 00
1E76C: 86 0C	STX $0C
1E76E: A2 0F	LDX #$0F	; X = 0F

1E770: 4C 0C79	JMP $790C

----

1E773: 18	CLC
1E774: 65 04	ADC $04
1E776: E0 00	CPX #$00
1E778: D0 F0	BNE $1E76A

1E77A: C9 02	CMP #$02
1E77C: D0 EC	BNE $1E76A

1E77E: A0 20	LDY #$20	; Y = 20

1E780: 4C 6AE7	JMP $E76A

----

1E783: A2 07	LDX #$07	; X = 07
1E785: 8E 5606	STX $0656	; Cursor Position for B Item
1E788: D0 16	BNE $1E7A0

1E78A: AE 5606	LDX $0656	; Cursor Position for B Item
1E78D: F0 26	BEQ $1E7B5

1E78F: BD 5706	LDA $0657,X
1E792: F0 5A	BEQ $1E7EE

1E794: E0 0F	CPX #$0F
1E796: D0 08	BNE $1E7A0

1E798: AC 5E06	LDY $065E	; Potion Type (00 = None, 01 = Blue, 02 = Red)
1E79B: D0 E6	BNE $1E783

1E79D: 4A	LSR
1E79E: 09 01	ORA #$01	; set  bits .... ...x

1E7A0: 85 04	STA $04
1E7A2: A9 1F	LDA #$1F	; A = 1F
1E7A4: 85 01	STA $01
1E7A6: A9 7C	LDA #$7C	; A = 7C
1E7A8: 85 00	STA $00

1E7AA: A9 05	LDA #$05	; A = 05
1E7AC: 20 ACFF	JSR $FFAC	; Bank Switch

1E7AF: 20 1CB8	JSR $B81C

1E7B2: 4C D7E7	JMP $E7D7

----

1E7B5

--------

1E7D7
1E7EE

--------

Get Screen Code for Location

1E85A: A4 EB	LDY $EB		; Current Location
1E85C: B9 FE69	LDA $69FE,Y	; Screen Attributes - Table 3
1E85F: 29 3F	AND #$3F	; keep bits ..xx xxxx (Screen Code)

1E861: 60	RTS

----

1E862

--------

1EA0E: 00 04 08		Table for ? (3 bytes) (1 byte per save slot)

--------

1EA2B: A6 16	LDX $16		; Selected Save Slot (0-2)
1EA2D: BC 0EEA	LDY $EA0E,X
1EA30: B9 0468	LDA $6804,Y
1EA33: 8D 926B	STA $6B92
1EA36: A9 18	LDA #$18	; A = 18
1EA38: 85 14	STA $14		; PPU Loading Index
1EA3A: E6 13	INC $13		; Routine Index

1EA3C: 60	RTS

--------

1EA3D: 20 F7E5	JSR $E5F7
1EA40: 20 DE71	JSR $71DE
1EA43: 20 79E6	JSR $E679

1EA46: A9 05	LDA #$05	; A = 05
1EA48: 20 ACFF	JSR $FFAC	; Bank Switch

1EA4B: 20 2989	JSR $8929

1EA4E: 4C 8AE7	JMP $E78A

--------

1EA51

--------

1EA59: 08 36 0A 0A 0A 0A 7C 7C 7C	PPU Loading Code (table 1A000, Bank 6)
1EA62: 3D 3E 38 39 32 31 43 44 45	Enemy Code

----

1EA71: A5 10	LDA $10		; Current Level
1EA73: F0 14	BEQ $1EA89

1EA75: A0 08	LDY #$08	; Y = 08
1EA77: AD 5003	LDA $0350
1EA7A: D9 62EA	CMP $EA62,Y
1EA7D: D0 05	BNE $1EA84

1EA7F: BE 59EA	LDX $EA59,Y
1EA82: D0 45	BNE $1EAC9

1EA84: 88	DEY
1EA85: 10 F3	BPL $1EA7A
1EA87: 30 33	BMI $1EABC

1EA89: A5 EB	LDA $EB		; Current Location
1EA8B: C9 0F	CMP #$0F	; Top-Right Screen on Overworld
1EA8D: D0 09	BNE $1EA98

1EA8F: A5 5A	LDA $5A
1EA91: D0 05	BNE $1EA98

1EA93: A9 04	LDA #$04	; A = 04 (Secret Found)
1EA95: 8D 0206	STA $0602	; Sound Effect
1EA98: A2 20	LDX #$20	; X = 20
1EA9A: AD 5A03	LDA $035A
1EA9D: C9 65	CMP #$65
1EA9F: F0 28	BEQ $1EAC9

1EAA1: C9 66	CMP #$66
1EAA3: F0 06	BEQ $1EAAB

1EAA5: C9 62	CMP #$62
1EAA7: D0 0F	BNE $1EAB8

1EAA9: A2 24	LDX #$24	; X = 24
1EAAB: A4 EB	LDY $EB
1EAAD: B9 FE68	LDA $68FE,Y
1EAB0: 29 01	AND #$01	; keep bits .... ...x
1EAB2: D0 15	BNE $1EAC9

1EAB4: A2 22	LDX #$22	; X = 22
1EAB6: D0 11	BNE $1EAC9

1EAB8: A2 7A	LDX #$7A	; X = 7A
1EABA: D0 0D	BNE $1EAC9

1EABC: A0 03	LDY #$03	; Y = 03
1EABE: B9 9D6B	LDA $6B9D,Y
1EAC1: 99 1768	STA $6817,Y
1EAC4: 88	DEY
1EAC5: 10 F7	BPL $1EABE

1EAC7: A2 06	LDX #$06	; X = 06

1EAC9: 86 14	STX $14

1EACB: A9 05	LDA #$05	; A = 05
1EACD: 20 ACFF	JSR $FFAC	; Bank Switch

1EAD0: 20 5EB0	JSR $B05E

1EAD3: A5 10	LDA $10
1EAD5: F0 06	BEQ $1EADD

1EAD7: 20 C6E6	JSR $E6C6
1EADA: 20 1275	JSR $7512

1EADD: A9 05	LDA #$05	; A = 05
1EADF: 20 ACFF	JSR $FFAC	; Bank Switch

1EAE2: 20 3AB8	JSR $B83A

1EAE5: A0 00	LDY #$00	; Y = 00
1EAE7: A2 05	LDX #$05	; X = 05
1EAE9: A5 EB	LDA $EB		; Current Location
1EAEB: DD 2106	CMP $0621,X
1EAEE: D0 01	BNE $1EAF1

1EAF0: C8	INY

1EAF1: CA	DEX
1EAF2: 10 F7	BPL $1EAEB

1EAF4: C0 00	CPY #$00
1EAF6: D0 15	BNE $1EB0D

1EAF8: AE 2006	LDX $0620
1EAFB: 9D 2106	STA $0621,X
1EAFE: EE 2006	INC $0620
1EB01: AD 2006	LDA $0620
1EB04: C9 06	CMP #$06
1EB06: 90 05	BCC $1EB0D

1EB08: A9 00	LDA #$00	; A = 00
1EB0A: 8D 2006	STA $0620

1EB0D: A5 12	LDA $12		; Game Mode
1EB0F: C9 05	CMP #$05
1EB11: D0 0C	BNE $1EB1F

1EB13: A5 10	LDA $10		; Current Level
1EB15: F0 0B	BEQ $1EB22

1EB17: A9 05	LDA #$05	; A = 05
1EB19: 20 ACFF	JSR $FFAC	; Bank Switch

1EB1C: 20 2893	JSR $9328

1EB1F: 4C 906C	JMP $6C90

--------

1EB30

--------

1EBA3: A9 00	LDA #$00	; A = 00
1EBA5: 85 11	STA $11
1EBA7: 85 13	STA $13		; Routine Index

1EBA9: 60	RTS

----

1EBAA: 20 4872	JSR $7248

1EBAD: A5 7C	LDA $7C
1EBAF: D0 47	BNE $1EBF8

1EBB1: A9 0F	LDA #$0F	; A = 0F
1EBB3: 20 98FF	JSR $FF98

1EBB6: A5 5A	LDA $5A
1EBB8: F0 03	BEQ $1EBBD

1EBBA: 4C F2EB	JMP $EBF2

--------

1ECCC: F0 10	BEQ $1ECDE

1ECCE: A5 61	LDA $61
1ECD0: C5 70	CMP $70		; Link X Position
1ECD2: D0 0A	BNE $1ECDE

1ECD4: 49 FF	EOR #$FF	; flip all bits
1ECD6: 85 61	STA $61
1ECD8: A5 62	LDA $62
1ECDA: 49 FF	EOR #$FF	; flip all bits
1ECDC: 85 62	STA $62

1ECDE: AE 4003	LDX $0340
1ECE1: 20 98FE	JSR $FE98

1ECE4: BD 4F03	LDA $034F,X
1ECE7: F0 25	BEQ $1ED0E

1ECE9: BD 4F03	LDA $034F,X
1ECEC: 20 74FB	JSR $FB74

1ECEF: AE 4003	LDX $0340
1ECF2: BD 0504	LDA $0405,X
1ECF5: D0 17	BNE $1ED0E

1ECF7: BD BF04	LDA $04BF,X
1ECFA: 29 01	AND #$01	; keep bits .... ...x
1ECFC: D0 10	BNE $1ED0E

1ECFE: BD BF04	LDA $04BF,X
1ED01: 29 04	AND #$04	; keep bits .... .x..
1ED03: D0 03	BNE $1ED08

1ED05: 20 D477	JSR $77D4

1ED08: AE 4003	LDX $0340
1ED0B: 20 D079	JSR $79D0

1ED0E: CE 4003	DEC $0340
1ED11: D0 CB	BNE $1ECDE

1ED13: A9 0B	LDA #$0B	; A = 0B
1ED15: 8D 4003	STA $0340
1ED18: AD 6F06	LDA $066F	; Heart Containers / Filled Hearts
1ED1B: 29 0F	AND #$0F	; keep bits .... xxxx
1ED1D: D0 08	BNE $1ED27

1ED1F: AD 0406	LDA $0604	; Sound Effect
1ED22: 09 40	ORA #$40	; set  bits .x.. ....
1ED24: 8D 0406	STA $0604

1ED27: A5 10	LDA $10		; Current Level
1ED29: F0 24	BEQ $1ED4F

1ED2B: A9 04	LDA #$04	; A = 04
1ED2D: 20 ACFF	JSR $FFAC	; Bank Switch
1ED30: 20 5086	JSR $8650
1ED33: 20 79E6	JSR $E679

1ED36: A9 05	LDA #$05	; A = 05
1ED38: 20 ACFF	JSR $FFAC	; Bank Switch
1ED3B: 20 BC8B	JSR $8BBC
1ED3E: 20 AD8A	JSR $8AAD
1ED41: 20 F3A5	JSR $A5F3

1ED44: A9 01	LDA #$01	; A = 01
1ED46: 20 ACFF	JSR $FFAC	; Bank Switch
1ED49: 20 7CA1	JSR $A17C

1ED4C: 4C 6AED	JMP $ED6A

--------

1ED94: Unused Space (C bytes)

--------

1EDD7: BD 9403	LDA $0394,X
1EDDA: D0 0E	BNE $1EDEA

1EDDC: B5 70	LDA $70,X
1EDDE: 29 F8	AND #$F8	; keep bits xxxx x...
1EDE0: 95 70	STA $70,X
1EDE2: B5 84	LDA $84,X
1EDE4: 29 F8	AND #$F8	; keep bits xxxx x...
1EDE6: 09 05	ORA #$05	; set  bits .... .x.x
1EDE8: 95 84	STA $84,X

1EDEA: 60	RTS

----

1EDEB: 8D 91 9C AC AD CC D2 D5 DF	Table for ? (9 bytes)

----

1EDF4: A0 00	LDY #$00	; Y = 00
1EDF6: 84 0F	STY $0F
1EDF8: F0 16	BEQ $1EE10

1EDFA: A0 F8	LDY #$F8	; Y = F8
1EDFC: E0 00	CPX #$00
1EDFE: F0 02	BEQ $1EE02

1EE00: A0 F0	LDY #$F0	; Y = F0

1EE02: A5 0F	LDA $0F
1EE04: 29 05	AND #$05	; keep bits .... .x.x
1EE06: F0 08	BEQ $1EE10

1EE08: A0 08	LDY #$08	; Y = 08
1EE0A: 29 04	AND #$04	; keep bits .... .x..
1EE0C: D0 02	BNE $1EE10

1EE0E: A0 10	LDY #$10	; Y = 10

1EE10: 84 04	STY $04
1EE12: B5 84	LDA $84,X	; Link/Enemy Y Position
1EE14: 18	CLC
1EE15: 69 0B	ADC #$0B
1EE17: A8	TAY
1EE18: 48	PHA
1EE19: A5 0F	LDA $0F
1EE1B: 29 0C	AND #$0C	; keep bits .... xx..
1EE1D: F0 12	BEQ $1EE31

1EE1F: 29 04	AND #$04	; keep bits .... .x..
1EE21: F0 04	BEQ $1EE27

1EE23: C0 DD	CPY #$DD
1EE25: B0 05	BCS $1EE2C

1EE27: 68	PLA
1EE28: 18	CLC
1EE29: 65 04	ADC $04
1EE2B: 48	PHA

1EE2C: B4 70	LDY $70,X	; Link/Enemy X Position

1EE2E: 4C 48EE	JMP $EE48

----

1EE31: B4 70	LDY $70,X	; Link/Enemy X Position
1EE33: A5 0F	LDA $0F
1EE35: 29 01	AND #$01	; keep bits .... ...x
1EE37: F0 06	BEQ $1EE3F

1EE39: C0 F0	CPY #$F0
1EE3B: B0 0B	BCS $1EE48
1EE3D: 90 04	BCC $1EE43

1EE3F: C0 10	CPY #$10
1EE41: 90 05	BCC $1EE48

1EE43: 98	TYA
1EE44: 18	CLC
1EE45: 65 04	ADC $04
1EE47: A8	TAY

1EE48: 98	TYA
1EE49: 29 F8	AND #$F8	; keep bits xxxx x...
1EE4B: 4A	LSR
1EE4C: 4A	LSR
1EE4D: A8	TAY
1EE4E: B9 00E4	LDA $E400,Y
1EE51: 85 00	STA $00
1EE53: B9 01E4	LDA $E401,Y
1EE56: 85 01	STA $01
1EE58: 68	PLA
1EE59: 38	SEC
1EE5A: E9 40	SBC #$40
1EE5C: 4A	LSR
1EE5D: 4A	LSR
1EE5E: 4A	LSR
1EE5F: A8	TAY
1EE60: B1 00	LDA ($00),Y
1EE62: 9D 9E04	STA $049E,X
1EE65: A5 0F	LDA $0F
1EE67: 29 0C	AND #$0C	; keep bits .... xx..
1EE69: F0 0F	BEQ $1EE7A

1EE6B: 98	TYA
1EE6C: 18	CLC
1EE6D: 69 16	ADC #$16
1EE6F: A8	TAY
1EE70: B1 00	LDA ($00),Y
1EE72: DD 9E04	CMP $049E,X
1EE75: 90 03	BCC $1EE7A

1EE77: 9D 9E04	STA $049E,X

1EE7A: BD 9E04	LDA $049E,X
1EE7D: A4 10	LDY $10		; Current Level (0 = Overworld)
1EE7F: D0 36	BNE $1EEB7

1EE81: BD 9E04	LDA $049E,X
1EE84: A0 09	LDY #$09	; Y = 09

1EE86: 88	DEY
1EE87: 30 07	BMI $1EE90

1EE89: D9 EBED	CMP $EDEB,Y
1EE8C: D0 F8	BNE $1EE86

1EE8E: A9 26	LDA #$26	; A = 26

1EE90: 9D 9E04	STA $049E,X
1EE93: E0 00	CPX #$00
1EE95: D0 1D	BNE $1EEB4

Check for Special Passage towards the top-right screen

1EE97: A5 EB	LDA $EB		; Current Location
1EE99: C9 1F	CMP #$1F	; 1F = Casino in Dead Tree
1EE9B: D0 17	BNE $1EEB4

1EE9D: A9 0C	LDA #$0C	; A = 0C
1EE9F: 25 0F	AND $0F
1EEA1: F0 11	BEQ $1EEB4

1EEA3: A5 70	LDA $70		; Link X Position
1EEA5: C9 80	CMP #$80
1EEA7: D0 0B	BNE $1EEB4

1EEA9: A5 84	LDA $84		; Link Y Position
1EEAB: C9 56	CMP #$56
1EEAD: B0 05	BCS $1EEB4

1EEAF: A9 26	LDA #$26	; A = 26
1EEB1: 8D 9E04	STA $049E

1EEB4: BD 9E04	LDA $049E,X

1EEB7: 60	RTS

----

1EEB8: B5 C0	LDA $C0,X
1EEBA: 0A	ASL
1EEBB: 90 23	BCC $1EEE0

1EEBD: 4A	LSR
1EEBE: 95 C0	STA $C0,X
1EEC0: B4 98	LDY $98,X	; Link/Enemy Facing Direction
1EEC2: C0 03	CPY #$03
1EEC4: 90 15	BCC $1EEDB

1EEC6: 29 03	AND #$03	; keep bits .... ..xx
1EEC8: F0 10	BEQ $1EEDA

1EECA: BD 9403	LDA $0394,X	; Inter-Tile Offset (0-F)
1EECD: F0 0B	BEQ $1EEDA

1EECF: E0 00	CPX #$00
1EED1: D0 11	BNE $1EEE4

1EED3: A5 98	LDA $98		; Link Facing Direction
1EED5: 20 1370	JSR $7013

1EED8: 85 C0	STA $C0

1EEDA: 60	RTS

----

Set $C0,X and $D3,X to Zero

1EEE4: A9 00	LDA #$00	; A = 00

Set $C0,X and $D3,X to A

1EEE6: 95 C0	STA $C0,X
1EEE8: 95 D3	STA $D3,X

1EEEA: 60	RTS

----

1EEEB: A9 04	LDA #$04	; A = 04
1EEED: 85 03	STA $03

1EEEF: BD 9403	LDA $0394,X	; Inter-Tile Offset (0-F)
1EEF2: D0 11	BNE $1EF05

1EEF4: 20 D7ED	JSR $EDD7

1EEF7: B5 C0	LDA $C0,X
1EEF9: 29 0F	AND #$0F	; keep bits .... xxxx
1EEFB: 85 0F	STA $0F

1EEFD: 20 FAED	JSR $EDFA
1EF00: CD 4A03	CMP $034A
1EF03: B0 DF	BCS $1EEE4

1EF05: B5 C0	LDA $C0,X
1EF07: 29 0F	AND #$0F	; keep bits .... xxxx

1EF09: 20 B66F	JSR $6FB6
1EF0C: F0 D6	BEQ $1EEE4

1EF0E: AD 5003	LDA $0350
1EF11: C9 36	CMP #$36
1EF13: F0 08	BEQ $1EF1D

1EF15: C9 4B	CMP #$4B
1EF17: 90 0B	BCC $1EF24

1EF19: C9 53	CMP #$53
1EF1B: B0 07	BCS $1EF24

1EF1D: 20 466E	JSR $6E46

1EF20: A5 0F	LDA $0F
1EF22: F0 C0	BEQ $1EEE4

1EF24: A0 01	LDY #$01	; Y = 01
1EF26: B5 C0	LDA $C0,X
1EF28: 29 05	AND #$05	; keep bits .... .x.x
1EF2A: D0 02	BNE $1EF2E

1EF2C: A0 FF	LDY #$FF	; Y = FF

1EF2E: 84 02	STY $02
1EF30: D6 D3	DEC $D3,X
1EF32: BD 9403	LDA $0394,X	; Inter-Tile Offset (0-F)
1EF35: 18	CLC
1EF36: 65 02	ADC $02
1EF38: 9D 9403	STA $0394,X	; Inter-Tile Offset (0-F)
1EF3B: 29 0F	AND #$0F	; keep bits .... xxxx
1EF3D: F0 08	BEQ $1EF47

1EF3F: E0 00	CPX #$00
1EF41: D0 07	BNE $1EF4A

1EF43: 29 07	AND #$07	; keep bits .... .xxx
1EF45: D0 03	BNE $1EF4A

1EF47: 9D 9403	STA $0394,X	; Inter-Tile Offset (0-F)

1EF4A: B5 C0	LDA $C0,X
1EF4C: 29 03	AND #$03	; keep bits .... ..xx
1EF4E: F0 0A	BEQ $1EF5A

1EF50: B5 70	LDA $70,X	; Link/Enemy X Position
1EF52: 18	CLC
1EF53: 65 02	ADC $02
1EF55: 95 70	STA $70,X	; Link/Enemy X Position

1EF57: 4C 61EF	JMP $EF61

----

1EF5A: B5 84	LDA $84,X	; Link/Enemy Y Position
1EF5C: 18	CLC
1EF5D: 65 02	ADC $02
1EF5F: 95 84	STA $84,X	; Link/Enemy Y Position
1EF61: C6 03	DEC $03
1EF63: D0 8A	BNE $1EEEF

1EF65: 60	RTS

----

1EF66: Locations that have a Whistle Secret (B bytes)

42 06 29 2B 30 3A 3C 58 60 6E 72

----

1EF71: A9 10	LDA #$10	; A = 10 (Flute Chime)
1EF73: 8D 0206	STA $0602	; Sound Effect
1EF76: A9 98	LDA #$98	; A = 98
1EF78: 85 3C	STA $3C
1EF7A: A5 10	LDA $10		; Current Level (0 = Overworld)
1EF7C: D0 49	BNE $1EFC7

1EF7E: A5 12	LDA $12
1EF80: C9 05	CMP #$05
1EF82: D0 34	BNE $1EFB8

1EF84: A4 16	LDY $16		; Selected Save Slot (0-2)
1EF86: B9 2D06	LDA $062D,Y	; 2nd Quest Flag (1 = 2nd Quest)
1EF89: 48	PHA
1EF8A: A5 EB	LDA $EB		; Current Location
1EF8C: A0 0A	LDY #$0A	; Y = 0A

1EF8E: D9 66EF	CMP $EF66,Y
1EF91: F0 05	BEQ $1EF98

1EF93: 88	DEY
1EF94: 10 F8	BPL $1EF8E
1EF96: 30 21	BMI $1EFB9

1EF98: C0 00	CPY #$00
1EF9A: D0 05	BNE $1EFA1

1EF9C: 68	PLA
1EF9D: D0 1B	BNE $1EFBA
1EF9F: F0 03	BEQ $1EFA4

1EFA1: 68	PLA
1EFA2: F0 16	BEQ $1EFBA

1EFA4: AD 1A05	LDA $051A
1EFA7: D0 0F	BNE $1EFB8

1EFA9: A0 09	LDY #$09	; Y = 09

1EFAB: 88	DEY
1EFAC: 30 0A	BMI $1EFB8

1EFAE: B9 5003	LDA $0350,Y
1EFB1: D0 F8	BNE $1EFAB

1EFB3: A9 5E	LDA #$5E	; A = 5E (5E = Dried Lake Secret)
1EFB5: 99 5003	STA $0350,Y

1EFB8: 60	RTS

----

1EFB9: 68	PLA

1EFBA: A9 01	LDA #$01	; A = 01
1EFBC: 20 ACFF	JSR $FFAC	; Bank Switch

1EFBF: 20 A8A0	JSR $A0A8

1EFC2: A9 05	LDA #$05	; A = 05
1EFC4: 4C ACFF	JMP $FFAC	; Bank Switch

----

1EFC7: AD 1B05	LDA $051B
1EFCA: D0 03	BNE $1EFCF

1EFCC: EE 1B05	INC $051B

1EFCF: 60	RTS

----

1EFD0: B5 C0	LDA $C0,X
1EFD2: F0 03	BEQ $1EFD7

1EFD4: 4C B8EE	JMP $EEB8

----

1EFD7: E0 00	CPX #$00
1EFD9: D0 0E	BNE $1EFE9

1EFDB: AD 9403	LDA $0394	; Link Inter-Tile Offset (0-F)
1EFDE: F0 09	BEQ $1EFE9

1EFE0: AD F803	LDA $03F8	; Link Movement Direction ?
1EFE3: F0 1C	BEQ $1F001

1EFE5: A5 98	LDA $98		; Link Facing Direction (and more)
1EFE7: D0 1A	BNE $1F003

1EFE9: E0 00	CPX #$00
1EFEB: F0 07	BEQ $1EFF4

1EFED: AD 6C06	LDA $066C	; Clock Activated
1EFF0: 15 3D	ORA $3D,X
1EFF2: D0 DB	BNE $1EFCF

1EFF4: BD F803	LDA $03F8,X
1EFF7: F0 08	BEQ $1F001

1EFF9: 20 1370	JSR $7013

1EFFC: B9 C36D	LDA $6DC3,Y	; Table at 6633 in Bank 1
1EFFF: D0 02	BNE $1F003

1F001: A9 00	LDA #$00	; A = 00

1F003: 29 0F	AND #$0F	; keep bits .... xxxx
1F005: 85 0F	STA $0F
1F007: A9 00	LDA #$00	; A = 00
1F009: 85 0E	STA $0E
1F00B: E0 00	CPX #$00
1F00D: D0 0E	BNE $1F01D

1F00F: B5 AC	LDA $AC,X	; Item Dropped by Enemy
1F011: 29 F0	AND #$F0	; keep bits xxxx ....
1F013: C9 10	CMP #$10
1F015: F0 04	BEQ $1F01B

1F017: C9 20	CMP #$20
1F019: D0 02	BNE $1F01D

1F01B: 86 0F	STX $0F

1F01D: E0 00	CPX #$00
1F01F: D0 42	BNE $1F063

1F021: A9 01	LDA #$01	; A = 01
1F023: 20 ACFF	JSR $FFAC	; Bank Switch

1F026: 20 3EA1	JSR $A13E

1F029: AD 5003	LDA $0350	; Enemy 0 Code
1F02C: C9 36	CMP #$36	; 36 = Hungry Goriya (Food item needed)
1F02E: F0 08	BEQ $1F038

1F030: C9 4B	CMP #$4B
1F032: 90 07	BCC $1F03B

1F034: C9 53	CMP #$53
1F036: B0 03	BCS $1F03B

1F038: 20 466E	JSR $6E46

1F03B: A5 53	LDA $53
1F03D: D0 27	BNE $1F066

1F03F: A5 12	LDA $12		; Game Mode
1F041: C9 09	CMP #$09
1F043: F0 08	BEQ $1F04D

1F045: C9 0B	CMP #$0B
1F047: F0 04	BEQ $1F04D

1F049: C9 0C	CMP #$0C
1F04B: D0 0E	BNE $1F05B

1F04D: A9 05	LDA #$05	; A = 05
1F04F: 20 ACFF	JSR $FFAC	; Bank Switch

1F052: 20 D78E	JSR $8ED7

1F055: A5 12	LDA $12		; Game Mode
1F057: C9 09	CMP #$09
1F059: F0 0B	BEQ $1F066

1F05B: A5 10	LDA $10		; Current Level (0 = Overworld)
1F05D: F0 07	BEQ $1F066

1F05F: A5 53	LDA $53
1F061: D0 03	BNE $1F066

1F063: 20 B86F	JSR $6FB8

1F066: E0 00	CPX #$00
1F068: D0 14	BNE $1F07E

1F06A: A5 10	LDA $10
1F06C: F0 10	BEQ $1F07E

1F06E: A5 12	LDA $12		; Game Mode
1F070: C9 09	CMP #$09
1F072: F0 0A	BEQ $1F07E

1F074: A9 05	LDA #$05	; A = 05
1F076: 20 ACFF	JSR $FFAC	; Bank Switch
1F079: 20 7C91	JSR $917C

1F07C: A2 00	LDX #$00	; X = 00

1F07E: 20 E3F0	JSR $F0E3
1F081: E0 00	CPX #$00
1F083: D0 08	BNE $1F08D

1F085: A9 05	LDA #$05	; A = 05
1F087: 20 ACFF	JSR $FFAC	; Bank Switch
1F08A: 20 7B8F	JSR $8F7B

1F08D: A9 08	LDA #$08	; A = 08
1F08F: A0 F8	LDY #$F8	; Y = F8
1F091: E0 00	CPX #$00
1F093: F0 04	BEQ $1F099

1F095: A9 10	LDA #$10	; A = 10
1F097: A0 F0	LDY #$F0	; Y = F0
1F099: 8D 0E01	STA $010E
1F09C: 8C 0F01	STY $010F
1F09F: A5 0F	LDA $0F
1F0A1: F0 1D	BEQ $1F0C0

1F0A3: 20 ACF0	JSR $F0AC
1F0A6: 20 ACF0	JSR $F0AC
1F0A9: 20 ACF0	JSR $F0AC

1F0AC: A5 0F	LDA $0F
1F0AE: 4A	LSR
1F0AF: B0 1A	BCS $1F0CB

1F0B1: 4A	LSR
1F0B2: B0 21	BCS $1F0D5

1F0B4: 4A	LSR
1F0B5: B0 0A	BCS $1F0C1

1F0B7: 20 E86F	JSR $6FE8

1F0BA: B5 84	LDA $84,X	; Link/Enemy Y Position
1F0BC: E9 00	SBC #$00
1F0BE: 95 84	STA $84,X	; Link/Enemy Y Position

1F0C0: 60	RTS

----

1F0C1: 20 C16F	JSR $6FC1

1F0C4: B5 84	LDA $84,X	; Link/Enemy Y Position
1F0C6: 69 00	ADC #$00
1F0C8: 95 84	STA $84,X	; Link/Enemy Y Position

1F0CA: 60	RTS

----

1F0CB: 20 C16F	JSR $6FC1

1F0CE: B5 70	LDA $70,X	; Link/Enemy X Position
1F0D0: 69 00	ADC #$00
1F0D2: 95 70	STA $70,X	; Link/Enemy X Position

1F0D4: 60	RTS

----

1F0D5: 20 E86F	JSR $6FE8

1F0D8: B5 70	LDA $70,X	; Link/Enemy X Position
1F0DA: E9 00	SBC #$00
1F0DC: 95 70	STA $70,X	; Link/Enemy X Position

1F0DE: 60	RTS

----

1F0DF

--------

1F0EE: A5 0E	LDA $0E
1F0F0: 30 56	BMI $1F148

1F0F2: BD 9403	LDA $0394,X	; Inter-Tile Offset (0-F)
1F0F5: D0 51	BNE $1F148

1F0F7: 85 0E	STA $0E
1F0F9: A5 0F	LDA $0F
1F0FB: D0 19	BNE $1F116

1F0FD: E0 00	CPX #$00
1F0FF: F0 47	BEQ $1F148

1F101: BD BF04	LDA $04BF,X
1F104: 29 10	AND #$10	; keep bits ...x ....
1F106: D0 08	BNE $1F110

1F108: BD F803	LDA $03F8,X
1F10B: 85 0F	STA $0F

1F10D: 4C 29F1	JMP $F129

----

1F110: 20 D0F1	JSR $F1D0
1F113: 4C 98F1	JMP $F198

----

1F116: 20 FAED	JSR $EDFA
1F119: CD 4A03	CMP $034A
1F11C: 90 30	BCC $1F14E

1F11E: E0 00	CPX #$00
1F120: F0 11	BEQ $1F133

1F122: BD BF04	LDA $04BF,X
1F125: 29 10	AND #$10	; keep bits ...x ....
1F127: D0 E7	BNE $1F110

1F129: 20 A0F1	JSR $F1A0

1F12C: 85 0F	STA $0F
1F12E: A5 0E	LDA $0E
1F130: D0 E4	BNE $1F116

1F132: 60	RTS

--------

1F149
1F14E

--------

1F213: 20 3CF2	JSR $F23C
1F216: A9 04	LDA #$04	; A = 04
1F218: 4C ACFF	JMP $FFAC	; Bank Switch

----

1F21B: 20 31F2	JSR $F231
1F21E: A9 01	LDA #$01	; A = 01
1F220: 4C ACFF	JMP $FFAC	; Bank Switch

----

1F223: 20 3CF2	JSR $F23C
1F226: 4C 1EF2	JMP $F21E

----

1F229: 20 31F2	JSR $F231
1F22C: A9 04	LDA #$04	; A = 04
1F22E: 4C ACFF	JMP $FFAC	; Bank Switch

----

1F231: A9 06	LDA #$06	; A = 06
1F233: 8D D003	STA $03D0
1F236: D0 04	BNE $1F23C

1F238: A5 10	LDA $10		; Current Level (0 = Overworld)
1F23A: D0 C0	BNE $1F1FC

1F23C: AD 2205	LDA $0522
1F23F: D0 BB	BNE $1F1FC

1F241: AA	TAX
1F242: A5 12	LDA $12		; Game Mode
1F244: C9 06	CMP #$06
1F246: F0 0D	BEQ $1F255

1F248: C9 05	CMP #$05
1F24A: 90 09	BCC $1F255

1F24C: AD 9403	LDA $0394	; Link's Inter-Tile Offset (0-F)
1F24F: F0 14	BEQ $1F265

1F251: 29 07	AND #$07	; keep bits .... .xxx
1F253: F0 03	BEQ $1F258

1F255: 4C E3F2	JMP $F2E3

--------

1F391
1F3D4

1F519
1F57B

1F855

--------

1FA72: BD E403	LDA $03E4,X
1FA75: 85 0F	STA $0F

1FA77: 60	RTS

----

1FA78: A0 00	LDY #$00	; Y = 00
1FA7A: BD E403	LDA $03E4,X
1FA7D: F0 01	BEQ $1FA80

1FA7F: C8	INY

1FA80: B5 98	LDA $98,X	; Link/Enemy Facing Direction
1FA82: 29 01	AND #$01	; keep bits .... ...x
1FA84: D0 02	BNE $1FA88

1FA86: E6 0F	INC $0F

1FA88: 60	RTS

----

1FA89: 85 00	STA $00
1FA8B: DE D003	DEC $03D0,X
1FA8E: D0 03	BNE $1FA93

1FA90: 20 A0FA	JSR $FAA0

1FA93: B5 70	LDA $70,X	; Link/Enemy X Position
1FA95: 85 00	STA $00
1FA97: B5 84	LDA $84,X	; Link/Enemy Y Position
1FA99: 85 01	STA $01
1FA9B: A9 00	LDA #$00	; A = 00
1FA9D: 85 0F	STA $0F

1FA9F: 60	RTS

----

1FAA0: A5 00	LDA $00
1FAA2: 9D D003	STA $03D0,X
1FAA5: BD E403	LDA $03E4,X
1FAA8: 49 01	EOR #$01	; flip bits .... ...x
1FAAA: 9D E403	STA $03E4,X

1FAAD: 60	RTS

----

1FAAE: A5 AC	LDA $AC
1FAB0: 29 30	AND #$30	; keep bits ..xx ....
1FAB2: C9 10	CMP #$10
1FAB4: D0 08	BNE $1FABE

1FAB6: A5 AC	LDA $AC
1FAB8: 29 0F	AND #$0F	; keep bits .... xxxx
1FABA: D0 11	BNE $1FACD
1FABC: F0 0A	BEQ $1FAC8

1FABE: C9 20	CMP #$20
1FAC0: D0 17	BNE $1FAD9

1FAC2: A5 AC	LDA $AC
1FAC4: 29 0F	AND #$0F	; keep bits .... xxxx
1FAC6: D0 05	BNE $1FACD

1FAC8: E6 AC	INC $AC

1FACA: 4C D3FA	JMP $FAD3

--------

1FAF0: Table for ? (5E bytes)

Some sort of enemy attributes
First byte is Enemy Code 01

00 00 00 00 00 00 05 05 05 05 81 81 81 81 01 01
81 01 01 43 43 81 81 81 81 01 81 81 81 01 81 81
81 81 81 81 C3 C3 89 89 81 81 89 89 89 89 83 81
89 89 C9 C9 81 81 81 A9 A9 41 41 89 89 81 81 81
C1 C1 C1 C1 C1 81 81 81 A1 A1 81 81 81 81 81 81
81 81 E3 E3 E3 E3 E3 E1 E1 E1 E1 E1 81 81

00 = Lynel (BR), Moblin (BR), Goriya (BR)
05 = Octorok (BR, Fast)
81 = Darknut (BR), Tektite (BR)
01 = Leever (BR)
81 = Zola
01 = Vire, Zol
43 = Gel
81 = Pols Voice, Like Like, Digdogger Spawn, Enemy Spawn Smoke
01 = Peahat
81 = Keese (RB, Dark)
01 = Armos Awakening
81 = Falling Rocks Gen., Falling Rock, Ghini (Master, Tomb), Wizzrobe (RB)
C3 = ?,?
89 = Wall Master, Rope
81 = ?, Stalfos
89 = Bubble, Blue Bubble, Red Bubble, Glitchy Thing
83 = Fairy (immobile)
81 = Gibdo
89 = Dodongo (non-boss), Dodongo (boss)
C9 = Gohma (BR)
81 = Group of 10 Rupees, Hungry Goriya, Zelda
A9 = Digdogger (3 Spawns), Digdogger (1 Spawn)
41 = Twin Lanmola (RB)
89 = Manhandla, Aquamentus

[...]

----

1FB4E: Enemy Hit Points Code (26 bytes)

2 entries per byte
4 bits per entry

Final number of Hit Points is Code times 0x10 (Code << 4)

06 43 25 31 12 24 81 14 22 42 00 A9 8F 20 00 3F
F9 FA 46 62 11 2F FF FF 7F F6 2F FF FF 22 46 F1
F2 AA AA FB BF F0

----

1FB74: 48	PHA
1FB75: A9 04	LDA #$04	; A = 04
1FB77: 20 ACFF	JSR $FFAC	; Bank Switch
1FB7A: 68	PLA

1FB7B: BC 9204	LDY $0492,X
1FB7E: 84 0F	STY $0F
1FB80: F0 1B	BEQ $1FB9D

1FB82: BD 4F03	LDA $034F,X	; Enemy Code
1FB85: C9 1E	CMP #$1E
1FB87: F0 0C	BEQ $1FB95

1FB89: C9 22	CMP #$22
1FB8B: F0 08	BEQ $1FB95

1FB8D: C9 53	CMP #$53
1FB8F: B0 04	BCS $1FB95

1FB91: A9 07	LDA #$07	; A = 07
1FB93: 95 28	STA $28,X
1FB95: A9 00	LDA #$00	; A = 00
1FB97: 9D 9204	STA $0492,X

1FB9A: 4C DAFC	JMP $FCDA

--------

1FD07: AE 4003	LDX $0340

1FD0A: A9 05	LDA #$05	; A = 05
1FD0C: 20 ACFF	JSR $FFAC	; Bank Switch

1FD0F: 20 2490	JSR $9024

1FD12: AD 2505	LDA $0525
1FD15: 48	PHA
1FD16: 0A	ASL
1FD17: 0A	ASL
1FD18: 0A	ASL
1FD19: 0A	ASL
1FD1A: 95 70	STA $70,X	; Link/Enemy X Position
1FD1C: 68	PLA
1FD1D: 29 F0	AND #$F0	; keep bits xxxx ....
1FD1F: 38	SEC
1FD20: E9 03	SBC #$03
1FD22: 95 84	STA $84,X	; Link/Enemy Y Position
1FD24: B5 19	LDA $19,X
1FD26: 29 03	AND #$03	; keep bits .... ..xx
1FD28: 18	CLC
1FD29: 69 02	ADC #$02
1FD2B: 85 4B	STA $4B

1FD2D: A9 05	LDA #$05	; A = 05
1FD2F: 20 ACFF	JSR $FFAC	; Bank Switch

1FD32: 20 138A	JSR $8A13
1FD35: B0 C8	BCS $1FCFF

1FD37: A9 00	LDA #$00	; A = 00
1FD39: 9D 0504	STA $0405,X

Determine Enemy Hit Points

1FD3C: A9 04	LDA #$04	; A = 04
1FD3E: 20 ACFF	JSR $FFAC	; Bank Switch

1FD41: AE 4003	LDX $0340	; Current Enemy Index
1FD44: BC 4F03	LDY $034F,X	; Enemy Code
1FD47: C0 1E	CPY #$1E
1FD49: F0 0B	BEQ $1FD56

1FD4B: C0 22	CPY #$22
1FD4D: F0 07	BEQ $1FD56

1FD4F: C0 53	CPY #$53
1FD51: B0 03	BCS $1FD56

1FD53: 8A	TXA
1FD54: 95 28	STA $28,X

1FD56: B9 EFFA	LDA $FAEF,Y
1FD59: 9D BF04	STA $04BF,X
1FD5C: 98	TYA
1FD5D: 85 00	STA $00
1FD5F: 4A	LSR
1FD60: A8	TAY
1FD61: B9 4EFB	LDA $FB4E,Y

1FD64: 20 00B0	JSR $B000

1FD67: 9D 8504	STA $0485,X
1FD6A: A5 00	LDA $00
1FD6C: C9 6A	CMP #$6A
1FD6E: 90 08	BCC $1FD78

1FD70: A9 01	LDA #$01	; A = 01
1FD72: 20 ACFF	JSR $FFAC	; Bank Switch

1FD75: 4C D085	JMP $85D0

--------

1FEA6: A9 20	LDA #$20	; A = 20 (Enemy Killed)
1FEA8: 8D 0206	STA $0602	; Sound Effect
1FEAB: A9 10	LDA #$10	; A = 10
1FEAD: 9D 0504	STA $0405,X

1FEB0: 60	RTS

----

1FEB1: A9 00	LDA #$00	; A = 00

1FEB3: 9D 4F03	STA $034F,X	; Enemy Code
1FEB6: A9 00	LDA #$00	; A = 00

1FEB8: 4C A571	JMP $71A5

----

1FEBB: A0 0C	LDY #$0C	; Y = 0C
1FEBD: 88	DEY
1FEBE: F0 07	BEQ $1FEC7

1FEC0: B9 4F03	LDA $034F,Y
1FEC3: D0 F8	BNE $1FEBD

1FEC5: 84 59	STY $59

1FEC7: C0 00	CPY #$00

1FEC9: 60	RTS

----

1FECA: A9 81	LDA #$81	; A = 81
1FECC: 9D BF04	STA $04BF,X
1FECF: D0 05	BNE $1FED6

1FED1: A9 01	LDA #$01	; A = 01
1FED3: 8D 1A05	STA $051A

1FED6: A9 00	LDA #$00	; A = 00
1FED8: 95 28	STA $28,X
1FEDA: A9 00	LDA #$00	; A = 00
1FEDC: 9D 0504	STA $0405,X

1FEDF: 60	RTS

----

1FEE0: Table for ? (8 bytes)

3F 0C 04	PPU Address 3F0C, transfer 4 bytes
0F 17 37 12
FF		End Byte

----

1FEE8: 12 11 22 21 31 32 33 35 34 36 37 37	Table for ? (C bytes)

----

1FEF4: AC 1A05	LDY $051A
1FEF7: C0 0C	CPY #$0C
1FEF9: B0 2D	BCS $1FF28

1FEFB: A5 15	LDA $15		; Frame Counter
1FEFD: 29 07	AND #$07	; keep bits .... .xxx
1FEFF: C9 04	CMP #$04
1FF01: D0 25	BNE $1FF28

1FF03: EE 1A05	INC $051A
1FF06: C0 0B	CPY #$0B
1FF08: F0 1F	BEQ $1FF29

1FF0A: 98	TYA
1FF0B: 48	PHA
1FF0C: A0 07	LDY #$07	; Y = 07
1FF0E: B9 E0FE	LDA $FEE0,Y
1FF11: 99 0203	STA $0302,Y
1FF14: 88	DEY
1FF15: 10 F7	BPL $1FF0E

1FF17: 68	PLA
1FF18: A8	TAY
1FF19: B9 E8FE	LDA $FEE8,Y
1FF1C: 8D 0803	STA $0308
1FF1F: C0 0A	CPY #$0A
1FF21: D0 05	BNE $1FF28

1FF23: A9 99	LDA #$99	; A = 99
1FF25: 8D 4A03	STA $034A

1FF28: 60	RTS

----

1FF29: A9 60	LDA #$60	; A = 60
1FF2B: 95 70	STA $70,X	; Link/Enemy X Position
1FF2D: A9 90	LDA #$90	; A = 90
1FF2F: 95 84	STA $84,X	; Link/Enemy Y Position

1FF31: 4C 328F	JMP $8F32

----

1FF34: A5 15	LDA $15		; Frame Counter
1FF36: 29 04	AND #$04	; keep bits .... .x..
1FF38: F0 EE	BEQ $1FF28

1FF3A: CE 1A05	DEC $051A
1FF3D: AC 1A05	LDY $051A

1FF40: 4C 0AFF	JMP $FF0A

----

1FF43: Unused Space (D bytes)

----

1FF50: 78	SEI
1FF51: D8	CLD
1FF52: A9 00	LDA #$00	; A = 00
1FF54: 8D 0020	STA $2000
1FF57: A2 FF	LDX #$FF	; X = FF
1FF59: 9A	TXS

1FF5A: AD 0220	LDA $2002
1FF5D: 29 80	AND #$80	; keep bits x... ....
1FF5F: F0 F9	BEQ $1FF5A

1FF61: AD 0220	LDA $2002
1FF64: 29 80	AND #$80	; keep bits x... ....
1FF66: F0 F9	BEQ $1FF61

1FF68: 09 FF	ORA #$FF	; set  bits xxxx xxxx
1FF6A: 8D 0080	STA $8000
1FF6D: 8D 00A0	STA $A000
1FF70: 8D 00C0	STA $C000
1FF73: 8D 00E0	STA $E000

1FF76: A9 0F	LDA #$0F	; A = 0F
1FF78: 20 98FF	JSR $FF98

1FF7B: A9 00	LDA #$00	; A = 00
1FF7D: 8D 00A0	STA $A000
1FF80: 4A	LSR
1FF81: 8D 00A0	STA $A000
1FF84: 4A	LSR
1FF85: 8D 00A0	STA $A000
1FF88: 4A	LSR
1FF89: 8D 00A0	STA $A000
1FF8C: 4A	LSR
1FF8D: 8D 00A0	STA $A000

1FF90: A9 07	LDA #$07	; A = 07
1FF92: 20 ACFF	JSR $FFAC	; Bank Switch

1FF95: 4C 40E4	JMP $E440

----

1FF98: 8D 0080	STA $8000
1FF9B: 4A	LSR
1FF9C: 8D 0080	STA $8000
1FF9F: 4A	LSR
1FFA0: 8D 0080	STA $8000
1FFA3: 4A	LSR
1FFA4: 8D 0080	STA $8000
1FFA7: 4A	LSR
1FFA8: 8D 0080	STA $8000

1FFAB: 60	RTS

----

Bank Switch (Switch to Bank A)

1FFAC: 8D 00E0	STA $E000
1FFAF: 4A	LSR
1FFB0: 8D 00E0	STA $E000
1FFB3: 4A	LSR
1FFB4: 8D 00E0	STA $E000
1FFB7: 4A	LSR
1FFB8: 8D 00E0	STA $E000
1FFBB: 4A	LSR
1FFBC: 8D 00E0	STA $E000

1FFBF: 60	RTS

----

1FFC0: Unused Space (2B bytes)

----

// End of Bank //

--------
