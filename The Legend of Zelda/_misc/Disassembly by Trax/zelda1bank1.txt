
The Legend of Zelda
Bank 1
0x4000 - 0x7FFF

--------

4000: Pointer Table for Text (26 * 2 = 4C bytes)

4C80 -> 404C	IT'S DANGEROUS TO GO ALONE! TAKE THIS.
7780 -> 4077	MASTER USING IT AND YOU CAN HAVE THIS.
A180 -> 40A1	TAKE ANY ONE YOU WANT.
B980 -> 40B9	SECRET IS IN THE TREE AT THE DEAD-END.
E380 -> 40E3	LET'S PLAY MONEY MAKING GAME.
0581 -> 4105	PAY ME FOR THE DOOR REPAIR CHARGE.
2D81 -> 412D	SHOW THIS TO THE OLD WOMAN.
5281 -> 4152	MEET THE OLD MAN AT THE GRAVE.7981 -> 4179	BUY MEDICINE BEFORE YOU GO.
9781 -> 4197	PAY ME AND I'LL TALK.
AE81 -> 41AE	THIS AIN'T ENOUGH TO TALK.
D281 -> 41D2	GO UP,UP, THE MOUNTAIN AHEAD.
F881 -> 41F8	GO NORTH,WEST,SOUTH,WEST TO THE FOREST OF MAZE.
2C82 -> 422C	BOY, YOU'RE RICH!
4182 -> 4241	BUY SOMETHIN' WILL YA!
5882 -> 4258	BOY, THIS IS REALLY EXPENSIVE!7D82 -> 427D	TAKE ANY ONE YOU WANT. (10)
9482 -> 4294	IT'S A SECRET TO EVERYBODY.
B882 -> 42B8	GRUMBLE,GRUMBLE...
CD82 -> 42CD	EASTMOST PENNINSULA IS THE SECRET.
F582 -> 42F5	DODONGO DISLIKES SMOKE.
0D83 -> 430D	DID YOU GET THE SWORD FROM THE OLD MAN ON TOP OF THE WATERFALL?
4D83 -> 434D	WALK INTO THE WATERFALL.
7083 -> 4370	SECRET POWER IS SAID TO BE IN THE ARROW.9C83 -> 439C	DIGDOGGER HATES CERTAIN KIND OF SOUND.
C683 -> 43C6	I BET YOU'D LIKE TO HAVE MORE BOMBS.
F083 -> 43F0	IF YOU GO IN THE DIRECTION OF THE ARROW.
1C84 -> 441C	LEAVE YOUR LIFE OR MONEY.
3F84 -> 443F	THERE ARE SECRETS WHERE FAIRIES DON'T LIVE.
6D84 -> 446D	AIM AT THE EYES OF GOHMA.
9084 -> 4490	SOUTH OF ARROW MARK HIDES A SECRET.
B884 -> 44B8	THERE'S A SECRET IN THE TIP OF THE NOSE.E384 -> 44E3	SPECTACLE ROCK IS AN ENTRANCE TO DEATH. (20)
0E85 -> 450E	10TH ENEMY HAS THE BOMB.
2685 -> 4526	ONES WHO DOES NOT HAVE TRIFORCE CAN'T GO IN.
5385 -> 4553	PATRA HAS THE MAP.
6885 -> 4568	GO TO THE NEXT ROOM.
7E85 -> 457E	EYES OF SKULL HAS A SECRET.

----

404C: __IT'S DANGEROUS TO GO
      ____ALONE! TAKE THIS.

25 25 12 1D 2A 1C 24 0D 0A 17 10 0E 1B 18 1E 1C 24 1D 18 24 10 98
25 25 25 25 0A 15 18 17 0E 29 24 1D 0A 14 0E 24 1D 11 12 1C EC

----

4077: __MASTER USING IT AND
      ___YOU CAN HAVE THIS.

25 25 16 0A 1C 1D 0E 1B 24 1E 1C 12 17 10 24 12 1D 24 0A 17 8D
25 25 25 22 18 1E 24 0C 0A 17 24 11 0A 1F 0E 24 1D 11 12 1C EC

----

40A1: _TAKE ANY ONE YOU WANT.

25 1D 0A 14 0E 24 0A 17 22 24 1B 18 0A 0D 24 22 18 1E 24 20 0A 17 1D EC

----

40B9: _SECRET IS IN THE TREE
      ____AT THE DEAD-END.

25 1C 0E 0C 1B 0E 1D 24 12 1C 24 12 17 24 1D 11 0E 24 1D 1B 0E 8E
25 25 25 25 0A 1D 24 1D 11 0E 24 0D 0E 0A 0D 2F 0E 17 0D EC

----

430D: _DID YOU GET THE SWORD
      _FROM THE OLD MAN ON
      _TOP OF THE WATERFALL?

25 0D 12 0D 24 22 18 1E 24 10 0E 1D 24 1D 11 0E 24 1C 20 18 1B 8D
25 0F 1B 18 16 24 1D 11 0E 24 18 15 0D 24 16 0A 17 24 18 57
25 1D 18 19 24 18 0F 24 1D 11 0E 24 20 0A 1D 0E 1B 0F 0A 15 15 EE

...

457E: _____EYES OF SKULL
      _____HAS A SECRET.

25 25 25 25 25 0E 22 0E 1C 24 18 0F 24 1C 14 1E15 95 25 25 25 25 25 11 0A 1C 24 0A 24 1C 0E 0C1B 0E 1D EC

Byte Format:

..xx xxxx	Letter Code
.x.. ....	Start third line of text (after letter)
x... ....	Start second line of text (after letter)

Text ends when a byte has bits 6-7 set.

Text Table:

00 = 0
01 = 1
02 = 2
03 = 3
04 = 4
05 = 5
06 = 6
07 = 7
08 = 8
09 = 9
0A = A
0B = B
0C = C
0D = D
0E = E
0F = F
10 = G
11 = H
12 = I
13 = J
14 = K
15 = L
16 = M
17 = N
18 = O
19 = P
1A = Q
1B = R
1C = S
1D = T
1E = U
1F = V
20 = W
21 = X
22 = Y
23 = Z
24 =   (space)
25 =   (leading space)
28 = , (comma)
29 = ! (exclamation mark)
2A = ' (apostrophe)
2B = & (ampersand)
2C = . (period)
2D = " (quotes)
2E = ? (question mark)
2F = - (dash)

----

45A2: Table for Text Pointers Offsets and Attributes (15 bytes)

x... ....	Items must be paid
.x.. ....	Items can be taken
..xx xxxx	Text Code

40 -> 00	IT'S DANGEROUS TO GO ALONE! TAKE THIS.
60 -> 20	TAKE ANYONE YOU WANT.
42 -> 02	MASTER USING IT AND YOU CAN HAVE THIS.
42 -> 02	MASTER USING IT AND YOU CAN HAVE THIS.
04 -> 04	TAKE ANY ROAD YOU WANT.
06 -> 06	SECRET IS IN TREE AT THE DEAD-END.
48 -> 08	LET'S PLAY MONEY MAKING GAME.
0A -> 0A	PAY ME FOR THE DOOR REPAIR CHARGE.
4C -> 0C	SHOW THIS TO THE OLD WOMAN.
0E -> 0E	MEET THE OLD MAN AT THE GRAVE.
D0 -> 10	BUY MEDICINE BEFORE YOU GO.
D2 -> 12	PAY ME AND I'LL TALK.
D2 -> 12	PAY ME AND I'LL TALK.
DC -> 1C	BUY SOMETHIN' WILL YA!
DC -> 1C	BUY SOMETHIN' WILL YA!
DE -> 1E	BOY, THIS IS REALLY EXPENSIVE!
DE -> 1E	BOY, THIS IS REALLY EXPENSIVE!
62 -> 22	IT'S A SECRET TO EVERYBODY.
62 -> 22	IT'S A SECRET TO EVERYBODY.
62 -> 22	IT'S A SECRET TO EVERYBODY.
0A -> 0A	PAY ME FOR THE DOOR REPAIR CHARGE.

----

45B6: 0A 28	Table for ? (2 bytes)

0A = 10 decimal
28 = 40 decimal

----

45B8: Table for ? (12 bytes)

00 01 02 01 02 00 02 00 01 00 02 01 02 01 00 01 00 02

----

45CA: 02 05 08 0B 0E 11		Table for ? (6 bytes)

----

45D0: A9 78	LDA #$78	; A = 78
45D2: A0 80	LDY #$80	; Y = 80
45D4: 20 A386	JSR $86A3

45D7: AD 5003	LDA $0350
45DA: C9 72	CMP #$72
45DC: F0 0C	BEQ $45EA

45DE: C9 71	CMP #$71
45E0: F0 08	BEQ $45EA

45E2: C9 7B	CMP #$7B
45E4: B0 04	BCS $45EA

45E6: C9 6E	CMP #$6E
45E8: B0 0F	BCS $45F9

45EA: 20 1473	JSR $7314
45ED: F0 0A	BEQ $45F9

45EF: A9 00	LDA #$00	; A = 00
45F1: 8D 5003	STA $0350

45F4: A9 00	LDA #$00	; A = 00
45F6: 85 AC	STA $AC

45F8: 60	RTS

----

Related to Money Making Game ?

45F9: AD 5003	LDA $0350
45FC: 38	SEC
45FD: E9 6A	SBC #$6A
45FF: A8	TAY
4600: B9 A285	LDA $85A2,Y
4603: 48	PHA
4604: 29 3F	AND #$3F	; keep bits ..xx xxxx (Text ID)
4606: 8D 1504	STA $0415
4609: 68	PLA
460A: 29 C0	AND #$C0	; keep bits xx.. .... (Attributes)
460C: 85 03	STA $03
460E: A9 FD	LDA #$FD	; A = FD

4610: 18	CLC
4611: 69 03	ADC #$03
4613: 88	DEY
4614: 10 FA	BPL $4610

4616: A8	TAY
4617: A2 00	LDX #$00	; X = 00

4619: B9 7E6A	LDA $6A7E,Y
461C: 9D 2204	STA $0422,X
461F: 29 C0	AND #$C0	; keep bits xx.. ....
4621: 95 00	STA $00,X
4623: B9 BA6A	LDA $6ABA,Y
4626: 9D 3004	STA $0430,X
4629: C8	INY
462A: E8	INX
462B: E0 03	CPX #$03
462D: D0 EA	BNE $4619

462F: A5 03	LDA $03
4631: 0A	ASL
4632: 2A	ROL
4633: 2A	ROL
4634: 05 00	ORA $00
4636: 85 00	STA $00
4638: A5 02	LDA $02
463A: 4A	LSR
463B: 4A	LSR
463C: 4A	LSR
463D: 4A	LSR
463E: 05 00	ORA $00
4640: 85 00	STA $00
4642: A5 01	LDA $01
4644: 4A	LSR
4645: 4A	LSR
4646: 05 00	ORA $00
4648: 8D 1304	STA $0413
464B: 29 20	AND #$20	; keep bits ..x. ....
464D: F0 48	BEQ $4697

464F: A9 FF	LDA #$FF	; A = FF
4651: A0 06	LDY #$06	; Y = 06

4653: C5 19	CMP $19
4655: 90 06	BCC $465D

4657: 38	SEC
4658: E9 2B	SBC #$2B
465A: 88	DEY
465B: D0 F6	BNE $4653

465D: BE CA85	LDX $85CA,Y
4660: A0 02	LDY #$02	; Y = 02

4662: BD B885	LDA $85B8,X
4665: 99 6C04	STA $046C,Y
4668: CA	DEX
4669: 88	DEY
466A: 10 F6	BPL $4662

466C: A5 1A	LDA $1A
466E: 29 01	AND #$01	; keep bits .... ...x
4670: A8	TAY
4671: B9 B685	LDA $85B6,Y
4674: 8D 6F04	STA $046F
4677: A9 0A	LDA #$0A	; A = 0A
4679: 8D 7004	STA $0470
467C: A0 14	LDY #$14	; Y = 14
467E: A5 1A	LDA $1A
4680: 29 02	AND #$02	; keep bits ..x. ....
4682: F0 02	BEQ $4686

4684: A0 32	LDY #$32	; Y = 32

4686: 8C 7104	STY $0471
4689: A2 02	LDX #$02	; X = 02

468B: BC 6C04	LDY $046C,X
468E: B9 6F04	LDA $046F,Y
4691: 9D 4804	STA $0448,X
4694: CA	DEX
4695: 10 F4	BPL $468B

4697: A9 00	LDA #$00	; A = 00
4699: 8D 1604	STA $0416
469C: AD 1488	LDA $8814	; A4
469F: 8D 5F04	STA $045F

46A2: 60	RTS

----

46A3: 95 70	STA $70,X	; Link/Enemy X Position
46A5: 94 84	STY $84,X	; Link/Enemy Y Position
46A7: A9 00	LDA #$00	; A = 00
46A9: 9D 8504	STA $0485,X
46AC: A9 81	LDA #$81	; A = 81
46AE: 9D BF04	STA $04BF,X
46B1: A9 40	LDA #$40	; A = 40
46B3: 85 AC	STA $AC
46B5: A9 40	LDA #$40	; A = 40
46B7: 8D 5103	STA $0351
46BA: 8D 5203	STA $0352
46BD: A9 48	LDA #$48	; A = 48 (X Position of left flame)
46BF: 95 71	STA $71,X	; Enemy X Position
46C1: A9 A8	LDA #$A8	; A = A8 (X Position of right flame)
46C3: 95 72	STA $72,X
46C5: 94 85	STY $85,X	; Enemy Y Position
46C7: 94 86	STY $86,X

46C9: 60	RTS

----

46CA: Table for ? (11 bytes)

22 C8 0D	PPU Address 22C8, transfer D bytes
21 24 24 24 24 24 24 24 24 24 24 24 24
FF	End Byte

----

46DB: A5 AD	LDA $AD
46DD: C9 04	CMP #$04
46DF: D0 06	BNE $46E7

46E1: A5 15	LDA $15		; Frame Counter
46E3: 29 01	AND #$01	; keep bits .... ...x
46E5: D0 38	BNE $471F

46E7: 20 3687	JSR $8736

46EA: AD 5003	LDA $0350
46ED: C9 74	CMP #$74
46EF: D0 2B	BNE $471C

46F1: AD 6606	LDA $0666
46F4: C9 02	CMP #$02
46F6: F0 24	BEQ $471C

46F8: AC 5606	LDY $0656
46FB: C0 0F	CPY #$0F
46FD: D0 06	BNE $4705

46FF: A5 F8	LDA $F8		; Controller 1 buttons pressed
4701: 29 40	AND #$40	; keep bits .x.. .... (B button)
4703: D0 0A	BNE $470F

4705: A5 AC	LDA $AC
4707: C9 40	CMP #$40
4709: D0 03	BNE $470E

470B: 20 F485	JSR $85F4

470E: 60	RTS

----

B Button

470F: A9 04	LDA #$04	; A = 04
4711: 8D 0206	STA $0602
4714: EE 6606	INC $0666
4717: A9 07	LDA #$07	; A = 07
4719: 8D 5606	STA $0656	; Cursor Position for B Item

471C: 20 4987	JSR $8749

471F: A5 AD	LDA $AD

4721: 20 E2E5	JSR $E5E2

----

4724: Pointer table for ? (9 * 2 = 12 bytes)

8B87 -> 478B
1588 -> 4815
7A88 -> 487A	Pay me for the door repair charge
F789 -> 49F7
3389 -> 4933
4189 -> 4941
F789 -> 49F7
1588 -> 4815F689 -> 49F6

----

4736: 20 93FA	JSR $FA93

4739: AC 5003	LDY $0350
473C: C0 7B	CPY #$7B	; 7B = Moblin in a Cave ?
473E: B0 03	BCS $4743

4740: 4C DB77	JMP $77DB

----

4743: 4C DF77	JMP $77DF

----

4746: 58 78 98		Table for ? (3 bytes)

----

4749: AD 1304	LDA $0413
474C: 29 04	AND #$04	; keep bits .... .x..
474E: F0 24	BEQ $4774

4750: A9 02	LDA #$02	; A = 02
4752: 8D 2104	STA $0421

4755: AE 2104	LDX $0421
4758: BD 4687	LDA $8746,X
475B: 85 83	STA $83		; Link Y Position
475D: A9 98	LDA #$98	; A = 98
475F: 85 97	STA $97		; Link Facing Direction
4761: BD 2204	LDA $0422,X
4764: 29 3F	AND #$3F	; keep bits ..xx xxxx
4766: C9 3F	CMP #$3F
4768: F0 05	BEQ $476F

476A: A2 13	LDX #$13	; X = 13
476C: 20 0EE7	JSR $E70E

476F: CE 2104	DEC $0421
4772: 10 E1	BPL $4755

4774: AD 1304	LDA $0413
4777: 29 08	AND #$08	; keep bits .... x...
4779: F0 0F	BEQ $478A

477B: A9 30	LDA #$30	; A = 30
477D: 85 83	STA $83		; Link Y Position
477F: A9 AB	LDA #$AB	; A = AB
4781: 85 97	STA $97		; Link Facing Direction
4783: A9 18	LDA #$18	; A = 18
4785: A2 13	LDX #$13	; X = 13

4787: 20 0EE7	JSR $E70E

478A: 60	RTS

----

478B: AD 1304	LDA $0413
478E: 29 08	AND #$08	; keep bits .... x...
4790: F0 62	BEQ $47F4

4792: 20 0188	JSR $8801

4795: A9 21	LDA #$21	; A = 21
4797: 8D 0503	STA $0305
479A: A2 00	LDX #$00	; X = 00
479C: 8E 2E04	STX $042E
479F: 8E 2F04	STX $042F

47A2: BD 3004	LDA $0430,X
47A5: D0 0B	BNE $47B2

47A7: A2 24	LDX #$24	; X = 24
47A9: 86 01	STX $01
47AB: 86 02	STX $02
47AD: 86 03	STX $03

47AF: 4C BF87	JMP $87BF

----

47B2: 20 556E	JSR $6E55

47B5: A2 24	LDX #$24	; X = 24
47B7: AD 1304	LDA $0413
47BA: 0A	ASL
47BB: 90 02	BCC $47BF

47BD: A2 62	LDX #$62	; X = 62

47BF: 86 04	STX $04
47C1: AC 2F04	LDY $042F
47C4: A5 02	LDA $02

47C6: 20 F787	JSR $87F7

47C9: 99 0803	STA $0308,Y
47CC: A5 01	LDA $01

47CE: 20 F787	JSR $87F7

47D1: 99 0703	STA $0307,Y
47D4: A5 03	LDA $03
47D6: 99 0903	STA $0309,Y
47D9: AD 2F04	LDA $042F
47DC: 18	CLC
47DD: 69 04	ADC #$04
47DF: 8D 2F04	STA $042F
47E2: EE 2E04	INC $042E
47E5: AE 2E04	LDX $042E
47E8: E0 03	CPX #$03
47EA: D0 B6	BNE $47A2

47EC: A9 0A	LDA #$0A	; A = 0A
47EE: 85 29	STA $29
47F0: D0 02	BNE $47F4

47F2: 85 14	STA $14		; PPU Loading Index

47F4: E6 AD	INC $AD

47F6: 60	RTS

----

47F7: C9 24	CMP #$24
47F9: D0 05	BNE $4800

47FB: AA	TAX
47FC: A5 04	LDA $04
47FE: 86 04	STX $04

4800: 60	RTS

----

4801: A0 10	LDY #$10	; Y = 10

4803: B9 CA86	LDA $86CA,Y
4806: 99 0203	STA $0302,Y
4809: 88	DEY
480A: 10 F7	BPL $4803

480C: 60	RTS

----

480D: Table for ? (5 bytes)

21 A4 01	PPU Address 21A4, transfer 1 byte
24
FF	End Byte

----

4812: C4 E4 A4		Table for ? (3 bytes)

----

4815: 20 1BF2	JSR $F21B

4818: A5 29	LDA $29		; Delay between typed letters
481A: D0 5D	BNE $4879

481C: A9 06	LDA #$06	; A = 06
481E: 85 29	STA $29		; Delay between typed letters
4820: A0 04	LDY #$04	; Y = 04

4822: B9 0D88	LDA $880D,Y
4825: 99 0203	STA $0302,Y
4828: 88	DEY
4829: 10 F7	BPL $4822

482B: AD 5F04	LDA $045F
482E: 8D 0303	STA $0303
4831: EE 5F04	INC $045F
4834: AC 1504	LDY $0415
4837: B9 0080	LDA $8000,Y
483A: 85 00	STA $00
483C: C8	INY
483D: B9 0080	LDA $8000,Y
4840: 85 01	STA $01
4842: AC 1604	LDY $0416
4845: EE 1604	INC $0416
4848: B1 00	LDA ($00),Y
484A: 29 3F	AND #$3F	; keep bits ..xx xxxx
484C: C9 25	CMP #$25	; 25 = Leading Space (not typed)
484E: F0 DB	BEQ $482B

4850: 8D 0503	STA $0305
4853: A9 10	LDA #$10	; A = 10
4855: 8D 0406	STA $0604
4858: B1 00	LDA ($00),Y
485A: 29 C0	AND #$C0	; keep bits xx.. ....
485C: F0 1B	BEQ $4879

485E: A0 02	LDY #$02	; Y = 02
4860: C9 C0	CMP #$C0
4862: F0 06	BEQ $486A

4864: 88	DEY
4865: C9 40	CMP #$40
4867: F0 01	BEQ $486A

4869: 88	DEY

486A: B9 1288	LDA $8812,Y
486D: 8D 5F04	STA $045F
4870: C0 02	CPY #$02
4872: D0 05	BNE $4879

4874: E6 AD	INC $AD

4876: 20 F485	JSR $85F4

4879: 60	RTS

----

Pay me for the door repair charge

487A: AD 1304	LDA $0413
487D: 4A	LSR
487E: B0 18	BCS $4898

4880: A9 08	LDA #$08	; A = 08
4882: 85 AD	STA $AD
4884: AD 5003	LDA $0350
4887: C9 71	CMP #$71
4889: D0 0C	BNE $4897

488B: AD 7E06	LDA $067E	; Number of Rupees to subtract
488E: 18	CLC
488F: 69 14	ADC #$14	; Cost of door repair (20 decimal)
4891: 8D 7E06	STA $067E	; Number of Rupees to subtract

4894: 20 0C73	JSR $730C

4897: 60	RTS

----

4898: AD 7E06	LDA $067E	; Number of Rupees to subtract
489B: D0 FA	BNE $4897

489D: A2 02	LDX #$02	; X = 02

489F: BD 2204	LDA $0422,X
48A2: 29 3F	AND #$3F	; keep bits ..xx xxxx
48A4: C9 3F	CMP #$3F
48A6: F0 13	BEQ $48BB

48A8: A5 70	LDA $70		; Link X Position
48AA: DD 4687	CMP $8746,X
48AD: D0 0C	BNE $48BB

48AF: A5 84	LDA $84		; Link Y Position
48B1: 38	SEC
48B2: E9 98	SBC #$98

48B4: 20 1F70	JSR $701F

48B7: C9 06	CMP #$06
48B9: 90 04	BCC $48BF

48BB: CA	DEX
48BC: 10 E1	BPL $489F

48BE: 60	RTS

----

48BF: 8E 3804	STX $0438
48C2: AD 1304	LDA $0413	; Status for Enemy 1
48C5: 29 30	AND #$30	; keep bits ..xx ....
48C7: F0 17	BEQ $48E0

48C9: 29 10	AND #$10	; keep bits ...x ....
48CB: F0 0E	BEQ $48DB

48CD: AD 6D06	LDA $066D	; Number of Rupees
48D0: DD 3004	CMP $0430,X
48D3: 90 5D	BCC $4932

48D5: BD 3004	LDA $0430,X

48D8: 20 DE89	JSR $89DE

48DB: A9 05	LDA #$05	; A = 05
48DD: 85 AD	STA $AD

48DF: 60	RTS

----

48E0: AD 1304	LDA $0413	; Status for Enemy 1
48E3: 29 02	AND #$02	; keep bits .... ..x.
48E5: F0 0E	BEQ $48F5

48E7: AD 6D06	LDA $066D	; Number of Rupees
48EA: DD 3004	CMP $0430,X
48ED: 90 43	BCC $4932

48EF: BD 3004	LDA $0430,X

48F2: 20 DE89	JSR $89DE

48F5: AD 1304	LDA $0413	; Status for Enemy 1
48F8: 29 40	AND #$40	; keep bits .x.. ....
48FA: F0 13	BEQ $490F

48FC: A0 40	LDY #$40	; Y = 40
48FE: AD 5003	LDA $0350	; Enemy Code for Enemy 1
4901: C9 6C	CMP #$6C
4903: F0 02	BEQ $4907

4905: A0 B0	LDY #$B0	; Y = B0

4907: CC 6F06	CPY $066F
490A: F0 03	BEQ $490F
490C: 90 01	BCC $490F

490E: 60	RTS

----

490F: 20 0C73	JSR $730C

4912: BD 2204	LDA $0422,X
4915: 29 3F	AND #$3F	; keep bits ..xx xxxx
4917: 48	PHA
4918: A9 FF	LDA #$FF	; A = FF
491A: 9D 2204	STA $0422,X
491D: 68	PLA

491E: 20 7073	JSR $7370

4921: A9 1E	LDA #$1E	; A = 1E
4923: 20 F287	JSR $87F2

4926: A9 40	LDA #$40	; A = 40
4928: 85 29	STA $29

492A: AD 1304	LDA $0413	; Status for Enemy 1
492D: 29 F7	AND #$F7	; keep bits xxxx .xxx
492F: 8D 1304	STA $0413

4932: 60	RTS

----

4933: A5 29	LDA $29
4935: D0 03	BNE $493A

4937: 8D 5003	STA $0350	; Enemy Code for Enemy 1

493A: 60	RTS

----

493B: Table for Text Pointers Offsets (6 bytes)

The resulting text after paying the old woman one of the 3 possible amounts

14	THIS AIN'T ENOUGH TO TALK.
14	THIS AIN'T ENOUGH TO TALK.
16	GO UP, UP, THE MOUNTAIN AHEAD.

14	THIS AIN'T ENOUGH TO TALK.
18	GO NORTH, WEST, SOUTH, WEST TO THE FOREST OF MAZE.
1A	BOY, YOU'RE RICH!

----

4941: AD 1304	LDA $0413	; Status for Enemy 1
4944: 29 10	AND #$10	; keep bits ...x ....
4946: F0 29	BEQ $4971

4948: A9 00	LDA #$00	; A = 00
494A: AC 5003	LDY $0350	; Enemy Code for Enemy 1
494D: C0 75	CPY #$75
494F: F0 02	BEQ $4953

4951: A9 03	LDA #$03	; A = 03
4953: 18	CLC
4954: 6D 3804	ADC $0438
4957: A8	TAY
4958: B9 3B89	LDA $893B,Y
495B: 8D 1504	STA $0415
495E: AD 1488	LDA $8814
4961: 8D 5F04	STA $045F
4964: A9 00	LDA #$00	; A = 00
4966: 8D 1604	STA $0416

4969: 20 2A89	JSR $892A

496C: A9 1E	LDA #$1E	; A = 1E (30 decimal)

496E: 4C F287	JMP $87F2

----

4971: AD 5003	LDA $0350	; Enemy Code for Enemy 1
4974: C9 7B	CMP #$7B
4976: 90 1A	BCC $4992

4978: 20 0188	JSR $8801

497B: A9 24	LDA #$24	; A = 24
497D: 20 9787	JSR $8797

4980: A9 08	LDA #$08	; A = 08
4982: 8D 0406	STA $0604

4985: 20 0C73	JSR $730C

4988: A9 08	LDA #$08	; A = 08
498A: 85 AD	STA $AD
498C: AD 3104	LDA $0431

498F: 4C D689	JMP $89D6

----

4992: AD 6D06	LDA $066D	; Number of Rupees
4995: C9 0A	CMP #$0A
4997: 90 A1	BCC $493A

4999: A9 08	LDA #$08	; A = 08
499B: 8D 0406	STA $0604
499E: A0 02	LDY #$02	; Y = 02
49A0: B9 4804	LDA $0448,Y
49A3: 99 3004	STA $0430,Y
49A6: 88	DEY
49A7: 10 F7	BPL $49A0

49A9: 20 9287	JSR $8792

49AC: A9 08	LDA #$08	; A = 08
49AE: 85 AD	STA $AD

49B0: A0 01	LDY #$01	; Y = 01
49B2: AD 4804	LDA $0448
49B5: 20 E689	JSR $89E6

49B8: A0 05	LDY #$05	; Y = 05
49BA: AD 4904	LDA $0449
49BD: 20 E689	JSR $89E6

49C0: A0 09	LDY #$09	; Y = 09
49C2: AD 4A04	LDA $044A
49C5: 20 E689	JSR $89E6

49C8: AE 3804	LDX $0438
49CB: BD 4804	LDA $0448,X
49CE: C9 14	CMP #$14
49D0: F0 04	BEQ $49D6

49D2: C9 32	CMP #$32
49D4: D0 08	BNE $49DE

49D6: 18	CLC
49D7: 6D 7D06	ADC $067D	; Number of Rupees to add
49DA: 8D 7D06	STA $067D

49DD: 60	RTS

----

49DE: 18	CLC
49DF: 6D 7E06	ADC $067E	; Number of Rupees to subtract
49E2: 8D 7E06	STA $067E

49E5: 60	RTS

----

49E6: A2 64	LDX #$64	; X = 64
49E8: C9 14	CMP #$14
49EA: F0 06	BEQ $49F2

49EC: C9 32	CMP #$32
49EE: F0 02	BEQ $49F2

49F0: A2 62	LDX #$62	; X = 62

49F2: 8A	TXA
49F3: 99 0603	STA $0306,Y

49F6: 60	RTS

----

49F7: A9 2A	LDA #$2A	; A = 2A
49F9: 4C F287	JMP $87F2

----

49FC: AD 1488	LDA $8814
49FF: 8D 5F04	STA $045F
4A02: A5 10	LDA $10		; Current Level (0 = Overworld)

4A04: 20 E2E5	JSR $E5E2

----

4A07: Pointer table for Old Man Message Offsets (A * 2 = 14 bytes)

AD8C -> 4CAD	Overworld (RTS)
238A -> 4A23	Dungeon 1
238A -> 4A23	Dungeon 2
698A -> 4A69	Dungeon 3
698A -> 4A69	Dungeon 4
238A -> 4A23	Dungeon 5
698A -> 4A69	Dungeon 6
238A -> 4A23	Dungeon 7698A -> 4A69	Dungeon 8
848A -> 4A84	Dungeon 9

----

4A1B: Table for Old Man Text Offsets - Dungeons 1-2-5-7 (8 bytes)

28 26 2E 30 32 3E 3E 34

----

4A23: A9 78	LDA #$78	; A = 78
4A25: A0 80	LDY #$80	; Y = 80 (Y Position of flames in caves)
4A27: 20 A386	JSR $86A3

4A2A: BD 4F03	LDA $034F,X	; Enemy Code
4A2D: 38	SEC
4A2E: E9 4B	SBC #$4B
4A30: A8	TAY
4A31: B9 1B8A	LDA $8A1B,Y
4A34: 8D 1504	STA $0415
4A37: AD 5003	LDA $0350
4A3A: C9 4F	CMP #$4F
4A3C: D0 20	BNE $4A5E
4A3E: F0 12	BEQ $4A52

4A40: A9 78	LDA #$78	; A = 78
4A42: A0 80	LDY #$80	; Y = 80
4A44: 20 A386	JSR $86A3

4A47: A9 36	LDA #$36	; A = 36
4A49: 8D 1504	STA $0415
4A4C: AD 1488	LDA $8814
4A4F: 8D 5F04	STA $045F

4A52: 20 1473	JSR $7314
4A55: F0 07	BEQ $4A5E

4A57: A9 00	LDA #$00	; A = 00
4A59: 85 AC	STA $AC

4A5B: 4C B1FE	JMP $FEB1

----

4A5E: 4C D38A	JMP $8AD3

----

4A61: Table for Old Man Text Offsets - Dungeons 3-4-6-8 (8 bytes)

2A 38 3A 2C 40 42 42 3C

----

4A69: A9 78	LDA #$78	; A = 78
4A6B: A0 80	LDY #$80	; Y = 80
4A6D: 20 A386	JSR $86A3

4A70: BD 4F03	LDA $034F,X	; Enemy Code
4A73: 38	SEC
4A74: E9 4B	SBC #$4B
4A76: A8	TAY
4A77: B9 618A	LDA $8A61,Y
4A7A: 8D 1504	STA $0415

4A7D: 4C D38A	JMP $8AD3

----

4A80: Old Man Text Offsets for Dungeon 9 (4 bytes)

44 46 48 4A

----

4A84: A9 78	LDA #$78	; A = 78
4A86: A0 80	LDY #$80	; Y = 80
4A88: 20 A386	JSR $86A3

4A8B: 20 D38A	JSR $8AD3

4A8E: BD 4F03	LDA $034F,X	; Enemy Code
4A91: 48	PHA
4A92: 38	SEC
4A93: E9 4B	SBC #$4B
4A95: A8	TAY
4A96: B9 808A	LDA $8A80,Y
4A99: 8D 1504	STA $0415
4A9C: 68	PLA
4A9D: C9 4B	CMP #$4B
4A9F: D0 12	BNE $4AB3

4AA1: AD 7106	LDA $0671
4AA4: C9 FF	CMP #$FF
4AA6: D0 0B	BNE $4AB3

4AA8: A9 01	LDA #$01	; A = 01
4AAA: 8D CE04	STA $04CE
4AAD: 4A	LSR
4AAE: 85 AC	STA $AC

4AB0: 20 B1FE	JSR $FEB1

4AB3: 60	RTS

----

4AB4: A9 78	LDA #$78	; A = 78
4AB6: A0 80	LDY #$80	; Y = 80
4AB8: 20 A386	JSR $86A3

4ABB: A9 24	LDA #$24	; A = 24
4ABD: 8D 1504	STA $0415
4AC0: AD 1488	LDA $8814
4AC3: 8D 5F04	STA $045F

4AC6: 20 1473	JSR $7314
4AC9: F0 08	BEQ $4AD3

4ACB: A9 00	LDA #$00	; A = 00
4ACD: 85 AC	STA $AC
4ACF: 8D 5003	STA $0350

4AD2: 60	RTS

----

4AD3: A9 08	LDA #$08	; A = 08
4AD5: 8D 0206	STA $0602

4AD8: 60	RTS

----

4AD9: A5 10	LDA $10
4ADB: C9 03	CMP #$03
4ADD: 90 08	BCC $4AE7

4ADF: C9 05	CMP #$05
4AE1: F0 04	BEQ $4AE7

4AE3: C9 07	CMP #$07
4AE5: D0 03	BNE $4AEA

4AE7: 4C 118B	JMP $8B11

----

4AEA: 20 9D8B	JSR $8B9D

4AED: A5 AD	LDA $AD

4AEF: 20 E2E5	JSR $E5E2

----

4AF2: Pointer table for ? (3 * 2 = 6 bytes)

F88A -> 4AF8
1588 -> 4815
FF8A -> 4AFF	RTS

----

4AF8: A9 00	LDA #$00	; A = 00
4AFA: 8D 1604	STA $0416
4AFD: E6 AD	INC $AD

4AFF: 60	RTS

----

4B00: 20 D079	JSR $79D0

4B03: AD 0604	LDA $0406
4B06: F0 08	BEQ $4B10

4B08: 8D CC04	STA $04CC
4B0B: A9 00	LDA #$00	; A = 00
4B0D: 8D 0604	STA $0406

4B10: 60	RTS

----

4B11: A5 AD	LDA $AD
4B13: C9 04	CMP #$04
4B15: D0 06	BNE $4B1D

4B17: A5 15	LDA $15		; Frame Counter
4B19: 29 01	AND #$01	; keep bits .... ...x
4B1B: D0 19	BNE $4B36

4B1D: 20 9D8B	JSR $8B9D

4B20: AD 5003	LDA $0350
4B23: C9 4F	CMP #$4F
4B25: D0 0F	BNE $4B36

4B27: A9 78	LDA #$78	; A = 78
4B29: 85 83	STA $83
4B2B: A9 98	LDA #$98	; A = 98
4B2D: 85 97	STA $97

4B2F: A9 18	LDA #$18	; A = 18
4B31: A2 13	LDX #$13	; X = 13
4B33: 20 0EE7	JSR $E70E

4B36: A5 AD	LDA $AD

4B38: 20 E2E5	JSR $E5E2

----

4B3B: Pointer table for ? (2 * 5 = A bytes)

458B -> 4B45
1588 -> 4815
578B -> 4B57
F789 -> 49F7
958B -> 4B95

----

4B45: AD 5003	LDA $0350
4B48: C9 4F	CMP #$4F
4B4A: D0 04	BNE $4B50

4B4C: A9 6C	LDA #$6C	; A = 6C
4B4E: 85 14	STA $14
4B50: A9 0A	LDA #$0A	; A = 0A
4B52: 85 29	STA $29
4B54: E6 AD	INC $AD

4B56: 60	RTS

----

4B57: AD 5003	LDA $0350
4B5A: C9 4F	CMP #$4F
4B5C: D0 12	BNE $4B70

4B5E: A5 70	LDA $70		; Link X Position
4B60: C9 78	CMP #$78
4B62: D0 0C	BNE $4B70

4B64: A5 84	LDA $84		; Link Y Position
4B66: 38	SEC
4B67: E9 98	SBC #$98

4B69: 20 1F70	JSR $701F

4B6C: C9 06	CMP #$06
4B6E: 90 01	BCC $4B71

4B70: 60	RTS

----

Bomb Upgrade - Carry 4 more Bombs for 100 Rupees

4B71: A9 64	LDA #$64	; A = 64 (cost for more Bombs, 100 decimal)
4B73: CD 6D06	CMP $066D	; Number of Rupees
4B76: F0 02	BEQ $4B7A
4B78: B0 F6	BCS $4B70

4B7A: 18	CLC
4B7B: 6D 7E06	ADC $067E	; Number of Rupees to subtract
4B7E: 8D 7E06	STA $067E
4B81: A9 08	LDA #$08	; A = 08
4B83: 8D 0406	STA $0604
4B86: AD 7C06	LDA $067C	; Maximum number of Bombs
4B89: 18	CLC
4B8A: 69 04	ADC #$04	; Increase maximum number of Bombs by 4
4B8C: 8D 7C06	STA $067C	; Maximum number of Bombs
4B8F: 8D 5806	STA $0658	; Number of Bombs

4B92: 4C 8D8C	JMP $8C8D

----

4B95: A5 29	LDA $29
4B97: D0 03	BNE $4B9C

4B99: 8D 5003	STA $0350

4B9C: 60	RTS

----

4B9D: 20 008B	JSR $8B00
4BA0: 20 93FA	JSR $FA93
4BA3: 4C DB77	JMP $77DB

----

4BA6: A5 AD	LDA $AD
4BA8: C9 04	CMP #$04
4BAA: D0 06	BNE $4BB2

4BAC: A5 15	LDA $15		; Frame Counter
4BAE: 29 01	AND #$01	; keep bits .... ...x
4BB0: D0 06	BNE $4BB8

4BB2: 20 9D8B	JSR $8B9D
4BB5: 20 CB8B	JSR $8BCB

4BB8: A5 AD	LDA $AD

4BBA: 20 E2E5	JSR $E5E2

----

4BBD: Pointer table for ? (5 * 2 = A bytes)

E68B -> 4BE6
1588 -> 4815
EF8B -> 4BEF
F789 -> 49F7
958B -> 4B95

----

4BC7: 58 98	Table for ? (2 bytes)
4BC9: 1A 18	Table for ? (2 bytes)

----

4BCB: A2 01	LDX #$01	; X = 01

4BCD: 8A	TXA
4BCE: 48	PHA
4BCF: BD C78B	LDA $8BC7,X
4BD2: 85 83	STA $83		; Item X Position
4BD4: A9 98	LDA #$98	; A = 98
4BD6: 85 97	STA $97		; Item Y Position
4BD8: BD C98B	LDA $8BC9,X
4BDB: A2 13	LDX #$13	; X = 13

4BDD: 20 0EE7	JSR $E70E

4BE0: 68	PLA
4BE1: AA	TAX
4BE2: CA	DEX
4BE3: 10 E8	BPL $4BCD

4BE5: 60	RTS

----

4BE6: A9 0A	LDA #$0A	; A = 0A
4BE8: 85 29	STA $29
4BEA: A9 76	LDA #$76	; A = 76

4BEC: 4C F287	JMP $87F2

----

4BEF: A2 01	LDX #$01	; X = 01

4BF1: A5 70	LDA $70		; Link X Position
4BF3: DD C78B	CMP $8BC7,X
4BF6: D0 0C	BNE $4C04

4BF8: A5 84	LDA $84		; Link Y Position
4BFA: 38	SEC
4BFB: E9 98	SBC #$98

4BFD: 20 1F70	JSR $701F
4C00: C9 06	CMP #$06
4C02: 90 04	BCC $4C08

4C04: CA	DEX
4C05: 10 EA	BPL $4BF1

4C07: 60	RTS

----

Lose your life or money - Money option

4C08: E0 00	CPX #$00
4C0A: F0 13	BEQ $4C1F

4C0C: A9 32	LDA #$32	; A = 32 (decimal 50)
4C0E: CD 6D06	CMP $066D	; Number of Rupees
4C11: F0 02	BEQ $4C15
4C13: B0 F2	BCS $4C07

4C15: 18	CLC
4C16: 6D 7E06	ADC $067E	; Number of Rupees to subtract
4C19: 8D 7E06	STA $067E

4C1C: 4C 4D8C	JMP $8C4D

----

Lose your life or money - Life option

4C1F: AD 6F06	LDA $066F	; Heart Containers
4C22: 29 F0	AND #$F0	; keep bits xxxx ....
4C24: C9 30	CMP #$30	; check if Number of Heart Containers >= 4
4C26: B0 0B	BCS $4C33

If Number of Heart Containers < 4, you don't lose a container

4C28: 8D 6F06	STA $066F	; Heart Containers
4C2B: A9 00	LDA #$00	; A = 00
4C2D: 8D 7006	STA $0670	; Heart following the last filled heart

4C30: 4C 4D8C	JMP $8C4D

----

If Number of Heart Containers > 3
You lose a Heart Container, and a life heart

4C33: AD 6F06	LDA $066F	; Heart Containers
4C36: 48	PHA
4C37: 29 F0	AND #$F0	; keep bits xxxx ....
4C39: 38	SEC
4C3A: E9 10	SBC #$10
4C3C: 85 00	STA $00
4C3E: 68	PLA
4C3F: 29 0F	AND #$0F	; keep bits .... xxxx
4C41: 38	SEC
4C42: E9 01	SBC #$01
4C44: 10 02	BPL $4C48

4C46: A9 00	LDA #$00	; A = 00

4C48: 05 00	ORA $00
4C4A: 8D 6F06	STA $066F	; Heart Containers

4C4D: A9 08	LDA #$08	; A = 08 (sound for Small Heart Taken)

01 = Shield Block
02 = Enemy Hit
04 = Energy Wave
08 = Small Heart taken
10 = Text Typing
20 = Bomb Planted
40 = Nothing
80 = Music Stops

4C4F: 8D 0406	STA $0604	; Sound Effect
4C52: A9 01	LDA #$01	; A = 01
4C54: 8D CE04	STA $04CE

4C57: 4C 8D8C	JMP $8C8D

----

4C5A: A5 AD	LDA $AD
4C5C: C9 03	CMP #$03
4C5E: D0 06	BNE $4C66

4C60: A5 15	LDA $15		; Frame Counter
4C62: 29 01	AND #$01	; keep bits .... ...x
4C64: D0 09	BNE $4C6F

4C66: 20 008B	JSR $8B00
4C69: 20 93FA	JSR $FA93
4C6C: 20 DF77	JSR $77DF

4C6F: A5 AD	LDA $AD

4C71: 20 E2E5	JSR $E5E2

----

4C74: Pointer table for ? (4 * 2 = 8 bytes)

1588 -> 4815
7C8C -> 4C7C
F789 -> 49F7
998C -> 4C99

----

4C7C: A0 0F	LDY #$0F	; Y = 0F
4C7E: B9 AC00	LDA $00AC,Y
4C81: 0A	ASL
4C82: 90 29	BCC $4CAD

4C84: A9 40	LDA #$40	; A = 40
4C86: 85 AC	STA $AC
4C88: A9 04	LDA #$04	; A = 04
4C8A: 8D 0206	STA $0602

4C8D: 20 0C73	JSR $730C

4C90: A9 40	LDA #$40	; A = 40
4C92: 85 29	STA $29
4C94: A9 1E	LDA #$1E	; A = 1E

4C96: 4C F287	JMP $87F2

----

4C99: 20 23F2	JSR $F223

4C9C: A5 29	LDA $29
4C9E: D0 0D	BNE $4CAD

4CA0: A0 0F	LDY #$0F	; Y = 0F
4CA2: 99 AC00	STA $00AC,Y
4CA5: 8D 5D06	STA $065D
4CA8: 85 AC	STA $AC
4CAA: 8D 5003	STA $0350

4CAD: 60	RTS

----

4CAE: Unused Space (52 bytes)

----

4D00: A9 00	LDA #$00	; A = 00
4D02: 85 00	STA $00
4D04: A9 A5	LDA #$A5	; A = A5
4D06: 85 01	STA $01
4D08: A9 90	LDA #$90	; A = 90
4D0A: 85 02	STA $02
4D0C: A9 6C	LDA #$6C	; A = 6C
4D0E: 85 03	STA $03
4D10: A0 00	LDY #$00	; Y = 00

4D12: B1 00	LDA ($00),Y
4D14: 91 02	STA ($02),Y
4D16: A5 00	LDA $00
4D18: 18	CLC
4D19: 69 01	ADC #$01
4D1B: 85 00	STA $00
4D1D: A5 01	LDA $01
4D1F: 69 00	ADC #$00
4D21: 85 01	STA $01
4D23: A5 02	LDA $02
4D25: 18	CLC
4D26: 69 01	ADC #$01
4D28: 85 02	STA $02
4D2A: A5 03	LDA $03
4D2C: 69 00	ADC #$00
4D2E: 85 03	STA $03
4D30: C9 7F	CMP #$7F
4D32: D0 DE	BNE $4D12

4D34: A5 02	LDA $02
4D36: C9 00	CMP #$00
4D38: D0 D8	BNE $4D12

4D3A: 60	RTS

----

Tables for Graphics Loading Offsets (C bytes)

4D3B: B4 8D B4 96	CPU Address
4D3F: 09 00 08 20	Bytes to Transfer
4D43: 07 00 17 00	PPU Address

----

4D47: 20 25E6	JSR $E625	; PPU Setup

4D4A: AD 0220	LDA $2002

4D4D: AD 1D05	LDA $051D	; World offset byte for graphics loading
4D50: 0A	ASL
4D51: AA	TAX
4D52: BD 3B8D	LDA $8D3B,X
4D55: 85 00	STA $00
4D57: BD 3F8D	LDA $8D3F,X
4D5A: 85 02	STA $02
4D5C: BD 438D	LDA $8D43,X
4D5F: 8D 0620	STA $2006
4D62: E8	INX
4D63: BD 3B8D	LDA $8D3B,X
4D66: 85 01	STA $01
4D68: BD 3F8D	LDA $8D3F,X
4D6B: 85 03	STA $03
4D6D: BD 438D	LDA $8D43,X

4D70: 20 848D	JSR $8D84

4D73: AD 1D05	LDA $051D	; World offset byte for graphics loading
4D76: C9 02	CMP #$02
4D78: D0 D3	BNE $4D4D

4D7A: A9 A5	LDA #$A5	; A = A5
4D7C: 85 F6	STA $F6
4D7E: A9 00	LDA #$00	; A = 00
4D80: 8D 1D05	STA $051D	; World offset byte for graphics loading

4D83: 60	RTS

----

4D84: 8D 0620	STA $2006
4D87: A0 00	LDY #$00	; Y = 00

4D89: B1 00	LDA ($00),Y
4D8B: 8D 0720	STA $2007
4D8E: A5 00	LDA $00
4D90: 18	CLC
4D91: 69 01	ADC #$01
4D93: 85 00	STA $00
4D95: A5 01	LDA $01
4D97: 69 00	ADC #$00
4D99: 85 01	STA $01
4D9B: A5 03	LDA $03
4D9D: 38	SEC
4D9E: E9 01	SBC #$01
4DA0: 85 03	STA $03
4DA2: A5 02	LDA $02
4DA4: E9 00	SBC #$00
4DA6: 85 02	STA $02
4DA8: A5 02	LDA $02
4DAA: D0 DD	BNE $4D89

4DAC: A5 03	LDA $03
4DAE: D0 D9	BNE $4D89

4DB0: EE 1D05	INC $051D	; World offset byte for graphics loading

4DB3: 60	RTS

----

4DB4: Graphics Data for Sprites (900 bytes)

----

56B4: Graphics Data for Sprites (820 bytes)

----

5ED4: Unused Space (12C bytes)

----

6000: 85 84	STA $84		; Link Y Position

6002: A5 84	LDA $84		; Link Y Position
6004: 95 84	STA $84,X	; Link/Enemy Y Position
6006: A9 00	LDA #$00	; A = 00
6008: 95 70	STA $70,X	; Link/Enemy X Position
600A: A9 2E	LDA #$2E	; A = 2E
600C: 9D 4F03	STA $034F,X	; Enemy Code

600F: 60	RTS

----

6010: 36 3B 73 44 0A 21 41 6C	Table for Whistle Warp Locations (8 bytes)

X Position + 1

36 actually leads to location 37

----

6018: A5 AC	LDA $AC
601A: 29 40	AND #$40	; keep bits .x.. ....
601C: A8	TAY
601D: A9 02	LDA #$02	; A = 02
601F: 18	CLC
6020: 75 70	ADC $70,X
6022: 95 70	STA $70,X
6024: C0 40	CPY #$40
6026: D0 21	BNE $6049

6028: AC 2205	LDY $0522
602B: F0 1C	BEQ $6049

602D: 85 70	STA $70
602F: 88	DEY
6030: F0 43	BEQ $6075

6032: C9 80	CMP #$80
6034: D0 3F	BNE $6075

6036: 0A	ASL
6037: 85 AC	STA $AC
6039: 8D 2205	STA $0522
603C: 9D 4F03	STA $034F,X	; Enemy Code

603F: 8A	TXA
6040: 48	PHA
6041: 20 DE71	JSR $71DE
6044: 68	PLA
6045: AA	TAX

6046: 4C 8AA0	JMP $A08A

----

6049: 20 A77A	JSR $7AA7

604C: A5 06	LDA $06
604E: F0 25	BEQ $6075

6050: A9 01	LDA #$01	; A = 01
6052: 85 98	STA $98		; Link Facing Direction (1 = Facing Right)
6054: 4A	LSR
6055: 85 C0	STA $C0
6057: 85 D3	STA $D3
6059: 85 5A	STA $5A
605B: A9 40	LDA #$40	; A = 40
605D: 85 AC	STA $AC
605F: A9 F8	LDA #$F8	; A = F8
6061: 8D 4802	STA $0248
6064: 8D 4C02	STA $024C
6067: AD 2305	LDA $0523	; Randomizer
606A: 29 07	AND #$07	; keep bits .... .xxx
606C: A8	TAY
606D: B9 10A0	LDA $A010,Y

*** Bridge here to make Whistle Warping less random ***

6070: 85 EA	STA $EA		; Location for Whistle Warp
6072: EE 2205	INC $0522

6075: B5 70	LDA $70,X	; Link/Enemy X Position
6077: C9 F0	CMP #$F0
6079: 90 0F	BCC $608A

607B: 20 8DA0	JSR $A08D

607E: AD 2205	LDA $0522
6081: F0 07	BEQ $608A

6083: 8A	TXA
6084: 48	PHA
6085: 20 82F1	JSR $F182
6088: 68	PLA
6089: AA	TAX

608A: 4C 05A1	JMP $A105

----

608D: A9 00	LDA #$00	; A = 00
608F: 9D 4F03	STA $034F,X	; Enemy Code
6092: 95 C0	STA $C0,X
6094: 95 D3	STA $D3,X
6096: 95 28	STA $28,X
6098: 95 AC	STA $AC,X
609A: 9D F004	STA $04F0,X
609D: A9 FF	LDA #$FF	; A = FF
609F: 9D 9204	STA $0492,X
60A2: A9 01	LDA #$01	; A = 01
60A4: 9D 0504	STA $0405,X

60A7: 60	RTS

----

Related to Whistle

60A8: A5 12	LDA $12
60AA: C9 05	CMP #$05
60AC: D0 56	BNE $6104

60AE: 20 F5A0	JSR $A0F5

60B1: AD 2305	LDA $0523	; Randomizer
60B4: 29 07	AND #$07	; keep bits .... .xxx
60B6: A8	TAY
60B7: B9 BEE6	LDA $E6BE,Y
60BA: 85 00	STA $00

60BC: AD 7106	LDA $0671	; Triforce Pieces
60BF: F0 43	BEQ $6104

60C1: 24 00	BIT $00
60C3: D0 1B	BNE $60E0

60C5: 20 F5A0	JSR $A0F5

60C8: A5 98	LDA $98		; Link Facing Direction
60CA: 29 09	AND #$09	; keep bits .... x..x
60CC: F0 09	BEQ $60D7

60CE: 06 00	ASL $00
60D0: 90 EA	BCC $60BC

60D2: 26 00	ROL $00

60D4: 4C BCA0	JMP $A0BC

----

60D7: 46 00	LSR $00
60D9: 90 E1	BCC $60BC

60DB: 66 00	ROR $00

60DD: 4C BCA0	JMP $A0BC

----

60E0: AD 0805	LDA $0508
60E3: 0D 2205	ORA $0522
60E6: D0 1C	BNE $6104

60E8: 20 BBFE	JSR $FEBB
60EB: F0 17	BEQ $6104

60ED: EE 0805	INC $0508
60F0: 98	TYA
60F1: AA	TAX

60F2: 4C 02A0	JMP $A002

----

60F5: EE 2305	INC $0523	; Randomizer
60F8: A5 98	LDA $98		; Link Facing Direction
60FA: 29 09	AND #$09	; keep bits .... x..x
60FC: D0 06	BNE $6104

60FE: CE 2305	DEC $0523
6101: CE 2305	DEC $0523

6104: 60	RTS

----

6105: A9 01	LDA #$01	; A = 01
6107: 20 89FA	JSR $FA89

610A: A5 15	LDA $15		; Frame Counter
610C: 29 03	AND #$03	; keep bits .... ..xx

610E: 20 8879	JSR $7988
6111: 20 72FA	JSR $FA72

6114: A9 00	LDA #$00	; A = 00

6116: 4C DF77	JMP $77DF

----

6119: 8D AD 8D 8D AD 8D AD 5D	Table for Whistle Warp Y Positions (8 bytes)

----

6121: AD 2205	LDA $0522
6124: F0 15	BEQ $613B

6126: EE 2205	INC $0522
6129: A9 40	LDA #$40	; A = 40
612B: 85 AC	STA $AC
612D: A2 09	LDX #$09	; X = 09
612F: AD 2305	LDA $0523	; Randomizer
6132: 29 07	AND #$07	; keep bits .... .xxx
6134: A8	TAY
6135: B9 19A1	LDA $A119,Y

6138: 20 00A0	JSR $A000

613B: 4C 906C	JMP $6C90

----

613E: A2 0C	LDX #$0C	; X = 0C

6140: BD 4F03	LDA $034F,X	; Enemy Code
6143: C9 68	CMP #$68
6145: F0 0C	BEQ $6153

6147: C9 62	CMP #$62
6149: F0 08	BEQ $6153

614B: C9 65	CMP #$65
614D: F0 04	BEQ $6153

614F: C9 66	CMP #$66
6151: D0 25	BNE $6178

6153: B5 AC	LDA $AC,X	; Item Dropped by Enemy
6155: C9 01	CMP #$01
6157: D0 1F	BNE $6178

6159: A5 70	LDA $70		; Link X Position
615B: 38	SEC
615C: F5 70	SBC $70,X	; Link/Enemy X Position

615E: 20 1F70	JSR $701F
6161: C9 10	CMP #$10
6163: B0 13	BCS $6178

6165: A5 84	LDA $84		; Link Y Position
6167: 18	CLC

6168: 69 03	ADC #$03
616A: 38	SEC
616B: F5 84	SBC $84,X	; Link/Enemy Y Position

616D: 20 1F70	JSR $701F

6170: C9 10	CMP #$10
6172: B0 04	BCS $6178

6174: A9 00	LDA #$00	; A = 00
6176: 85 0F	STA $0F

6178: CA	DEX
6179: D0 C5	BNE $6140

617B: 60	RTS

----

617C: AD 0905	LDA $0509
617F: F0 2F	BEQ $61B0

6181: A5 28	LDA $28
6183: F0 18	BEQ $619D

6185: A0 18	LDY #$18	; Y = 18
6187: A5 28	LDA $28
6189: F0 0B	BEQ $6196

618B: 29 07	AND #$07	; keep bits .... .xxx
618D: C9 04	CMP #$04
618F: 90 02	BCC $6193

6191: A0 78	LDY #$78	; Y = 78

6193: 84 14	STY $14		; PPU Loading Index

6195: 60	RTS

----

6196: A9 02	LDA #$02	; A = 02
6198: 85 63	STA $63
619A: E6 13	INC $13		; Routine Index

619C: 60	RTS

----

619D: 20 D6A1	JSR $A1D6

61A0: A9 20	LDA #$20	; A = 20
61A2: 8D 0006	STA $0600
61A5: A9 01	LDA #$01	; A = 01
61A7: 8D 7206	STA $0672
61AA: 4A	LSR
61AB: 85 AC	STA $AC		; Item Dropped by Enemy 0
61AD: 8D 0905	STA $0509

61B0: 60	RTS

----

61B1: EE 0905	INC $0509
61B4: A9 C0	LDA #$C0	; A = C0
61B6: 85 28	STA $28
61B8: A9 40	LDA #$40	; A = 40
61BA: 85 AC	STA $AC		; Item Dropped by Enemy 0

61BC: 60	RTS

----

61BD: Some PPU Command (8 bytes)

3F 1C 04	PPU Address 3F1C, transfer 4 bytes
0F 07 17 27
FF

----

61C5: 07 17 30 16 2C 3C 27 06 16	Table for ? (9 bytes)

Seems like palette codes

----

61CE: A0 02	LDY #$02	; Y = 02
61D0: D0 06	BNE $61D8

61D2: A0 05	LDY #$05	; Y = 05
61D4: D0 02	BNE $61D8

61D6: A0 08	LDY #$08	; Y = 08

61D8: 98	TYA
61D9: 48	PHA
61DA: AE 0103	LDX $0301
61DD: A0 00	LDY #$00	; Y = 00

61DF: B9 BDA1	LDA $A1BD,Y
61E2: 9D 0203	STA $0302,X
61E5: E8	INX
61E6: C8	INY
61E7: C0 08	CPY #$08
61E9: D0 F4	BNE $61DF

61EB: 8E 0103	STX $0301
61EE: 68	PLA
61EF: A8	TAY
61F0: A2 02	LDX #$02	; X = 02

61F2: B9 C5A1	LDA $A1C5,Y
61F5: 9D 0603	STA $0306,X
61F8: 88	DEY
61F9: CA	DEX
61FA: 10 F6	BPL $61F2

61FC: AE 4003	LDX $0340

61FF: 60	RTS

----

6200: 20 93FA	JSR $FA93
6203: A9 0B	LDA #$0B	; A = 0B
6205: 4C DF77	JMP $77DF

----

6208: A5 BF	LDA $BF
620A: F0 0E	BEQ $621A

620C: 20 1473	JSR $7314
620F: D0 09	BNE $621A

6211: A9 00	LDA #$00	; A = 00
6213: 85 BF	STA $BF
6215: A9 02	LDA #$02	; A = 02
6217: 8D 0206	STA $0602

621A: 60	RTS

----

621B: 00 00 F0 10	Table for ? (4 bytes)
621F: FB 13 03 03	Table for ? (4 bytes)

----

6223: AD 9403	LDA $0394	; Link Inter-Tile Offset (0-F)
6226: D0 13	BNE $623B

6228: AD F803	LDA $03F8	; Link Movement Direction ?
622B: F0 0E	BEQ $623B

622D: A9 BB	LDA #$BB	; A = BB
622F: 85 02	STA $02
6231: A2 08	LDX #$08	; X = 08
6233: AD 9E04	LDA $049E

6236: E6 02	INC $02
6238: CA	DEX
6239: 10 03	BPL $623E

623B: A2 00	LDX #$00	; X = 00

623D: 60	RTS

----

623E: C5 02	CMP $02
6240: D0 F4	BNE $6236

6242: A5 70	LDA $70		; Link X Position
6244: 85 00	STA $00
6246: A5 84	LDA $84		; Link Y Position
6248: 85 01	STA $01
624A: A5 98	LDA $98		; Link Facing Direction
624C: 29 0C	AND #$0C	; keep bits .... xx..
624E: F0 15	BEQ $6265

6250: A5 02	LDA $02
6252: 29 03	AND #$03	; keep bits .... ..xx
6254: A8	TAY
6255: A5 00	LDA $00
6257: C0 02	CPY #$02
6259: B0 03	BCS $625E

625B: 18	CLC
625C: 69 08	ADC #$08

625E: 29 F0	AND #$F0	; keep bits xxxx ....
6260: 85 00	STA $00

6262: 4C 71A2	JMP $A271

----

6265: A5 02	LDA $02
6267: 4A	LSR
6268: B0 07	BCS $6271

626A: A5 01	LDA $01
626C: 18	CLC
626D: 69 08	ADC #$08
626F: 85 01	STA $01

6271: 20 BBFE	JSR $FEBB
6274: F0 55	BEQ $62CB

6276: A6 59	LDX $59
6278: A5 98	LDA $98		; Link Facing Direction
627A: 20 1370	JSR $7013

627D: A5 00	LDA $00
627F: 18	CLC
6280: 79 1BA2	ADC $A21B,Y
6283: 95 70	STA $70,X	; Link/Enemy X Position
6285: A5 01	LDA $01
6287: 18	CLC
6288: 79 1FA2	ADC $A21F,Y
628B: 95 84	STA $84,X	; Link/Enemy Y Position
628D: BD 9204	LDA $0492,X
6290: F0 39	BEQ $62CB

6292: A0 0B	LDY #$0B	; Y = 0B
6294: 86 03	STX $03
6296: C4 03	CPY $03
6298: F0 1A	BEQ $62B4

629A: B9 7000	LDA $0070,Y
629D: D5 70	CMP $70,X	; Link/Enemy X Position
629F: D0 13	BNE $62B4

62A1: B9 8400	LDA $0084,Y
62A4: D5 84	CMP $84,X	; Link/Enemy Y Position
62A6: D0 0C	BNE $62B4

62A8: B9 4F03	LDA $034F,Y	; Enemy Code
62AB: D0 1E	BNE $62CB

62AD: B9 9204	LDA $0492,Y
62B0: F0 19	BEQ $62CB
62B2: D0 03	BNE $62B7

62B4: 88	DEY
62B5: D0 DF	BNE $6296

62B7: A9 1E	LDA #$1E	; A = 1E
62B9: A4 02	LDY $02
62BB: C0 C0	CPY #$C0
62BD: B0 02	BCS $62C1

62BF: A9 22	LDA #$22	; A = 22

62C1: 9D 4F03	STA $034F,X	; Enemy Code

62C4: 20 DAFE	JSR $FEDA

62C7: A9 3F	LDA #$3F	; A = 3F
62C9: 95 28	STA $28,X

62CB: A2 00	LDX #$00	; X = 00

62CD: 60	RTS

----

62CE: 78 70 80 60 70 80 90 70 80 78	Table for ? (A bytes)
62D8: 70 80 80 90 90 90 90 A0 A0 B0	Table for ? (A bytes)

----

62E2: BD BF04	LDA $04BF,X
62E5: 85 01	STA $01
62E7: A9 35	LDA #$35	; A = 35
62E9: 85 00	STA $00
62EB: A2 0A	LDX #$0A	; X = 0A

62ED: 20 FEA2	JSR $A2FE

62F0: BD CDA2	LDA $A2CD,X
62F3: 95 70	STA $70,X	; Link/Enemy X Position
62F5: BD D7A2	LDA $A2D7,X
62F8: 95 84	STA $84,X	; Link/Enemy Y Position
62FA: CA	DEX
62FB: D0 F0	BNE $62ED

62FD: 60	RTS

----

62FE: A5 00	LDA $00
6300: 9D 4F03	STA $034F,X	; Enemy Code
6303: A9 00	LDA #$00	; A = 00
6305: 9D 9204	STA $0492,X
6308: A5 01	LDA $01
630A: 9D BF04	STA $04BF,X

630D: 60	RTS

----

630E: 20 20 D0 D0 40 B0		Table for ? (6 bytes)
6314: 5D BD 5D BD 8D 8D		Table for ? (6 bytes)

----

631A: BD BF04	LDA $04BF,X
631D: 85 01	STA $01
631F: A0 05	LDY #$05	; Y = 05
6321: A9 49	LDA #$49	; A = 49
6323: 85 00	STA $00
6325: DD 4F03	CMP $034F,X	; Enemy Code
6328: F0 02	BEQ $632C

632A: A0 03	LDY #$03	; Y = 03

632C: 98	TYA
632D: 18	CLC
632E: 6D 4003	ADC $0340
6331: AA	TAX
6332: B9 0EA3	LDA $A30E,Y
6335: 95 70	STA $70,X	; Link/Enemy X Position
6337: B9 14A3	LDA $A314,Y
633A: 95 84	STA $84,X	; Link/Enemy Y Position

633C: 20 FEA2	JSR $A2FE

633F: CA	DEX
6340: 88	DEY
6341: 10 E9	BPL $632C

6343: 60	RTS

----

6344: 05 09 06 0A 01 02		Table for ? (6 bytes)

----

634A: B5 AC	LDA $AC,X
634C: D0 4B	BNE $6399

634E: A5 84	LDA $84		; Link Y Position
6350: 38	SEC
6351: F5 84	SBC $84,X	; Link/Enemy Y Position

6353: 20 1F70	JSR $701F

6356: C9 0E	CMP #$0E
6358: B0 23	BCS $637D

635A: A0 01	LDY #$01	; Y = 01
635C: A5 70	LDA $70		; Link X Position
635E: D5 70	CMP $70,X	; Link/Enemy X Position
6360: F0 1B	BEQ $637D
6362: B0 02	BCS $6366

6364: A0 02	LDY #$02	; Y = 02

6366: B5 70	LDA $70,X	; Link/Enemy X Position
6368: 9D 8003	STA $0380,X
636B: 98	TYA
636C: 95 98	STA $98,X	; Link/Enemy Facing Direction
636E: 3D 43A3	AND $A343,X
6371: F0 07	BEQ $637A

6373: F6 AC	INC $AC,X
6375: A9 70	LDA #$70	; A = 70
6377: 9D BC03	STA $03BC,X

637A: 4C EBA3	JMP $A3EB

----

637D: A5 70	LDA $70		; Link X Position
637F: 38	SEC
6380: F5 70	SBC $70,X	; Link/Enemy X Position

6382: 20 1F70	JSR $701F

6385: C9 0E	CMP #$0E
6387: B0 F1	BCS $637A

6389: A0 04	LDY #$04	; Y = 04
638B: A5 84	LDA $84		; Link Y Position
638D: D5 84	CMP $84,X	; Link/Enemy Y Position
638F: F0 E9	BEQ $637A
6391: B0 02	BCS $6395

6393: A0 08	LDY #$08	; Y = 08

6395: B5 84	LDA $84,X	; Link/Enemy Y Position
6397: D0 CF	BNE $6368

6399: B5 98	LDA $98,X	; Link/Enemy Facing Direction
639B: 85 0F	STA $0F

639D: 20 8DF0	JSR $F08D

63A0: BD 9403	LDA $0394,X
63A3: 29 0F	AND #$0F	; keep bits .... xxxx
63A5: D0 03	BNE $63AA

63A7: 9D 9403	STA $0394,X

63AA: 20 A77A	JSR $7AA7

63AD: B4 70	LDY $70,X	; Link/Enemy X Position
63AF: A9 78	LDA #$78	; A = 78
63B1: 85 00	STA $00
63B3: B5 98	LDA $98,X	; Link/Enemy Facing Direction
63B5: 29 0C	AND #$0C	; keep bits .... xx..
63B7: F0 06	BEQ $63BF

63B9: B4 84	LDY $84,X	; Link/Enemy Y Position
63BB: A9 90	LDA #$90	; A = 90
63BD: 85 00	STA $00

63BF: B5 AC	LDA $AC,X
63C1: 29 01	AND #$01	; keep bits .... ...x
63C3: F0 1C	BEQ $63E1

63C5: 98	TYA
63C6: 38	SEC
63C7: E5 00	SBC $00

63C9: 20 1F70	JSR $701F
63CC: C9 05	CMP #$05
63CE: B0 0E	BCS $63DE

63D0: B5 98	LDA $98,X	; Link/Enemy Facing Direction
63D2: 20 1370	JSR $7013

63D5: 95 98	STA $98,X	; Link/Enemy Facing Direction
63D7: A9 20	LDA #$20	; A = 20
63D9: 9D BC03	STA $03BC,X
63DC: F6 AC	INC $AC,X

63DE: 4C EBA3	JMP $A3EB

----

63E1: 98	TYA
63E2: DD 8003	CMP $0380,X
63E5: D0 04	BNE $63EB

63E7: A9 00	LDA #$00	; A = 00
63E9: 95 AC	STA $AC,X

63EB: 4C BA79	JMP $79BA

----

63EE: 8A	TXA
63EF: 48	PHA
63F0: A5 84	LDA $84		; Link/Enemy Y Position
63F2: 38	SEC
63F3: F5 84	SBC $84,X	; Link/Enemy Y Position

63F5: 20 1F70	JSR $701F

63F8: C9 09	CMP #$09
63FA: B0 1A	BCS $6416

63FC: A5 70	LDA $70		; Link X Position
63FE: 38	SEC
63FF: F5 70	SBC $70,X	; Link/Enemy X Position

6401: 20 1F70	JSR $701F

6404: C9 09	CMP #$09
6406: B0 0E	BCS $6416

6408: 20 A374	JSR $74A3
640B: 20 B1FE	JSR $FEB1

640E: A9 00	LDA #$00	; A = 00
6410: 8D 4E03	STA $034E

6413: 4C 20A4	JMP $A420

----

6416: 20 93FA	JSR $FA93

6419: A2 16	LDX #$16	; X = 16
641B: A0 16	LDY #$16	; Y = 16
641D: 20 35E7	JSR $E735

6420: 68	PLA
6421: AA	TAX

6422: 60	RTS

----

6423: Unused Space (DD bytes)

----

6500: A9 00	LDA #$00	; A = 00
6502: 85 13	STA $13
6504: E6 11	INC $11

6506: 60	RTS

----

6507: PPU Macros for ? (29 bytes)

20 B6 08
24 24 24 24 24 24 24 24

20 D6 08
24 24 24 24 24 24 24 24

20 6C 03
21 00 24

20 AC 03
21 00 24

20 CC 03
21 00 24

FF

----

Related to characters who give or take something (and disappear)

6530: A5 14	LDA $14
6532: D0 D2	BNE $6506

6534: AD 0203	LDA $0302
6537: 10 CD	BPL $6506

6539: A0 27	LDY #$27	; Y = 27 (RAM offset for Rupees to subtract)
653B: AD 6D06	LDA $066D	; Number of Rupees
653E: F0 06	BEQ $6546

6540: A0 26	LDY #$26	; Y = 26 (RAM offset for Rupees to add)
6542: C9 FF	CMP #$FF
6544: D0 05	BNE $654B

6546: A9 00	LDA #$00	; A = 00
6548: 99 5706	STA $0657,Y	; Rupees to add (67D) or substract (67E)

654B: A5 15	LDA $15		; Frame Counter
654D: 4A	LSR
654E: B0 B6	BCS $6506

6550: AD 7D06	LDA $067D	; Number of Rupees to add
6553: F0 0B	BEQ $6560

6555: CE 7D06	DEC $067D	; Number of Rupees to add
6558: EE 6D06	INC $066D	; Number of Rupees
655B: A9 10	LDA #$10	; A = 10
655D: 8D 0406	STA $0604	; Sound Effect
6560: AD 7E06	LDA $067E	; Number of Rupees to subtract
6563: F0 0B	BEQ $6570

6565: CE 7E06	DEC $067E	; Number of Rupees to subtract
6568: CE 6D06	DEC $066D	; Number of Rupees
656B: A9 10	LDA #$10	; A = 10
656D: 8D 0406	STA $0604	; Sound Effect
6570: A0 28	LDY #$28	; Y = 28

6572: B9 976C	LDA $6C97,Y	; Table at $6507 in ROM
6575: 99 0203	STA $0302,Y
6578: 88	DEY
6579: 10 F7	BPL $6572

657B: A0 03	LDY #$03	; Y = 03
657D: AD 6F06	LDA $066F	; Heart Containers / Filled Hearts
6580: 85 0E	STA $0E
6582: AD 7006	LDA $0670	; Heart following the last filled heart
6585: 85 0F	STA $0F

6587: 20 796E	JSR $6E79	; JSR $66E9 in ROM

658A: A2 02	LDX #$02	; X = 02
658C: AD 6D06	LDA $066D	; Number of Rupees
658F: A0 1B	LDY #$1B	; Y = 1B

6591: 20 506D	JSR $6D50	; JSR $65C0 in ROM

6594: A0 21	LDY #$21	; Y = 21
6596: AD 6406	LDA $0664	; Have Magical Key
6599: F0 13	BEQ $65AE

659B: 84 00	STY $00
659D: A9 21	LDA #$21	; A = 21
659F: 85 01	STA $01

65A1: A9 0A	LDA #$0A	; A = 0A
65A3: 20 756D	JSR $6D75

65A6: A2 08	LDX #$08	; X = 08
65A8: 20 556D	JSR $6D55

65AB: 4C 466D	JMP $6D46

----

65AE: A2 08	LDX #$08	; X = 08
65B0: AD 6E06	LDA $066E	; Number of Keys

65B3: 20 506D	JSR $6D50

65B6: A2 0E	LDX #$0E	; X = 0E
65B8: AD 5806	LDA $0658
65BB: A0 27	LDY #$27	; Y = 27

65BD: 4C 506D	JMP $6D50

----

65C0: 84 00	STY $00

65C2: 20 646D	JSR $6D64

65C5: A0 02	LDY #$02	; Y = 02
65C7: A6 00	LDX $00
65C9: B9 0100	LDA $0001,Y
65CC: 9D 0203	STA $0302,X
65CF: CA	DEX
65D0: 88	DEY
65D1: 10 F6	BPL $65C9

65D3: 60	RTS

----

65D4: 20 556E	JSR $6E55

65D7: C0 24	CPY #$24
65D9: D0 02	BNE $65DD

65DB: A0 21	LDY #$21	; Y = 21

65DD: 84 01	STY $01
65DF: C9 24	CMP #$24
65E1: D0 08	BNE $65EB

65E3: A5 03	LDA $03
65E5: 85 02	STA $02
65E7: A9 24	LDA #$24	; A = 24
65E9: 85 03	STA $03

65EB: 60	RTS

----

65EC: A0 01	LDY #$01	; Y = 01
65EE: D0 02	BNE $65F2

65F0: A0 03	LDY #$03	; Y = 03

65F2: 19 0006	ORA $0600,Y
65F5: 99 0006	STA $0600,Y

65F8: 60	RTS

----

65F9: A5 13	LDA $13		; Routine Index
65FB: 48	PHA

65FC: 20 C687	JSR $87C6
65FF: 20 B6B0	JSR $B0B6

6602: A9 70	LDA #$70	; A = 70
6604: 85 70	STA $70		; Link X Position
6606: A9 DD	LDA #$DD	; A = DD
6608: 85 84	STA $84		; Link Y Position
660A: A9 08	LDA #$08	; A = 08
660C: 85 98	STA $98		; Link Facing Direction

660E: 20 3CF2	JSR $F23C
6611: 20 CBEA	JSR $EACB

6614: 68	PLA
6615: 85 13	STA $13		; Routine Index
6617: A9 00	LDA #$00	; A = 00
6619: 85 11	STA $11
661B: E6 13	INC $13		; Routine Index
661D: A9 30	LDA #$30	; A = 30
661F: 8D 9403	STA $0394	; Link Inter-Tile Offset (0-F)
6622: A9 01	LDA #$01	; A = 01
6624: 85 5A	STA $5A

6626: 60	RTS

----

Set $052B, $052C, $052D to Zero
Located at 6DB7 in Cartridge RAM

6627: A9 00	LDA #$00	; A = 00
6629: 8D 2B05	STA $052B
662C: 8D 2C05	STA $052C
662F: 8D 2D05	STA $052D

6632: 60	RTS

----

6633: 08 04 02 01	Table for ? (4 bytes)

----

6637: Table for ? (2A bytes)

Cartridge RAM pointers

1A 60 92 60 02 60 12 65 15 65 18 65 1B 65 42 60
12 62 0A 60 13 65 16 65 19 65 1C 65 6A 60 92 63
12 60 14 65 17 65 1A 65 1D 65

----

6661: A9 FF	LDA #$FF	; A = FF
6663: A4 16	LDY $16		; Selected Save Slot (0-2)

6665: 18	CLC
6666: 69 0E	ADC #$0E
6668: 88	DEY
6669: 10 FA	BPL $6665

666B: A8	TAY
666C: A2 0D	LDX #$0D	; X = 0D

666E: B9 C76D	LDA $6DC7,Y	; Table at $6637
6671: 95 00	STA $00,X
6673: 88	DEY
6674: CA	DEX
6675: 10 F7	BPL $666E

6677: A9 7F	LDA #$7F	; A = 7F
6679: 85 0E	STA $0E
667B: A9 06	LDA #$06	; A = 06
667D: 85 0F	STA $0F

667F: 60	RTS

----

6680: A5 3B	LDA $3B
6682: D0 08	BNE $668C

6684: 98	TYA
6685: 20 806D	JSR $6D80	; JSR $65F0

6688: A9 0A	LDA #$0A	; A = 0A
668A: 85 3B	STA $3B

668C: 60	RTS

----

668D: A2 60	LDX #$60	; X = 60
668F: A9 F8	LDA #$F8	; A = F8

6691: 9D 0002	STA $0200,X
6694: E8	INX
6695: E8	INX
6696: E8	INX
6697: E8	INX
6698: E0 00	CPX #$00
669A: D0 F5	BNE $6691

669C: AD 4203	LDA $0342
669F: 20 396E	JSR $6E39	; JSR $66A9
66A2: 8D 4203	STA $0342

66A5: 60	RTS

----

66A6: AD 4103	LDA $0341

66A9: 18	CLC
66AA: 69 01	ADC #$01
66AC: C9 28	CMP #$28
66AE: D0 02	BNE $66B2

66B0: A9 00	LDA #$00	; A = 00

66B2: 8D 4103	STA $0341

66B5: 60	RTS

----

Related to Hungry Goriya ?

66B6: A5 84	LDA $84		; Link Y Position
66B8: C9 8E	CMP #$8E
66BA: B0 F9	BCS $66B5

66BC: A5 0F	LDA $0F
66BE: 29 08	AND #$08	; keep bits .... x...
66C0: F0 F3	BEQ $66B5

66C2: 4C 49F1	JMP $F149

----

66C5: 20 6E6E	JSR $6E6E	; JSR $66DE

66C8: 85 03	STA $03
66CA: 98	TYA

66CB: 20 6E6E	JSR $6E6E	; JSR $66DE

66CE: C0 00	CPY #$00
66D0: D0 07	BNE $66D9

66D2: A0 24	LDY #$24	; Y = 24
66D4: C9 00	CMP #$00
66D6: D0 01	BNE $66D9

66D8: 98	TYA

66D9: 85 02	STA $02
66DB: 84 01	STY $01

66DD: 60	RTS

----

66DE: A0 00	LDY #$00	; Y = 00

66E0: C9 0A	CMP #$0A
66E2: 90 F9	BCC $66DD

66E4: E9 0A	SBC #$0A
66E6: C8	INY
66E7: D0 F7	BNE $66E0

66E9: 84 0D	STY $0D
66EB: A5 0E	LDA $0E

66ED: 48	PHA
66EE: 29 0F	AND #$0F	; keep bits .... xxxx
66F0: 85 00	STA $00
66F2: A9 0F	LDA #$0F	; A = 0F
66F4: 38	SEC
66F5: E5 00	SBC $00
66F7: 85 00	STA $00
66F9: 68	PLA

66FA: 4A	LSR
66FB: 4A	LSR
66FC: 4A	LSR
66FD: 4A	LSR
66FE: 85 01	STA $01
6700: A9 0F	LDA #$0F	; A = 0F
6702: 38	SEC
6703: E5 01	SBC $01
6705: 85 01	STA $01
6707: A2 00	LDX #$00	; X = 00
6709: 98	TYA
670A: 18	CLC
670B: 69 07	ADC #$07
670D: 85 0B	STA $0B
670F: A0 07	LDY #$07	; Y = 07

6711: C0 FF	CPY #$FF
6713: D0 09	BNE $671E

6715: A5 0D	LDA $0D
6717: 18	CLC
6718: 69 12	ADC #$12
671A: 85 0B	STA $0B
671C: A0 12	LDY #$12	; Y = 12

671E: A5 0E	LDA $0E
6720: F0 04	BEQ $6726

6722: E4 01	CPX $01
6724: B0 04	BCS $672A

6726: A9 24	LDA #$24	; A = 24
6728: D0 1D	BNE $6747

672A: E4 00	CPX $00
672C: F0 06	BEQ $6734
672E: 90 15	BCC $6745

6730: A9 F2	LDA #$F2	; A = F2
6732: D0 13	BNE $6747

6734: A5 0F	LDA $0F
6736: F0 0D	BEQ $6745

6738: C9 80	CMP #$80
673A: B0 F4	BCS $6730

673C: A9 00	LDA #$00	; A = 00
673E: 8D 2905	STA $0529
6741: A9 65	LDA #$65	; A = 65
6743: D0 02	BNE $6747

6745: A9 66	LDA #$66	; A = 66

6747: 84 0C	STY $0C
6749: A4 0B	LDY $0B
674B: 99 0203	STA $0302,Y
674E: C6 0B	DEC $0B
6750: A4 0C	LDY $0C
6752: 88	DEY
6753: E8	INX
6754: E0 10	CPX #$10
6756: D0 B9	BNE $6711

6758: 60	RTS

----

6759: A9 80	LDA #$80	; A = 80 (Music Stops)
675B: 8D 0406	STA $0604
675E: 8D 0306	STA $0603
6761: 0A	ASL
6762: 8D 0506	STA $0605
6765: 8D 0706	STA $0607

6768: 60	RTS

----

6769: 08 00	Table for ? (2 bytes)

----

676B: A0 0A	LDY #$0A	; Y = 0A
676D: A2 00	LDX #$00	; X = 00
676F: B5 70	LDA $70,X	; Link/Enemy X Position
6771: 85 00	STA $00
6773: A2 01	LDX #$01	; X = 01

6775: A5 00	LDA $00
6777: 18	CLC
6778: 7D F96E	ADC $6EF9,X	; Table at $6769
677B: C9 E9	CMP #$E9
677D: B0 04	BCS $6783

677F: C9 10	CMP #$10
6781: B0 08	BCS $678B

6783: B9 4002	LDA $0240,Y
6786: 09 20	ORA #$20	; set  bits ..x. ....
6788: 99 4002	STA $0240,Y
678B: C8	INY
678C: C8	INY
678D: C8	INY
678E: C8	INY
678F: C0 00	CPY #$00
6791: D0 02	BNE $6795

6793: A0 20	LDY #$20	; Y = 20

6795: CA	DEX
6796: 10 DD	BPL $6775

6798: 60	RTS

----

6799: A0 02	LDY #$02	; Y = 02
679B: B5 70	LDA $70,X	; Link/Enemy X Position
679D: 85 00	STA $00
679F: E0 00	CPX #$00
67A1: F0 12	BEQ $67B5

67A3: E0 0D	CPX #$0D
67A5: B0 07	BCS $67AE

67A7: BD 4F03	LDA $034F,X	; Enemy Code
67AA: C9 5C	CMP #$5C
67AC: D0 07	BNE $67B5

67AE: A5 00	LDA $00
67B0: 18	CLC
67B1: 69 0B	ADC #$0B
67B3: 85 00	STA $00

67B5: A5 00	LDA $00
67B7: CD 4603	CMP $0346
67BA: 90 1F	BCC $67DB

67BC: E0 00	CPX #$00
67BE: F0 12	BEQ $67D2

67C0: E0 0D	CPX #$0D
67C2: B0 07	BCS $67CB

67C4: BD 4F03	LDA $034F,X	; Enemy Code
67C7: C9 5C	CMP #$5C
67C9: D0 07	BNE $67D2

67CB: A5 00	LDA $00
67CD: 38	SEC
67CE: E9 17	SBC #$17
67D0: 85 00	STA $00

67D2: A0 01	LDY #$01	; Y = 01
67D4: A5 00	LDA $00
67D6: CD 4703	CMP $0347
67D9: 90 4A	BCC $6825

67DB: 98	TYA
67DC: 25 0F	AND $0F
67DE: F0 45	BEQ $6825

67E0: 4C 49F1	JMP $F149

----

67E3: A0 08	LDY #$08	; Y = 08
67E5: B5 84	LDA $84,X	; Link/Enemy Y Position
67E7: 85 00	STA $00
67E9: E0 00	CPX #$00
67EB: F0 12	BEQ $67FF

67ED: E0 0D	CPX #$0D
67EF: B0 07	BCS $67F8

67F1: BD 4F03	LDA $034F,X	; Enemy Code
67F4: C9 5C	CMP #$5C
67F6: D0 07	BNE $67FF

67F8: A5 00	LDA $00
67FA: 18	CLC
67FB: 69 0F	ADC #$0F
67FD: 85 00	STA $00

67FF: A5 00	LDA $00
6801: CD 4803	CMP $0348
6804: 90 D5	BCC $67DB

6806: E0 00	CPX #$00
6808: F0 12	BEQ $681C

680A: E0 0D	CPX #$0D
680C: B0 07	BCS $6815

680E: BD 4F03	LDA $034F,X	; Enemy Code
6811: C9 5C	CMP #$5C
6813: D0 07	BNE $681C

6815: A5 00	LDA $00
6817: 38	SEC
6818: E9 21	SBC #$21
681A: 85 00	STA $00

681C: A0 04	LDY #$04	; Y = 04
681E: A5 00	LDA $00
6820: CD 4903	CMP $0349
6823: B0 B6	BCS $67DB

6825: 60	RTS

----

6826: 85 0F	STA $0F

6828: 20 296F	JSR $6F29	; JSR $6799
682B: 20 736F	JSR $6F73	; JSR $67E3

682E: A5 0F	LDA $0F

6830: 60	RTS

----

6831: BD A803	LDA $03A8,X	; Time before item disappears
6834: 18	CLC
6835: 7D BC03	ADC $03BC,X	; Link/Enemy Velocity
6838: 9D A803	STA $03A8,X	; Time before item disappears
683B: 08	PHP
683C: BD 9403	LDA $0394,X	; Inter-Tile Offset (0-F)
683F: CD 0E01	CMP $010E
6842: F0 05	BEQ $6849

6844: CD 0F01	CMP $010F
6847: D0 03	BNE $684C

6849: 28	PLP
684A: 18	CLC
684B: 08	PHP

684C: 28	PLP
684D: 08	PHP
684E: BD 9403	LDA $0394,X	; Inter-Tile Offset (0-F)
6851: 69 00	ADC #$00
6853: 9D 9403	STA $0394,X	; Inter-Tile Offset (0-F)
6856: 28	PLP

6857: 60	RTS

----

6858: BD A803	LDA $03A8,X	; Time before item disappears
685B: 38	SEC
685C: FD BC03	SBC $03BC,X	; Link/Enemy Velocity
685F: 9D A803	STA $03A8,X	; Time before item disappears
6862: 08	PHP
6863: BD 9403	LDA $0394,X	; Inter-Tile Offset (0-F)
6866: CD 0E01	CMP $010E
6869: F0 05	BEQ $6870

686B: CD 0F01	CMP $010F
686E: D0 03	BNE $6873

6870: 28	PLP
6871: 38	SEC
6872: 08	PHP

6873: 28	PLP
6874: 08	PHP
6875: BD 9403	LDA $0394,X	; Inter-Tile Offset (0-F)
6878: E9 00	SBC #$00
687A: 9D 9403	STA $0394,X	; Inter-Tile Offset (0-F)
687D: 28	PLP

687E: 60	RTS

----

687F: 04 08 01 02	Table for ? (4 bytes)

----

6883: A0 03	LDY #$03	; Y = 03

6885: 4A	LSR
6886: B0 03	BCS $688B

6888: 88	DEY
6889: 10 FA	BPL $6885

688B: B9 0F70	LDA $700F,Y	; Table at $687F

688E: 60	RTS

----

688F: 10 05	BPL $6896

6891: 49 FF	EOR #$FF	; flip all bits
6893: 18	CLC
6894: 69 01	ADC #$01

6896: 60	RTS

----

6897: 20 B66F	JSR $6FB6
689A: F0 19	BEQ $68B5

689C: BD 9403	LDA $0394,X
689F: 48	PHA
68A0: A9 00	LDA #$00	; A = 00
68A2: 9D 9403	STA $0394,X

68A5: 20 8DF0	JSR $F08D

68A8: 68	PLA
68A9: A4 0E	LDY $0E
68AB: D0 04	BNE $68B1

68AD: 18	CLC
68AE: 7D 9403	ADC $0394,X
68B1: 9D 9403	STA $0394,X

68B4: 60	RTS

----

68B5: A9 80	LDA #$80	; A = 80
68B7: 85 0E	STA $0E

68B9: 60	RTS

----

68BA: 48	PHA
68BB: A8	TAY
68BC: A9 02	LDA #$02	; A = 02
68BE: 85 0A	STA $0A
68C0: B9 7000	LDA $0070,Y
68C3: B4 70	LDY $70,X	; Link/Enemy X Position

68C5: 20 C370	JSR $70C3	; JSR $6933

68C8: 85 03	STA $03
68CA: A5 0A	LDA $0A
68CC: 85 0B	STA $0B
68CE: 68	PLA
68CF: A8	TAY
68D0: A9 08	LDA #$08	; A = 08
68D2: 85 0A	STA $0A
68D4: B9 8400	LDA $0084,Y
68D7: B4 84	LDY $84,X	; Link/Enemy Y Position

68D9: 20 C370	JSR $70C3	; JSR $6933

68DC: 85 04	STA $04

68DE: 60	RTS

----

68DF: 84 00	STY $00
68E1: A9 FF	LDA #$FF	; A = FF
68E3: 85 01	STA $01
68E5: A5 03	LDA $03
68E7: C5 04	CMP $04
68E9: B0 0C	BCS $68F7

68EB: 48	PHA
68EC: A5 04	LDA $04
68EE: 85 03	STA $03
68F0: 68	PLA

68F1: 85 04	STA $04
68F3: A9 01	LDA #$01	; A = 01
68F5: 85 01	STA $01

68F7: A5 03	LDA $03
68F9: 38	SEC
68FA: E5 04	SBC $04
68FC: C9 08	CMP #$08
68FE: 90 18	BCC $6918

6900: A5 00	LDA $00
6902: 18	CLC
6903: 65 01	ADC $01
6905: 85 00	STA $00
6907: F0 0F	BEQ $6918

6909: C9 08	CMP #$08
690B: F0 0B	BEQ $6918

690D: A5 03	LDA $03
690F: 38	SEC
6910: E5 04	SBC $04
6912: 85 03	STA $03
6914: C5 04	CMP $04
6916: B0 E8	BCS $6900

6918: A4 00	LDY $00

691A: 60	RTS

----

691B: 9D BC03	STA $03BC,X	; Link/Enemy Velocity
691E: B5 AC	LDA $AC,X	; Item Dropped by Enemy
6920: 29 F0	AND #$F0	; keep bits xxxx ....
6922: C9 40	CMP #$40
6924: D0 0C	BNE $6932

6926: 5E BC03	LSR $03BC,X	; Link/Enemy Velocity
6929: DE 8003	DEC $0380,X
692C: D0 04	BNE $6932

692E: A9 50	LDA #$50	; A = 50
6930: 95 AC	STA $AC,X	; Item Dropped by Enemy

6932: 60	RTS

----

6933: 85 01	STA $01
6935: 84 02	STY $02
6937: C4 01	CPY $01
6939: B0 06	BCS $6941

693B: 85 02	STA $02
693D: 84 01	STY $01
693F: 46 0A	LSR $0A

6941: A5 02	LDA $02
6943: 38	SEC
6944: E5 01	SBC $01
6946: C9 09	CMP #$09
6948: B0 02	BCS $694C

694A: E6 00	INC $00

694C: 60	RTS

----

694D: AD 5806	LDA $0658	; Number of Bombs
6950: F0 FA	BEQ $694C

6952: A2 10	LDX #$10	; X = 10
6954: B5 AC	LDA $AC,X	; Item Dropped by Enemy
6956: F0 11	BEQ $6969

6958: 29 F0	AND #$F0	; keep bits xxxx ....
695A: C9 10	CMP #$10
695C: D0 0B	BNE $6969

695E: E8	INX
695F: B5 AC	LDA $AC,X	; Item Dropped by Enemy
6961: F0 06	BEQ $6969

6963: 29 F0	AND #$F0	; keep bits xxxx ....
6965: C9 10	CMP #$10
6967: F0 42	BEQ $69AB

6969: 8A	TXA
696A: 49 01	EOR #$01	; flip bits .... ...x
696C: A8	TAY
696D: B9 AC00	LDA $00AC,Y	; Item Dropped by Enemy
6970: F0 04	BEQ $6976

6972: C9 13	CMP #$13
6974: 90 35	BCC $69AB

6976: CE 5806	DEC $0658	; Number of Bombs
6979: A9 20	LDA #$20	; A = 20 (sound of Bomb Planted)
697B: 8D 0406	STA $0604	; Sound Effect
697E: A9 00	LDA #$00	; A = 00
6980: 95 28	STA $28,X
6982: A9 11	LDA #$11	; A = 11
6984: 95 AC	STA $AC,X	; Item Dropped by Enemy
6986: A9 01	LDA #$01	; A = 01
6988: 8D D003	STA $03D0
698B: A9 10	LDA #$10	; A = 10
698D: 85 AC	STA $AC		; Item Dropped by Enemy 0
698F: A0 F0	LDY #$F0	; Y = F0
6991: 85 01	STA $01
6993: 84 02	STY $02
6995: A5 98	LDA $98		; Link Facing Direction (and more)
6997: 95 98	STA $98,X	; Link/Enemy Facing Direction

6999: 20 3C71	JSR $713C	; JSR $69AC

699C: 65 70	ADC $70		; Link X Position
699E: 95 70	STA $70,X	; Link/Enemy X Position
69A0: A5 98	LDA $98		; Link Facing Direction (and more)
69A2: 4A	LSR
69A3: 4A	LSR

69A4: 20 3C71	JSR $713C	; JSR $69AC

69A7: 65 84	ADC $84		; Link Y Position
69A9: 95 84	STA $84,X	; Link/Enemy Y Position

69AB: 60	RTS

----

69AC: A0 00	LDY #$00	; Y = 00
69AE: 84 00	STY $00
69B0: 29 03	AND #$03	; keep bits .... ..xx
69B2: F0 06	BEQ $69BA

69B4: C8	INY
69B5: 29 01	AND #$01	; keep bits .... ...x
69B7: D0 01	BNE $69BA

69B9: C8	INY

69BA: B9 0000	LDA $0000,Y
69BD: 18	CLC

69BE: 60	RTS

----

Related to Candle

69BF: A2 10	LDX #$10	; X = 10
69C1: B5 AC	LDA $AC,X	; Item Dropped by Enemy
69C3: F0 05	BEQ $69CA

69C5: E8	INX
69C6: B5 AC	LDA $AC,X	; Item Dropped by Enemy
69C8: D0 F4	BNE $69BE

69CA: AD 5B06	LDA $065B	; Candle Type (00 = None, 01 = Blue, 02 = Red)
69CD: C9 01	CMP #$01
69CF: D0 05	BNE $69D6

69D1: AD 1305	LDA $0513	; Candle Used in Screen
69D4: D0 E8	BNE $69BE

69D6: A9 01	LDA #$01	; A = 01
69D8: 8D 1305	STA $0513	; Candle Used in Screen
69DB: A9 00	LDA #$00	; A = 00
69DD: 9D 9403	STA $0394,X	; Inter-Tile Offset (0-F)
69E0: 9D A803	STA $03A8,X	; Time before item disappears
69E3: A9 20	LDA #$20	; A = 20
69E5: 9D BC03	STA $03BC,X	; Link/Enemy Velocity
69E8: A9 21	LDA #$21	; A = 21
69EA: 95 AC	STA $AC,X	; Item Dropped by Enemy

69EC: A9 04	LDA #$04	; A = 04
69EE: 20 806D	JSR $6D80	; JSR $65F0

69F1: A9 04	LDA #$04	; A = 04
69F3: 9D D003	STA $03D0,X

69F6: 20 1B71	JSR $711B	; JSR $698B

69F9: 60	RTS

----

69FA: A4 EB	LDY $EB		; Current Location
69FC: B9 FE6A	LDA $6AFE,Y	; Screen Attributes - Table 5
69FF: 29 30	AND #$30	; keep bits ..xx .... (Stairs Position Code)
6A01: 4A	LSR
6A02: 4A	LSR
6A03: 4A	LSR
6A04: 4A	LSR
6A05: A8	TAY
6A06: B9 A76B	LDA $6BA7,Y	; Stairs Positions
6A09: 48	PHA
6A0A: 29 0F	AND #$0F	; keep bits .... xxxx
6A0C: 0A	ASL
6A0D: 0A	ASL
6A0E: 0A	ASL
6A0F: 0A	ASL
6A10: A8	TAY
6A11: 68	PLA
6A12: 29 F0	AND #$F0	; keep bits xxxx ....

6A14: 60	RTS

----

6A15: 95 C0	STA $C0,X
6A17: 95 D3	STA $D3,X
6A19: 95 28	STA $28,X
6A1B: 95 AC	STA $AC,X	; Item Dropped by Enemy
6A1D: 9D F004	STA $04F0,X
6A20: A9 FF	LDA #$FF	; A = FF
6A22: 9D 9204	STA $0492,X
6A25: A9 01	LDA #$01	; A = 01
6A27: 9D 0504	STA $0405,X

6A2A: 60	RTS

----

6A2B: B5 AC	LDA $AC,X	; Item Dropped by Enemy
6A2D: C9 13	CMP #$13
6A2F: D0 1C	BNE $6A4D

6A31: A5 FE	LDA $FE
6A33: 4A	LSR
6A34: B4 28	LDY $28,X
6A36: C0 16	CPY #$16
6A38: F0 04	BEQ $6A3E

6A3A: C0 11	CPY #$11
6A3C: D0 04	BNE $6A42

6A3E: 2A	ROL

6A3F: 4C DB71	JMP $71DB	; JSR $6A4B

----

6A42: C0 12	CPY #$12
6A44: F0 04	BEQ $6A4A

6A46: C0 0D	CPY #$0D
6A48: D0 03	BNE $6A4D

6A4A: 0A	ASL

6A4B: 85 FE	STA $FE

6A4D: 60	RTS

----

6A4E: A5 12	LDA $12		; Game Mode
6A50: C9 09	CMP #$09
6A52: F0 5B	BEQ $6AAF

6A54: AE 2205	LDX $0522
6A57: D0 56	BNE $6AAF

6A59: A5 EB	LDA $EB		; Current Location
6A5B: A2 00	LDX #$00	; X = 00
6A5D: 48	PHA
6A5E: 29 70	AND #$70	; keep bits .xxx ....
6A60: 4A	LSR
6A61: 4A	LSR
6A62: 69 17	ADC #$17
6A64: 9D 5402	STA $0254,X
6A67: A9 11	LDA #$11	; A = 11
6A69: A4 10	LDY $10		; Current Level (0 = Overworld)
6A6B: F0 02	BEQ $6A6F

6A6D: A9 12	LDA #$12	; A = 12

6A6F: 85 00	STA $00
6A71: 68	PLA
6A72: 29 0F	AND #$0F	; keep bits .... xxxx
6A74: C0 00	CPY #$00
6A76: F0 01	BEQ $6A79

6A78: 0A	ASL

6A79: 0A	ASL
6A7A: 0A	ASL
6A7B: 65 00	ADC $00
6A7D: 6D AC6B	ADC $6BAC
6A80: 9D 5702	STA $0257,X
6A83: A9 3E	LDA #$3E	; A = 3E
6A85: 9D 5502	STA $0255,X
6A88: A9 00	LDA #$00	; A = 00
6A8A: E0 00	CPX #$00
6A8C: F0 1E	BEQ $6AAC

6A8E: A9 03	LDA #$03	; A = 03
6A90: 48	PHA
6A91: A4 10	LDY $10		; Current Level (0 = Overworld)
6A93: C0 09	CPY #$09
6A95: F0 08	BEQ $6A9F

6A97: AD 7106	LDA $0671	; Triforce Pieces (1 bit per piece)
6A9A: 39 BDE6	AND $E6BD,Y
6A9D: D0 0C	BNE $6AAB

6A9F: A5 15	LDA $15		; Frame Counter
6AA1: 29 1F	AND #$1F	; keep bits ...x xxxx
6AA3: C9 10	CMP #$10
6AA5: B0 04	BCS $6AAB

6AA7: 68	PLA
6AA8: A9 02	LDA #$02	; A = 02
6AAA: 48	PHA

6AAB: 68	PLA

6AAC: 9D 5602	STA $0256,X

6AAF: 60	RTS

----

6AB0: 20 4872	JSR $7248	; JSR $6AB8

6AB3: A9 02	LDA #$02	; A = 02
6AB5: 4C ACBF	JMP $BFAC

----

6AB8: A5 28	LDA $28
6ABA: D0 27	BNE $6AE3

6ABC: A9 01	LDA #$01	; A = 01
6ABE: 85 0A	STA $0A

6AC0: A6 0A	LDX $0A
6AC2: B5 7C	LDA $7C,X
6AC4: 85 E8	STA $E8

6AC6: A9 05	LDA #$05	; A = 05
6AC8: 20 ACBF	JSR $BFAC

6ACB: A9 0E	LDA #$0E	; A = 0E
6ACD: 20 98BF	JSR $BF98
6AD0: 20 DEA8	JSR $A8DE

6AD3: C6 0A	DEC $0A
6AD5: 10 E9	BPL $6AC0

6AD7: A9 FF	LDA #$FF	; A = FF
6AD9: 85 E8	STA $E8
6ADB: A9 05	LDA #$05	; A = 05
6ADD: 85 28	STA $28
6ADF: C6 7C	DEC $7C
6AE1: E6 7D	INC $7D

6AE3: 60	RTS

----

Increment $00-$01 by 1 (7274 in Cartridge RAM)

6AE4: A9 01	LDA #$01	; A = 01

Increment $00-$01 by A (7276 in Cartridge RAM)

6AE6: 18	CLC
6AE7: 65 00	ADC $00
6AE9: 85 00	STA $00
6AEB: 90 02	BCC $6AEF

6AED: E6 01	INC $01

6AEF: 60	RTS

----

Increment $02-$03 by 1 (7280 in Cartridge RAM)

6AF0: A9 01	LDA #$01	; A = 01

Increment $02-$03 by A (7282 in Cartridge RAM)

6AF2: 18	CLC
6AF3: 65 02	ADC $02
6AF5: 85 02	STA $02
6AF7: 90 02	BCC $6AFB

6AF9: E6 03	INC $03

6AFB: 60	RTS

----

Add 1 to $04-$05 (728C in Cartridge RAM)

6AFC: A9 01	LDA #$01	; A = 01

Add A to $04-$05 (728E in Cartridge RAM)

6AFE: 18	CLC
6AFF: 65 04	ADC $04
6B01: 85 04	STA $04
6B03: 90 02	BCC $6B07

6B05: E6 05	INC $05

6B07: 60	RTS

----

Substract 1 from $04-$05 (7298 in Cartridge RAM)

6B08: A5 04	LDA $04
6B0A: 38	SEC
6B0B: E9 01	SBC #$01
6B0D: 85 04	STA $04
6B0F: B0 02	BCS $6B13

6B11: C6 05	DEC $05

6B13: 60	RTS

----

Multiple tables for ?

6B14

01 00 00 00 06 05 04 04 02 02 03 0D 09 0C 1B 1C
08 0A 0B 0B 0E 0F 10 11 16 17 18 1A 1F 1D 1E 07
07 15 19 14

6B38

14 21 22 23 01 01 21 22 21 22 01 01 01 01 01 15
01 01 21 22 01 01 01 01 11 11 10 01 01 01 01 11
22 01 10 12

6B5C

FF 01 FF 00 00 02 02 00 01 00 02 00 00 02 02 01
02 02 02 02 02 02 02 02 02 02 02 02 01 00 01 00

----

6B7C: 20 CEE6	JSR $E6CE

6B7F: 09 10	ORA #$10	; set  bits ...x ....
6B81: 91 00	STA ($00),Y

6B83: 60	RTS

----

6B84: AD AF6B	LDA $6BAF	; Pointer for Column Data (low byte)
6B87: 85 08	STA $08
6B89: AD B06B	LDA $6BB0	; Pointer for Column Data (high byte)
6B8C: 85 09	STA $09
6B8E: A4 EB	LDY $EB		; Current Location
6B90: B1 08	LDA ($08),Y
6B92: 29 10	AND #$10	; keep bits ...x ....

6B94: 60	RTS

----

6B95: 29 32 16		Palette Codes according to Ring worn (3 bytes)

----

6B98: A5 AC	LDA $AC		; Item Dropped by Enemy
6B9A: 29 C0	AND #$C0	; keep bits xx.. ....
6B9C: C9 40	CMP #$40
6B9E: F0 F4	BEQ $6B94

6BA0: 20 1473	JSR $7314	; JSR $6B84
6BA3: D0 EF	BNE $6B94

6BA5: A2 13	LDX #$13	; X = 13
6BA7: B5 AC	LDA $AC,X	; Item Dropped by Enemy
6BA9: 30 E9	BMI $6B94

6BAB: B5 98	LDA $98,X	; Enemy Facing Direction
6BAD: 85 04	STA $04
6BAF: BD A803	LDA $03A8,X	; Time before item disappears
6BB2: C9 F0	CMP #$F0
6BB4: B0 72	BCS $6C28

6BB6: A5 84	LDA $84		; Link Y Position
6BB8: 18	CLC
6BB9: 69 03	ADC #$03
6BBB: 38	SEC
6BBC: F5 84	SBC $84,X	; Enemy Y Position

6BBE: 20 1F70	JSR $701F
6BC1: C9 09	CMP #$09
6BC3: B0 63	BCS $6C28

6BC5: A5 70	LDA $70		; Link X Position
6BC7: 38	SEC
6BC8: F5 70	SBC $70,X	; Enemy X Position

6BCA: 20 1F70	JSR $701F	; JSR $688F
6BCD: C9 09	CMP #$09
6BCF: B0 57	BCS $6C28

6BD1: A9 FF	LDA #$FF	; A = FF
6BD3: 95 AC	STA $AC,X	; Item Dropped by Enemy
6BD5: 95 84	STA $84,X	; Link/Enemy Y Position
6BD7: E0 13	CPX #$13
6BD9: D0 03	BNE $6BDE

6BDB: 20 0C73	JSR $730C	; JSR $6B7C

6BDE: A5 04	LDA $04
6BE0: A2 08	LDX #$08	; X = 08
6BE2: 8E 0206	STX $0602
6BE5: C9 0E	CMP #$0E
6BE7: D0 05	BNE $6BEE

6BE9: A2 02	LDX #$02	; X = 02
6BEB: 8E 0206	STX $0602

6BEE: A6 12	LDX $12		; Game Mode
6BF0: E0 05	CPX #$05
6BF2: F0 0D	BEQ $6C01

6BF4: A2 80	LDX #$80	; X = 80
6BF6: 8E 0605	STX $0506
6BF9: A2 08	LDX #$08	; X = 08
6BFB: 8E 0006	STX $0600
6BFE: 8D 0505	STA $0505

6C01: AA	TAX
6C02: BD A472	LDA $72A4,X	; Table at $6B14
6C05: A8	TAY
6C06: BD C872	LDA $72C8,X	; Table at $6B38

6C09: 48	PHA
6C0A: 29 0F	AND #$0F	; keep bits .... xxxx
6C0C: 85 0A	STA $0A
6C0E: 68	PLA

6C0F: 29 F0	AND #$F0	; keep bits xxxx ....
6C11: D0 1F	BNE $6C32

6C13: C0 11	CPY #$11
6C15: F0 72	BEQ $6C89

6C17: C0 10	CPY #$10
6C19: F0 6E	BEQ $6C89

6C1B: C0 1A	CPY #$1A
6C1D: F0 6A	BEQ $6C89

6C1F: C0 1B	CPY #$1B
6C21: F0 66	BEQ $6C89

6C23: A5 0A	LDA $0A

6C25: 99 5706	STA $0657,Y

6C28: 60	RTS

----

6C29: A0 04	LDY #$04	; Y = 04

6C2B: 20 A374	JSR $74A3	; JSR $6D13

6C2E: 88	DEY
6C2F: 10 FA	BPL $6C2B

6C31: 60	RTS

----

6C32: C9 10	CMP #$10
6C34: D0 4D	BNE $6C83

6C36: C0 18	CPY #$18
6C38: F0 3A	BEQ $6C74

6C3A: C0 1C	CPY #$1C
6C3C: F0 EB	BEQ $6C29

6C3E: C0 16	CPY #$16
6C40: F0 3E	BEQ $6C80

6C42: C0 19	CPY #$19
6C44: F0 75	BEQ $6CBB

6C46: C0 17	CPY #$17
6C48: D0 03	BNE $6C4D

6C4A: 20 AC74	JSR $74AC	; JSR $6D1C
6C4D: C0 14	CPY #$14
6C4F: F0 6D	BEQ $6CBE

6C51: A5 0A	LDA $0A
6C53: 18	CLC
6C54: 79 5706	ADC $0657,Y
6C57: 90 02	BCC $6C5B

6C59: A9 FF	LDA #$FF	; A = FF

6C5B: C0 07	CPY #$07
6C5D: D0 06	BNE $6C65

6C5F: C9 03	CMP #$03
6C61: 90 02	BCC $6C65

6C63: A9 02	LDA #$02	; A = 02

6C65: C0 01	CPY #$01
6C67: D0 08	BNE $6C71

6C69: CD 7C06	CMP $067C	; Maximum number of Bombs
6C6C: 90 03	BCC $6C71

6C6E: AD 7C06	LDA $067C	; Maximum number of Bombs

6C71: 4C B573	JMP $73B5	; JMP $6C25

----

6C74: B9 5706	LDA $0657,Y
6C77: C9 F0	CMP #$F0
6C79: B0 AD	BCS $6C28

6C7B: 69 11	ADC #$11

6C7D: 4C B573	JMP $73B5	; JMP $6C25

----

6C80: 4C A374	JMP $74A3	; JMP $6D13

----

6C83: C9 20	CMP #$20
6C85: D0 D2	BNE $6C59
6C87: F0 6B	BEQ $6CF4

6C89: A5 10	LDA $10		; Current Level (0 = Overworld)
6C8B: F0 2D	BEQ $6CBA

6C8D: C0 1B	CPY #$1B
6C8F: F0 5B	BEQ $6CEC

6C91: C0 11	CPY #$11
6C93: D0 05	BNE $6C9A

6C95: A2 01	LDX #$01	; X = 01
6C97: 8E E504	STX $04E5

6C9A: 38	SEC
6C9B: E9 01	SBC #$01
6C9D: C9 08	CMP #$08
6C9F: 90 02	BCC $6CA3

6CA1: C8	INY
6CA2: C8	INY

6CA3: 29 07	AND #$07	; keep bits .... .xxx
6CA5: AA	TAX
6CA6: B9 5706	LDA $0657,Y
6CA9: 1D BEE6	ORA $E6BE,X	; Masks for Triforce Pieces
6CAC: 99 5706	STA $0657,Y
6CAF: C0 1A	CPY #$1A
6CB1: D0 07	BNE $6CBA

6CB3: 20 A3EB	JSR $EBA3

6CB6: A9 12	LDA #$12	; A = 12
6CB8: 85 12	STA $12		; Game Mode

6CBA: 60	RTS

----

6CBB: 20 AC74	JSR $74AC	; JSR $6D1C

6CBE: A5 0A	LDA $0A
6CC0: 85 01	STA $01

6CC2: 20 6C74	JSR $746C	; JSR $6CDC
6CC5: D0 07	BNE $6CCE

6CC7: AE 7006	LDX $0670	; Heart following the last filled heart
6CCA: E8	INX
6CCB: D0 09	BNE $6CD6

6CCD: 60	RTS

----

6CCE: EE 6F06	INC $066F	; Heart Containers / Filled Hearts
6CD1: C6 01	DEC $01
6CD3: 10 ED	BPL $6CC2

6CD5: 60	RTS

----

6CD6: A9 FF	LDA #$FF	; A = FF
6CD8: 8D 7006	STA $0670	; Heart following the last filled heart

6CDB: 60	RTS

----

6CDC: AD 6F06	LDA $066F	; Heart Containers / Filled Hearts

6CDF: 48	PHA
6CE0: 29 0F	AND #$0F	; keep bits .... xxxx
6CE2: 85 00	STA $00
6CE4: 68	PLA

6CE5: 4A	LSR
6CE6: 4A	LSR
6CE7: 4A	LSR
6CE8: 4A	LSR
6CE9: C5 00	CMP $00

6CEB: 60	RTS

----

6CEC: A9 01	LDA #$01	; A = 01
6CEE: 20 ACBF	JSR $BFAC

6CF1: 4C B1A1	JMP $A1B1

----

6CF4: A5 0A	LDA $0A
6CF6: D9 5706	CMP $0657,Y
6CF9: 90 20	BCC $6D1B

6CFB: 99 5706	STA $0657,Y
6CFE: C0 0B	CPY #$0B
6D00: D0 19	BNE $6D1B

6D02: A6 16	LDX $16		; Selected Save Slot (0-2)
6D04: AC 6206	LDY $0662	; Ring Type (00 = None, 01 = Blue, 02 = Red)
6D07: B9 2573	LDA $7325,Y	; Table at $6B95
6D0A: BC 0EEA	LDY $EA0E,X
6D0D: 99 0468	STA $6804,Y

6D10: 4C 2BEA	JMP $EA2B

----

6D13: A9 01	LDA #$01	; A = 01
6D15: 8D 0206	STA $0602	; Sound Effect # ?
6D18: EE 7D06	INC $067D	; Number of Rupees to add

6D1B: 60	RTS

----

6D1C: A9 00	LDA #$00	; A = 00
6D1E: 8D 0206	STA $0602
6D21: A9 08	LDA #$08	; A = 08
6D23: 8D 0406	STA $0604

6D26: 60	RTS

----

6D27: A5 34	LDA $34
6D29: D0 4B	BNE $6D76

6D2B: AD 1C05	LDA $051C
6D2E: 10 02	BPL $6D32

6D30: 49 83	EOR #$83	; flip bits x... ..xx

6D32: 85 00	STA $00
6D34: 0A	ASL
6D35: 0A	ASL
6D36: 0A	ASL
6D37: 18	CLC
6D38: 65 00	ADC $00
6D3A: 29 FC	AND #$FC	; keep bits xxxx xx..
6D3C: A8	TAY
6D3D: AE 0103	LDX $0301
6D40: A9 3F	LDA #$3F	; A = 3F
6D42: 9D 0203	STA $0302,X
6D45: E8	INX
6D46: A9 08	LDA #$08	; A = 08
6D48: 9D 0203	STA $0302,X
6D4B: E8	INX
6D4C: 9D 0203	STA $0302,X
6D4F: 85 00	STA $00
6D51: E8	INX

6D52: B9 FA6B	LDA $6BFA,Y	; Dungeons Fading Sequence Palettes
6D55: 9D 0203	STA $0302,X
6D58: C8	INY
6D59: E8	INX
6D5A: C6 00	DEC $00
6D5C: D0 F4	BNE $6D52

6D5E: A9 FF	LDA #$FF	; A = FF
6D60: 9D 0203	STA $0302,X
6D63: 8E 0103	STX $0301
6D66: EE 1C05	INC $051C
6D69: AD 1C05	LDA $051C
6D6C: 29 0F	AND #$0F	; keep bits .... xxxx
6D6E: C9 04	CMP #$04
6D70: F0 05	BEQ $6D77

6D72: A9 0A	LDA #$0A	; A = 0A
6D74: 85 34	STA $34

6D76: 60	RTS

----

6D77: A9 00	LDA #$00	; A = 00
6D79: 60	RTS

----

6D7A: 3D 1C 20 00 DD 1C 20 00	Table for ? (8 bytes)

----

6D82: A0 00	LDY #$00	; Y = 00
6D84: A2 00	LDX #$00	; X = 00

6D86: BD 0A75	LDA $750A,X	; Table at $6D7A
6D89: 99 0002	STA $0200,Y
6D8C: E8	INX
6D8D: 8A	TXA
6D8E: 29 07	AND #$07	; keep bits .... .xxx
6D90: AA	TAX
6D91: C8	INY
6D92: C0 40	CPY #$40
6D94: D0 F0	BNE $6D86

6D96: 60	RTS

----

Direction Sequences for Lost Woods and Lost Hills

6D97: 08 02 04 02	Directions Sequence for Lost Woods
6D9B: 08 08 08 08	Directions Sequence for Lost Hills

.... x...	08	North
.... .x..	04	South
.... ..x.	02	West
.... ...x	01	East

----

6D9F: AE 2F05	LDX $052F	; Lost Woods/Hills Sequence Counter
6DA2: A5 98	LDA $98		; Link/Enemy Facing Direction
6DA4: A4 EB	LDY $EB		; Current Location
6DA6: C0 61	CPY #$61	; 61 = Lost Woods Location
6DA8: D0 1E	BNE $6DC8

6DAA: DD 2775	CMP $7527,X	; Table at $6D97
6DAD: D0 10	BNE $6DBF

6DAF: E0 03	CPX #$03	; 03 = number of values in sequence (-1)
6DB1: F0 27	BEQ $6DDA

6DB3: EE 2F05	INC $052F	; Lost Woods/Hills Sequence Counter
6DB6: 84 EC	STY $EC		; Next Location

6DB8: 60	RTS

----

6DB9: A9 00	LDA #$00	; A = 00
6DBB: 8D 2F05	STA $052F	; Lost Woods/Hills Sequence Counter

6DBE: 60	RTS

----

6DBF: C9 01	CMP #$01	; Recovery Direction for Lost Woods (East)
6DC1: F0 F5	BEQ $6DB8

6DC3: 20 4975	JSR $7549	; JSR $6DB9
6DC6: F0 EE	BEQ $6DB6

6DC8: C0 1B	CPY #$1B	; 1B = Lost Hills Location
6DCA: D0 ED	BNE $6DB9

6DCC: DD 2B75	CMP $752B,X	; Table at $6D9B
6DCF: F0 05	BEQ $6DD6

6DD1: C9 02	CMP #$02	; Recovery Direction for Lost Hills (West)
6DD3: D0 EE	BNE $6DC3

6DD5: 60	RTS

----

6DD6: E0 03	CPX #$03
6DD8: D0 D9	BNE $6DB3

6DDA: A9 04	LDA #$04	; A = 04
6DDC: 8D 0206	STA $0602	; Sound Effect (music-like)

6DDF: 60	RTS

----

6DE0: A9 08	LDA #$08	; A = 08
6DE2: 85 00	STA $00
6DE4: A5 02	LDA $02
6DE6: 0A	ASL
6DE7: 26 00	ROL $00
6DE9: 0A	ASL
6DEA: 26 00	ROL $00
6DEC: 29 E0	AND #$E0	; keep bits xxx. ....
6DEE: 85 01	STA $01
6DF0: A5 03	LDA $03
6DF2: 4A	LSR
6DF3: 4A	LSR
6DF4: 4A	LSR
6DF5: 05 01	ORA $01
6DF7: 85 01	STA $01

6DF9: 60	RTS

----

6DFA: Unused Space (A bytes)

----

6E04: Tile Mapping Codes for Enemies (6B bytes)

00 08 0B 0F 13 17 5C 60 1B 1B 21 21 64 6A 27 29
2B 35 3F 70 74 76 76 78 7A 7E 80 49 82 84 86 4B
4F 4F 51 51 88 8C 90 90 92 94 96 98 99 99 99 53
54 9A 9B 9B A5 A5 AB AB AC AE AE AF AF B2 B8 B8
08 08 C6 C6 C6 C6 C6 C6 C8 C8 C9 C9 CA CA CA CA
CA CA CA CA 09 09 0A 0A 0B 0B 0B 0B 0B 0B CB 55
55 55 55 55 55 55 56 57 57 CB CC

00 = Link
08 = Flame
0B = Blue Lynel
0F = Red Lynel
13 = Blue Moblin
17 = Red Moblin
5C = Blue Goriya
60 = Red Goriya
1B = Red Octorok
1B = Red Octorok - Fast
21 = Blue Octorok
21 = Blue Octorok - Fast
64 = Red Darknut
6A = Blue Darknut
27 = Blue Tektite
29 = Red Tektite
2B = Blue Leever
35 = Red Leever
3F = Zola
70 = Vire
74 = Zol
76 = Gel (?)
76 = Gel
78 = Pols Voice
7A = Like Like
7E = Digdogger Spawn (?)
80 = Enemy Spawn Smoke (?)
49 = Peahat
82 = Blue Keese
84 = Red Keese
86 = Dark Keese
4B = Enemy that self-destructs instantly (?)
4F = Falling Rocks Generator
4F = Falling Rock
51 = Ghini - Master
51 = Ghini - Out of Tombs
88 = Blue Wizzrobe
8C = Red Wizzrobe
90 = ?
90 = ?
92 = Wallmaster
94 = Rope
96 = ?
98 = Stalfos
99 = Bubble
99 = Blue Bubble
99 = Red Bubble
53 = ? Weird glitchy sprite that acts like the Whistle Tornado
54 = Fairy (immobile type, recharge all health)
9A = Gibdo ?
9B = Dodongo (mini-boss type, respawns eventually)
9B = Dodongo (boss type)
A5 = Blue Gohma (3 arrows needed)
A5 = Red Gohma (1 arrow needed)
AB = Group of 10 Rupees
AB = Hungry Goriya (Food item needed)
AC = Zelda (with 4 Flames)
AE = Digdogger - 3 Spawns
AE = Digdogger - 1 Spawn
AF = Twin Red Lanmola
AF = Twin Blue Lanmola
B2 = Manhandla
B8 = Aquamentus
B8 = Gannon
08 = Flame (killable)
08 = Flame
C6
C6
C6
C6
C6
C6 C8 C8 C9 C9 CA CA CA CA
CA CA CA CA 09 09 0A 0A 0B 0B 0B 0B 0B 0B CB 55
55 55 55 55 55 55 56 57 57 CB CC

6E6F: Sprite Codes for Cave Characters (14 bytes)

58 58 58 58 58 58 58 58 58	Old Man		(10-18)
59 59 59 59			Old Woman	(19-1C)
5A 5A 5A 5A			Merchant	(1D-20)
5B 5B 5B			Moblin		(21-23)

----

6E83: Tile Mapping Codes for Enemy Frames (CC bytes)

00 04 08 0C 10 10 14 18			Link (00-07)
5C					Flame (08)
9E					Octorok Rock (09)
44					Energy Ball (0A)
CE D2 D6 DA CE D2 D6 DA			Lynel (0B-12)
F0 F4 F8 FC F0 F4 F8 FC			Moblin (13-1A)
B4 B0 B0 B8 B2 B2 B4 B0 B0 B8 B2 B2	Octorok (1B-26)
CA CC CA CC				Tektite (27-2A)
BC BE C0 C0 C2 C4 C0 C0 BC BE		Leever
BC BE C0 C0 C2 C4 C0 C0 BC BE BC BE	Leever (2B-40)
EC EE EC EE EC EE BC BE			Zora (41-48)
C6 C8					Peahat (49-4A)
A0 A8 A4 AC				Armos (4B-4E)
90 E8					Falling Rock (4F-50)
E4 E0					Ghini (51-52)
94					Whistle Tornado (53)
F3 C9 BD C1				? (54-55-56-57)
98					Old Man (58)
9A					Old Woman (59)
9C					Merchant (5A)
F8					Moblin in Caves (5B)
B8 BC B0 B4 B8 BC B0 B4 B8		Goriya (5C-64)
AC					Wallmaster (65)
B4 BC B0 B4 B8 AC B4 BC B0 B4
AC AE B0 B2 A8 AA 92 94 A0 A2 A6 A4 A2 A4 D8 DA
00 00 9A 9C 9A 9C 9A 9C B4 B8 BC BE B4 B8 BC BE
FC FE AC 9C A0 A4 A0 A4 A8 8E A4 DC E0 E4 E8 EC
F0 F4 F8 FA FE F4 F6 FE FC F0 F8 B0 F6 F0 D4 FC
FE F8 E8 EA E0 E4 EC EC D0 D4 D8 DC E0 E4 C0 C8
C4 CC E8 EA 72 74 DE EE F8 96 98 B1

----

6F4F: Table for Enemy Attributes (CC bytes)

Palette Code and Flipping

00 00 00 00 00 00 00 00 02 00 00 01 01 01 01 02
02 02 02 03 03 03 03 02 02 02 02 02 82 02 02 82
02 01 81 01 01 81 01 01 01 02 02 02 02 01 01 01
01 01 01 02 02 02 02 02 02 02 02 02 02 02 02 03
03 03 03 03 03 03 03 03 03 02 02 02 02 02 02 02
02 01 01 01 02 03 03 03 02 02 00 02 01 01 01 01
02 02 02 02 02 02 02 02 02 02 01 01 01 01 01 01
01 01 01 01 03 03 03 03 00 00 02 02 02 02 03 03
03 03 01 01 02 02 03 03 01 01 01 01 02 02 02 02
01 01 01 01 02 02 02 02 02 02 01 03 03 03 03 03
03 03 03 03 03 01 01 01 01 01 01 02 00 00 03 01
01 01 01 01 01 01 01 01 03 03 03 03 03 03 03 03
03 03 03 03 03 03 02 02 01 01 02 03

----

701B: Table for ? (14 * 2 = 28 bytes)

Related to Intro All Treasures sprites

60 BC 64 B8 68 B4 6C B0 70 CC 74 C8 78 C4 7C C0
80 DC 84 D8 88 D4 8C D0 90 EC 94 E8 98 E4 9C E0
A0 FC A4 F8 A8 F4 AC F0

----

7043: 60	RTS

----

7044: 20 4FFA	JSR $FA4F
7047: 98	TYA
7048: 4C DF77	JMP $77DF

----

704B: A0 01	LDY #$01	; Y = 01
704D: D0 02	BNE $7051

704F: A0 00	LDY #$00	; Y = 00

7051: 84 0C	STY $0C
7053: BC 4F03	LDY $034F,X	; Enemy Code
7056: C8	INY
7057: 85 0D	STA $0D
7059: 84 0E	STY $0E
705B: 86 08	STX $08
705D: AC 4103	LDY $0341
7060: B9 AB77	LDA $77AB,Y	; Table at $701B
7063: 8D 4303	STA $0343
7066: B9 AC77	LDA $77AC,Y	; Table at $701C
7069: E0 00	CPX #$00
706B: D0 07	BNE $7074

706D: A9 48	LDA #$48	; A = 48
706F: 8D 4303	STA $0343
7072: A9 4C	LDA #$4C	; A = 4C

7074: 8D 4403	STA $0344
7077: A4 0E	LDY $0E
7079: A9 01	LDA #$01	; A = 01
707B: 85 07	STA $07
707D: A9 08	LDA #$08	; A = 08
707F: 85 0A	STA $0A
7081: B9 9475	LDA $7594,Y
7084: 18	CLC
7085: 65 0D	ADC $0D
7087: A8	TAY
7088: B9 1376	LDA $7613,Y
708B: 85 02	STA $02
708D: 18	CLC
708E: 69 02	ADC #$02
7090: 85 03	STA $03
7092: E0 00	CPX #$00
7094: F0 12	BEQ $70A8

7096: E0 0D	CPX #$0D
7098: B0 0E	BCS $70A8

709A: BD BF04	LDA $04BF,X
709D: 29 02	AND #$02	; keep bits .... ..x.
709F: D0 18	BNE $70B9

70A1: BD BF04	LDA $04BF,X
70A4: 29 08	AND #$08	; keep bits .... x...
70A6: D0 06	BNE $70AE

70A8: B9 DF76	LDA $76DF,Y
70AB: 20 8879	JSR $7988

70AE: E0 00	CPX #$00
70B0: F0 0C	BEQ $70BE

70B2: A4 0C	LDY $0C
70B4: F0 08	BEQ $70BE

70B6: 4C 7979	JMP $7979

----

70B9: C6 07	DEC $07
70BB: 4C 6878	JMP $7868

----

70BE: A5 0F	LDA $0F
70C0: F0 16	BEQ $70D8

70C2: A5 02	LDA $02
70C4: 48	PHA
70C5: A5 03	LDA $03
70C7: 85 02	STA $02
70C9: 68	PLA
70CA: 85 03	STA $03
70CC: A5 04	LDA $04
70CE: 49 40	EOR #$40	; flip bits .x.. ....
70D0: 85 04	STA $04
70D2: A5 05	LDA $05
70D4: 49 40	EOR #$40	; flip bits .x.. ....
70D6: 85 05	STA $05

70D8: BC F004	LDY $04F0,X
70DB: F0 18	BEQ $70F5

70DD: A0 01	LDY #$01	; Y = 01

70DF: B9 0400	LDA $0004,Y
70E2: 29 FC	AND #$FC	; keep bits xxxx xx..
70E4: 99 0400	STA $0004,Y
70E7: BD F004	LDA $04F0,X
70EA: 29 03	AND #$03	; keep bits .... ..xx
70EC: 19 0400	ORA $0004,Y
70EF: 99 0400	STA $0004,Y
70F2: 88	DEY
70F3: 10 EA	BPL $70DF

70F5: AE 4303	LDX $0343
70F8: A0 00	LDY #$00	; Y = 00

70FA: B9 0200	LDA $0002,Y
70FD: 9D 0102	STA $0201,X
7100: A5 01	LDA $01
7102: 9D 0002	STA $0200,X
7105: A5 00	LDA $00
7107: 9D 0302	STA $0203,X
710A: 18	CLC
710B: 65 0A	ADC $0A
710D: 85 00	STA $00
710F: B9 0400	LDA $0004,Y
7112: 9D 0202	STA $0202,X
7115: AE 4403	LDX $0344
7118: A5 08	LDA $08
711A: F0 03	BEQ $711F

711C: 20 366E	JSR $6E36

711F: C8	INY
7120: C6 07	DEC $07
7122: 10 D6	BPL $70FA

7124: A6 08	LDX $08

7126: 60	RTS

----

7127: Items Tile Mappings Offsets (25 bytes)

Offset into table at 714C

00 03 07 0A 0B 0C 0D 0E 0F 11 12 13 14 15 16 17
18 17 18 17 19 1B 1C 1D 1E 1F 20 21 1C 22 22 26
27 28 29 2B 2E

00 = Wooden Sword / White Sword
03 = Bomb
07 = Arrow / Silver Arrow
0A = Bow
0B = Blue Candle / Red Candle
0C = Recorder
0D = Food
0E = Blue Potion / Red Potion
0F = Magical Rod
11 = Raft
12 = Book of Magic
13 = Blue Ring / Red Ring
14 = Stepladder
15 = Magical Key
16 = Power Bracelet
17 = Letter / Map
18 = Compass
17 = Letter / Map
18 = Compass
17 = Letter / Map
19 = Fairy
1B = Clock
1C = Rupee / 5 Rupees
1D = Key
1E = Heart Container
1F = Heart
20 = Triforce Piece
21 = Ganon's Triforce ?
1C = Rupee
22 = Boomerang / Magical Boomerang
22 = Boomerang / Magical Boomerang
26 = Magical Shield
27 = Magical Sword
28 = Link Holding an Item
29 = Wooden Sword / White Sword
2B = Energy Wave (shot by Wizzrobes)
2E = Kill Sprite

----

714C: Items Tile Mappings (30 bytes)

20 82 3C 34 70 72 74 28 86 3C 2A 26 24 22 40 4A
8A 6C 42 46 76 2C 4E 4C 6A 50 52 66 32 2E 68 F3
6E F2 36 38 3A 3C 56 48 78 20 82 7A 7C 30 64 62

----

717C: 20 8879	JSR $7988	; JSR $71F8

717F: A9 00	LDA #$00	; A = 00
7181: 85 0F	STA $0F
7183: 85 0C	STA $0C
7185: 98	TYA
7186: 48	PHA
7187: A9 00	LDA #$00	; A = 00
7189: 85 52	STA $52
718B: AC 4103	LDY $0341
718E: B9 AB77	LDA $77AB,Y
7191: 8D 4303	STA $0343
7194: B9 AC77	LDA $77AC,Y
7197: 8D 4403	STA $0344
719A: 68	PLA
719B: A8	TAY
719C: 86 08	STX $08
719E: A9 01	LDA #$01	; A = 01
71A0: 85 07	STA $07
71A2: A9 08	LDA #$08	; A = 08
71A4: 85 0A	STA $0A
71A6: B9 B778	LDA $78B7,Y
71A9: 18	CLC
71AA: 65 0C	ADC $0C
71AC: A8	TAY
71AD: B9 DC78	LDA $78DC,Y
71B0: 85 02	STA $02
71B2: 18	CLC
71B3: 69 02	ADC #$02
71B5: 85 03	STA $03
71B7: A5 02	LDA $02
71B9: C9 F3	CMP #$F3
71BB: F0 08	BEQ $71C5

71BD: C9 20	CMP #$20
71BF: 90 19	BCC $71DA

71C1: C9 62	CMP #$62
71C3: B0 15	BCS $71DA

71C5: AD 0405	LDA $0504
71C8: D0 07	BNE $71D1

71CA: A5 00	LDA $00
71CC: 18	CLC
71CD: 69 04	ADC #$04
71CF: 85 00	STA $00

71D1: E6 52	INC $52
71D3: A9 00	LDA #$00	; A = 00
71D5: 85 07	STA $07

71D7: 4C 6878	JMP $7868	; JMP $70D8

----

71DA: C9 6C	CMP #$6C
71DC: 90 07	BCC $71E5

71DE: C9 7C	CMP #$7C
71E0: 90 07	BCC $71E9

71E2: 4C 4E78	JMP $784E

----

71E5: A9 07	LDA #$07	; A = 07
71E7: 85 0A	STA $0A
71E9: A5 02	LDA $02
71EB: 85 03	STA $03
71ED: A5 05	LDA $05
71EF: 49 40	EOR #$40	; flip bits .x.. ....
71F1: 85 05	STA $05

71F3: 4C 6878	JMP $7868

----

71F6: A9 02	LDA #$02	; A = 02

71F8: 85 04	STA $04
71FA: 85 05	STA $05

71FC: 60	RTS

----

71FD: A0 03	LDY #$03	; Y = 03
71FF: 84 03	STY $03
7201: 48	PHA
7202: BD F004	LDA $04F0,X
7205: F0 06	BEQ $720D

7207: A5 15	LDA $15		; Frame Counter
7209: 29 03	AND #$03	; keep bits .... ..xx
720B: 85 03	STA $03

720D: AC 4103	LDY $0341
7210: B9 AB77	LDA $77AB,Y
7213: A8	TAY
7214: 68	PLA
7215: 99 0102	STA $0201,Y
7218: B5 70	LDA $70,X	; Link/Enemy X Position
721A: 99 0302	STA $0203,Y
721D: B5 84	LDA $84,X	; Link/Enemy Y Position
721F: 99 0002	STA $0200,Y
7222: A5 03	LDA $03
7224: 99 0202	STA $0202,Y

7227: 4C 366E	JMP $6E36

----

722A: 20 D079	JSR $79D0	; JSR $7240

722D: AD 0604	LDA $0406
7230: F0 08	BEQ $723A

7232: 8D CC04	STA $04CC
7235: A9 00	LDA #$00	; A = 00
7237: 8D 0604	STA $0406

723A: 20 93FA	JSR $FA93

723D: 4C DB77	JMP $77DB	; JMP $704B

----

7240: 20 2D7A	JSR $7A2D

7243: BD BF04	LDA $04BF,X
7246: 29 20	AND #$20	; keep bits ..x. ....
7248: D0 23	BNE $726D

724A: BD F004	LDA $04F0,X
724D: D0 3D	BNE $728C

724F: A0 0F	LDY #$0F	; Y = 0F
7251: 20 C27B	JSR $7BC2

7254: A0 0E	LDY #$0E	; Y = 0E
7256: 20 9D7C	JSR $7C9D

7259: A0 10	LDY #$10	; Y = 10
725B: 20 DC7C	JSR $7CDC

725E: A0 11	LDY #$11	; Y = 11
7260: 20 DC7C	JSR $7CDC

7263: A0 0D	LDY #$0D	; Y = 0D
7265: 20 297D	JSR $7D29

7268: A0 12	LDY #$12	; Y = 12
726A: 20 5F7D	JSR $7D5F

726D: 20 A77A	JSR $7AA7

7270: BD 4F03	LDA $034F,X	; Enemy Code
7273: BC 0504	LDY $0405,X
7276: F0 15	BEQ $728D

7278: C9 05	CMP #$05
727A: F0 04	BEQ $7280

727C: C9 06	CMP #$06
727E: D0 0C	BNE $728C

7280: B5 AC	LDA $AC,X
7282: 10 08	BPL $728C

7284: BC 2C04	LDY $042C,X
7287: A9 00	LDA #$00	; A = 00
7289: 99 4F03	STA $034F,Y	; Enemy Code

728C: 60	RTS

----

728D: C9 27	CMP #$27
728F: F0 04	BEQ $7295

7291: C9 17	CMP #$17
7293: D0 07	BNE $729C

7295: A5 0C	LDA $0C
7297: F0 03	BEQ $729C

7299: FE 2C04	INC $042C,X

729C: 60	RTS

----

729D: A9 08	LDA #$08	; A = 08
729F: 85 02	STA $02
72A1: 85 03	STA $03
72A3: BD BF04	LDA $04BF,X
72A6: 29 40	AND #$40	; keep bits .x.. ....
72A8: F0 02	BEQ $72AC

72AA: 46 02	LSR $02

72AC: B5 70	LDA $70,X
72AE: 18	CLC
72AF: 65 02	ADC $02
72B1: 85 02	STA $02
72B3: B5 84	LDA $84,X
72B5: 18	CLC
72B6: 65 03	ADC $03
72B8: 85 03	STA $03

72BA: 60	RTS

----

72BB: Table for Enemy Damage (5C bytes)

xxxx ....	Enemy Damage, heart fraction (1/16 of heart)
.... xxxx	Enemy Damage, number of whole hearts

81 = 1 heart and a half

02 01 80 80 01 80 80 80 80 80 01 02 80 80 01 80
80 01 01 80 80 02 01 02 00 80 80 80 80 01 80 80
01 01 02 01 02 02 80 80 80 80 00 00 00 00 00 02
01 01 02 02 00 00 00 02 02 02 02 01 01 04 80 80
80 01 01 01 01 01 02 02 01 01 00 00 00 00 00 00
00 00 80 80 80 01 02 02 04 04 80 01

----

7317: 20 2D7A	JSR $7A2D

731A: A9 00	LDA #$00	; A = 00
731C: 8D 4B03	STA $034B
731F: 85 06	STA $06
7321: 85 09	STA $09
7323: 85 0C	STA $0C
7325: A0 00	LDY #$00	; Y = 00
7327: 84 00	STY $00
7329: AD F004	LDA $04F0
732C: 0D 6C06	ORA $066C	; Clock Activated
732F: 05 3D	ORA $3D
7331: 15 3D	ORA $3D,X
7333: D0 74	BNE $73A9

7335: A5 AC	LDA $AC		; Item Dropped by... Link ?
7337: C9 40	CMP #$40
7339: F0 6E	BEQ $73A9

733B: AD 1205	LDA $0512
733E: D0 69	BNE $73A9

7340: BD 4F03	LDA $034F,X	; Enemy Code
7343: C9 53	CMP #$53
7345: 90 08	BCC $734F

7347: B5 AC	LDA $AC,X	; Item Dropped by Enemy
7349: 29 F0	AND #$F0	; keep bits xxxx ....
734B: C9 10	CMP #$10
734D: D0 5A	BNE $73A9

734F: A5 70	LDA $70		; Link X Position
7351: 18	CLC
7352: 69 08	ADC #$08
7354: 85 04	STA $04
7356: A5 84	LDA $84		; Link Y Position
7358: 18	CLC
7359: 69 08	ADC #$08
735B: 85 05	STA $05

735D: A9 09	LDA #$09	; A = 09
735F: 20 FB7D	JSR $7DFB
7362: F0 45	BEQ $73A9

7364: BD 4F03	LDA $034F,X	; Enemy Code
7367: C9 53	CMP #$53
7369: 90 3F	BCC $73AA

736B: EE 4B03	INC $034B
736E: C9 56	CMP #$56
7370: F0 38	BEQ $73AA

7372: C9 5A	CMP #$5A
7374: F0 34	BEQ $73AA

7376: A5 AC	LDA $AC
7378: 29 F0	AND #$F0	; keep bits xxxx ....
737A: D0 2E	BNE $73AA

737C: A5 98	LDA $98		; Link Facing Direction
737E: 15 98	ORA $98,X	; Link/Enemy Facing Direction
7380: 29 0C	AND #$0C	; keep bits .... xx..
7382: C9 0C	CMP #$0C
7384: F0 0A	BEQ $7390

7386: A5 98	LDA $98		; Link Facing Direction
7388: 15 98	ORA $98,X	; Link/Enemy Facing Direction
738A: 29 03	AND #$03	; keep bits .... ..xx
738C: C9 03	CMP #$03
738E: D0 1A	BNE $73AA

7390: BD 4F03	LDA $034F,X	; Enemy Code
7393: C9 55	CMP #$55
7395: 90 09	BCC $73A0

7397: C9 5B	CMP #$5B
7399: B0 05	BCS $73A0

739B: AD 7606	LDA $0676	; Have Magical Shield
739E: F0 0A	BEQ $73AA

73A0: A9 01	LDA #$01	; A = 01
73A2: 8D 0406	STA $0604
73A5: A9 00	LDA #$00	; A = 00
73A7: 85 06	STA $06

73A9: 60	RTS

----

Enemy Damage

73AA: 20 267E	JSR $7E26

73AD: E6 0C	INC $0C
73AF: BC 4F03	LDY $034F,X	; Enemy Code
73B2: B9 4A7A	LDA $7A4A,Y	; Table for Enemy Damage
73B5: 48	PHA
73B6: 29 0F	AND #$0F	; keep bits .... xxxx
73B8: 85 0D	STA $0D
73BA: 68	PLA
73BB: 29 F0	AND #$F0	; keep bits xxxx ....
73BD: 85 0E	STA $0E
73BF: BC 4F03	LDY $034F,X	; Enemy Code
73C2: C0 2E	CPY #$2E	; 2E = Whistle Tornado
73C4: F0 05	BEQ $73CB

73C6: A9 08	LDA #$08	; A = 08
73C8: 20 7C6D	JSR $6D7C

73CB: AC 6206	LDY $0662	; Ring Type (00 = None, 01 = Blue, 02 = Red)
73CE: F0 07	BEQ $73D7

If Link has the Blue Ring, divide damage by half
Loop once more if Link has the Red Ring

73D0: 46 0D	LSR $0D
73D2: 66 0E	ROR $0E
73D4: 88	DEY
73D5: D0 F9	BNE $73D0

73D7: A9 00	LDA #$00	; A = 00
73D9: 8D 2706	STA $0627	; Enemies killed without taking damage
73DC: 85 50	STA $50		; Enemies killed without taking damage (cycle A)
73DE: 85 51	STA $51
73E0: AD 7006	LDA $0670	; Heart following the last filled heart
73E3: C5 0E	CMP $0E
73E5: 90 19	BCC $7400

73E7: 38	SEC
73E8: E5 0E	SBC $0E
73EA: 8D 7006	STA $0670	; Heart following the last filled heart
73ED: AD 6F06	LDA $066F	; Heart Containers / Filled Hearts
73F0: 29 0F	AND #$0F	; keep bits .... xxxx
73F2: C5 0D	CMP $0D
73F4: 90 23	BCC $7419

73F6: AD 6F06	LDA $066F	; Heart Containers / Filled Hearts
73F9: 38	SEC
73FA: E5 0D	SBC $0D
73FC: 8D 6F06	STA $066F	; Heart Containers / Filled Hearts

73FF: 60	RTS

----

7400: A5 0E	LDA $0E
7402: 38	SEC
7403: ED 7006	SBC $0670	; Heart following the last filled heart
7406: 85 0E	STA $0E
7408: AD 6F06	LDA $066F	; Heart Containers / Filled Hearts
740B: 29 0F	AND #$0F	; keep bits .... xxxx
740D: F0 0A	BEQ $7419

740F: CE 6F06	DEC $066F	; Heart Containers / Filled Hearts
7412: A9 FF	LDA #$FF	; A = FF
7414: 8D 7006	STA $0670	; Heart following the last filled heart
7417: D0 BE	BNE $73D7

7419: AD 6F06	LDA $066F	; Heart Containers / Filled Hearts
741C: 29 F0	AND #$F0	; keep bits xxxx ....
741E: 8D 6F06	STA $066F	; Heart Containers / Filled Hearts

7421: 20 A3EB	JSR $EBA3

7424: 8D 7006	STA $0670	; Heart following the last filled heart
7427: 85 AC	STA $AC
7429: A9 11	LDA #$11	; A = 11
742B: 85 12	STA $12
742D: A9 04	LDA #$04	; A = 04 (04 = Link facing down)
742F: 85 98	STA $98		; Link/Enemy Facing Direction

7431: 60	RTS

----

7432: B9 AC00	LDA $00AC,Y
7435: 0A	ASL
7436: B0 F9	BCS $7431

7438: 84 00	STY $00
743A: A9 02	LDA #$02	; A = 02
743C: 85 09	STA $09
743E: A9 0A	LDA #$0A	; A = 0A
7440: 85 0D	STA $0D
7442: 85 0E	STA $0E
7444: B9 7000	LDA $0070,Y	; Link/Enemy X Position
7447: 18	CLC
7448: 69 04	ADC #$04
744A: 85 04	STA $04
744C: B9 8400	LDA $0084,Y	; Link/Enemy Y Position
744F: 18	CLC
7450: 69 08	ADC #$08
7452: 85 05	STA $05
7454: A9 00	LDA #$00	; A = 00
7456: 85 06	STA $06
7458: A4 00	LDY $00
745A: B9 AC00	LDA $00AC,Y
745D: F0 79	BEQ $74D8

745F: 20 FF7D	JSR $7DFF
7462: F0 74	BEQ $74D8

7464: C0 0F	CPY #$0F
7466: D0 1E	BNE $7486

7468: BD B204	LDA $04B2,X
746B: 25 09	AND $09
746D: F0 03	BEQ $7472

746F: 20 C57D	JSR $7DC5

7472: A9 50	LDA #$50	; A = 50
7474: 99 AC00	STA $00AC,Y
7477: BD B204	LDA $04B2,X
747A: 25 09	AND $09
747C: D0 5A	BNE $74D8

747E: A9 00	LDA #$00	; A = 00
7480: 85 07	STA $07
7482: A9 10	LDA #$10	; A = 10
7484: 95 3D	STA $3D,X

7486: BD B204	LDA $04B2,X
7489: 25 09	AND $09
748B: D0 4C	BNE $74D9

748D: BD 4F03	LDA $034F,X	; Enemy Code
7490: C9 33	CMP #$33
7492: F0 04	BEQ $7498

7494: C9 34	CMP #$34
7496: D0 03	BNE $749B

7498: 4C 40A4	JMP $A440

----

749B: C9 13	CMP #$13
749D: F0 04	BEQ $74A3

749F: C9 12	CMP #$12
74A1: D0 0C	BNE $74AF

74A3: C0 0F	CPY #$0F
74A5: F0 1D	BEQ $74C4

74A7: B9 9800	LDA $0098,Y	; Link/Enemy Facing Direction
74AA: 95 98	STA $98,X	; Link/Enemy Facing Direction

74AC: 4C 547C	JMP $7C54

----

74AF: C9 0B	CMP #$0B
74B1: F0 04	BEQ $74B7

74B3: C9 0C	CMP #$0C
74B5: D0 0D	BNE $74C4

74B7: B9 9800	LDA $0098,Y	; Link/Enemy Facing Direction
74BA: 15 98	ORA $98,X	; Link/Enemy Facing Direction
74BC: C9 0C	CMP #$0C
74BE: F0 19	BEQ $74D9

74C0: C9 03	CMP #$03
74C2: F0 15	BEQ $74D9

74C4: A9 02	LDA #$02	; A = 02
74C6: 8D 0406	STA $0604
74C9: BD 8504	LDA $0485,X
74CC: C5 07	CMP $07
74CE: 90 16	BCC $74E6

74D0: 38	SEC
74D1: E5 07	SBC $07
74D3: 9D 8504	STA $0485,X
74D6: F0 0E	BEQ $74E6

74D8: 60	RTS

----

74D9: A5 09	LDA $09
74DB: C9 20	CMP #$20
74DD: F0 F9	BEQ $74D8

74DF: C9 08	CMP #$08
74E1: F0 F5	BEQ $74D8

74E3: 4C C57D	JMP $7DC5

----

74E6: EE 2706	INC $0627	; Enemies killed without taking damage
74E9: A5 50	LDA $50		; Enemies killed without taking damage (cycle A)
74EB: C9 0A	CMP #$0A
74ED: B0 10	BCS $74FF

74EF: E6 50	INC $50		; Enemies killed without taking damage (cycle A)
74F1: A5 50	LDA $50
74F3: C9 0A	CMP #$0A
74F5: D0 08	BNE $74FF

74F7: A5 09	LDA $09
74F9: C9 08	CMP #$08
74FB: D0 02	BNE $74FF

74FD: E6 51	INC $51

74FF: 20 A6FE	JSR $FEA6

7502: A9 00	LDA #$00	; A = 00
7504: 95 3D	STA $3D,X

7506: 20 E6EE	JSR $EEE6

7509: 9D F004	STA $04F0,X

750C: 60	RTS

----

750D: 84 00	STY $00
750F: A9 10	LDA #$10	; A = 10
7511: 85 09	STA $09
7513: B9 AC00	LDA $00AC,Y
7516: 4A	LSR
7517: B0 32	BCS $754B

7519: A9 0C	LDA #$0C	; A = 0C
751B: 85 0D	STA $0D
751D: B9 AC00	LDA $00AC,Y
7520: A0 20	LDY #$20	; Y = 20
7522: 0A	ASL
7523: B0 15	BCS $753A

7525: A9 01	LDA #$01	; A = 01
7527: 85 09	STA $09
7529: A0 40	LDY #$40	; Y = 40
752B: AD 5706	LDA $0657
752E: C9 03	CMP #$03
7530: F0 08	BEQ $753A

7532: A0 20	LDY #$20	; Y = 20
7534: C9 02	CMP #$02
7536: F0 02	BEQ $753A

7538: A0 10	LDY #$10	; Y = 10

753A: 98	TYA
753B: 20 867D	JSR $7D86

753E: A5 06	LDA $06
7540: F0 09	BEQ $754B

7542: 8A	TXA
7543: 48	PHA

7544: A2 0E	LDX #$0E	; X = 0E
7546: 20 D4F3	JSR $F3D4

7549: 68	PLA
754A: AA	TAX

754B: 60	RTS

----

754C: 84 00	STY $00
754E: A9 20	LDA #$20	; A = 20
7550: 85 09	STA $09
7552: A9 10	LDA #$10	; A = 10
7554: 85 07	STA $07
7556: A9 0E	LDA #$0E	; A = 0E
7558: 85 0D	STA $0D
755A: B9 AC00	LDA $00AC,Y
755D: C9 20	CMP #$20
755F: B0 10	BCS $7571

7561: C9 13	CMP #$13
7563: D0 30	BNE $7595

7565: A9 08	LDA #$08	; A = 08
7567: 85 09	STA $09
7569: A9 40	LDA #$40	; A = 40
756B: 85 07	STA $07
756D: A9 18	LDA #$18	; A = 18
756F: 85 0D	STA $0D

7571: B9 7000	LDA $0070,Y	; Link/Enemy X Position
7574: 18	CLC
7575: 69 08	ADC #$08
7577: 85 04	STA $04
7579: B9 8400	LDA $0084,Y	; Link/Enemy Y Position
757C: 18	CLC
757D: 69 08	ADC #$08
757F: 85 05	STA $05
7581: A5 0D	LDA $0D

7583: 20 FB7D	JSR $7DFB
7586: F0 0D	BEQ $7595

7588: 20 167C	JSR $7C16

758B: BD B204	LDA $04B2,X
758E: 25 09	AND $09
7590: D0 03	BNE $7595

7592: 20 267E	JSR $7E26

7595: 60	RTS

----

7596: 10 20 40 84 00	Table for ? (5 bytes)

----

759B: A9 01	LDA #$01	; A = 01
759D: 85 09	STA $09
759F: B9 AC00	LDA $00AC,Y
75A2: C9 02	CMP #$02
75A4: D0 EF	BNE $7595

75A6: AC 5706	LDY $0657
75A9: B9 257D	LDA $7D25,Y
75AC: 85 07	STA $07
75AE: A5 98	LDA $98		; Link Facing Direction
75B0: 29 0C	AND #$0C	; keep bits .... xx..
75B2: F0 09	BEQ $75BD

75B4: A9 0C	LDA #$0C	; A = 0C
75B6: 85 0D	STA $0D
75B8: A9 10	LDA #$10	; A = 10

75BA: 4C 537D	JMP $7D53

----

75BD: A9 10	LDA #$10	; A = 10
75BF: 85 0D	STA $0D
75C1: A9 0C	LDA #$0C	; A = 0C
75C3: 85 0E	STA $0E

75C5: 20 D17D	JSR $7DD1

75C8: A5 06	LDA $06
75CA: F0 C9	BEQ $7595

75CC: 4C AA7D	JMP $7DAA

----

75CF: 84 00	STY $00
75D1: B9 AC00	LDA $00AC,Y
75D4: C9 30	CMP #$30
75D6: 90 08	BCC $75E0

75D8: A9 01	LDA #$01	; A = 01
75DA: 85 09	STA $09
75DC: A9 20	LDA #$20	; A = 20
75DE: D0 CC	BNE $75AC

75E0: C9 20	CMP #$20
75E2: B0 56	BCS $763A

75E4: A9 04	LDA #$04	; A = 04
75E6: 85 09	STA $09
75E8: A9 20	LDA #$20	; A = 20
75EA: AC 5906	LDY $0659
75ED: C0 01	CPY #$01
75EF: F0 01	BEQ $75F2

75F1: 0A	ASL

75F2: A0 0B	LDY #$0B	; Y = 0B
75F4: 84 0D	STY $0D

75F6: 20 CB7D	JSR $7DCB

75F9: A5 06	LDA $06
75FB: F0 3D	BEQ $763A

75FD: C0 12	CPY #$12
75FF: D0 19	BNE $761A

7601: BD 4F03	LDA $034F,X	; Enemy Code
7604: C9 16	CMP #$16
7606: D0 08	BNE $7610

7608: A9 00	LDA #$00	; A = 00
760A: 9D 8504	STA $0485,X

760D: 4C 547C	JMP $7C54

----

7610: A9 20	LDA #$20	; A = 20
7612: 99 AC00	STA $00AC,Y
7615: A9 03	LDA #$03	; A = 03
7617: 99 D003	STA $03D0,Y
761A: BD 4F03	LDA $034F,X	; Enemy Code
761D: C9 0B	CMP #$0B
761F: F0 04	BEQ $7625

7621: C9 0C	CMP #$0C
7623: D0 0D	BNE $7632

7625: B9 9800	LDA $0098,Y	; Link/Enemy Facing Direction
7628: 15 98	ORA $98,X	; Link/Enemy Facing Direction
762A: C9 0C	CMP #$0C
762C: F0 07	BEQ $7635

762E: C9 03	CMP #$03
7630: F0 03	BEQ $7635

7632: 4C 267E	JMP $7E26

----

7635: A9 01	LDA #$01	; A = 01
7637: 8D 0406	STA $0604

763A: 60	RTS

----

763B: 85 07	STA $07
763D: A5 0D	LDA $0D
763F: 85 0E	STA $0E
7641: A4 00	LDY $00
7643: A5 98	LDA $98		; Link Facing Direction
7645: 29 0C	AND #$0C	; keep bits .... xx..
7647: F0 11	BEQ $765A

7649: B9 7000	LDA $0070,Y	; Link/Enemy X Position
764C: 18	CLC
764D: 69 06	ADC #$06
764F: 85 04	STA $04
7651: B9 8400	LDA $0084,Y	; Link/Enemy Y Position
7654: 18	CLC
7655: 69 08	ADC #$08

7657: 4C F87D	JMP $7DF8

----

765A: B9 7000	LDA $0070,Y	; Link/Enemy X Position
765D: 18	CLC
765E: 69 08	ADC #$08
7660: 85 04	STA $04
7662: B9 8400	LDA $0084,Y	; Link/Enemy Y Position
7665: 18	CLC
7666: 69 06	ADC #$06

7668: 4C E27B	JMP $7BE2

----

766B: 85 0D	STA $0D
766D: 85 0E	STA $0E
766F: A9 00	LDA #$00	; A = 00
7671: 85 06	STA $06
7673: A4 00	LDY $00
7675: A5 02	LDA $02
7677: 38	SEC
7678: E5 04	SBC $04

767A: 20 1F70	JSR $701F

767D: 85 0A	STA $0A
767F: C5 0D	CMP $0D
7681: B0 10	BCS $7693

7683: A5 03	LDA $03
7685: 38	SEC
7686: E5 05	SBC $05

7688: 20 1F70	JSR $701F

768B: 85 0B	STA $0B
768D: C5 0E	CMP $0E
768F: B0 02	BCS $7693

7691: E6 06	INC $06

7693: A5 06	LDA $06

7695: 60	RTS

----

7696: A4 00	LDY $00
7698: E0 0D	CPX #$0D
769A: B0 07	BCS $76A3

769C: BD B204	LDA $04B2,X
769F: 25 09	AND $09
76A1: D0 6A	BNE $770D

76A3: A9 08	LDA #$08	; A = 08
76A5: 85 08	STA $08
76A7: B5 84	LDA $84,X
76A9: 85 04	STA $04
76AB: B9 8400	LDA $0084,Y	; Link/Enemy Y Position
76AE: 85 05	STA $05
76B0: C0 00	CPY #$00
76B2: D0 0D	BNE $76C1

76B4: AD 9403	LDA $0394	; Inter-Tile Offset (0-F)
76B7: F0 08	BEQ $76C1

76B9: A5 98	LDA $98		; Link/Enemy Facing Direction
76BB: 29 03	AND #$03	; keep bits .... ..xx (facing left/right)
76BD: D0 08	BNE $76C7
76BF: F0 13	BEQ $76D4

76C1: A5 0B	LDA $0B
76C3: C9 04	CMP #$04
76C5: B0 0D	BCS $76D4

76C7: A9 02	LDA #$02	; A = 02
76C9: 85 08	STA $08
76CB: B5 70	LDA $70,X	; Link/Enemy X Position
76CD: 85 04	STA $04
76CF: B9 7000	LDA $0070,Y	; Link/Enemy X Position
76D2: 85 05	STA $05

76D4: A5 04	LDA $04
76D6: C5 05	CMP $05
76D8: B0 02	BCS $76DC

76DA: 46 08	LSR $08

76DC: C0 00	CPY #$00
76DE: D0 2E	BNE $770E

76E0: AD F004	LDA $04F0
76E3: D0 28	BNE $770D

76E5: A5 08	LDA $08
76E7: 09 80	ORA #$80	; set  bits x... ....
76E9: 85 C0	STA $C0
76EB: A9 18	LDA #$18	; A = 18
76ED: 8D F004	STA $04F0
76F0: A9 20	LDA #$20	; A = 20
76F2: 85 D3	STA $D3
76F4: E0 0D	CPX #$0D
76F6: B0 15	BCS $770D

76F8: BD BF04	LDA $04BF,X
76FB: 29 80	AND #$80	; keep bits x... ....
76FD: D0 0E	BNE $770D

76FF: BD 4F03	LDA $034F,X	; Enemy Code
7702: C9 12	CMP #$12
7704: F0 07	BEQ $770D

7706: B5 98	LDA $98,X	; Link/Enemy Facing Direction
7708: 20 1370	JSR $7013
770B: 95 98	STA $98,X	; Link/Enemy Facing Direction

770D: 60	RTS

----

770E: B9 9800	LDA $0098,Y	; Link/Enemy Facing Direction
7711: 85 08	STA $08
7713: BD BF04	LDA $04BF,X
7716: 29 80	AND #$80	; keep bits x... ....
7718: F0 06	BEQ $7720

771A: A5 08	LDA $08
771C: 09 40	ORA #$40	; set  bits .x.. ....
771E: 85 08	STA $08

7720: BD F004	LDA $04F0,X
7723: D0 2B	BNE $7750

7725: BD 4F03	LDA $034F,X	; Enemy Code
7728: C9 33	CMP #$33
772A: F0 04	BEQ $7730

772C: C9 34	CMP #$34
772E: D0 11	BNE $7741

7730: A5 0F	LDA $0F
7732: C9 03	CMP #$03
7734: F0 04	BEQ $773A

7736: C9 04	CMP #$04
7738: D0 16	BNE $7750

773A: BD 6B04	LDA $046B,X
773D: C9 03	CMP #$03
773F: D0 0F	BNE $7750

7741: A5 08	LDA $08
7743: 09 80	ORA #$80	; set  bits x... ....
7745: 95 C0	STA $C0,X
7747: A9 40	LDA #$40	; A = 40
7749: 95 D3	STA $D3,X
774B: A9 10	LDA #$10	; A = 10
774D: 9D F004	STA $04F0,X

7750: 60	RTS

----

7751: Unused Space (7FF bytes)

----

7F50: 78	SEI
7F51: D8	CLD
7F52: A9 00	LDA #$00	; A = 00
7F54: 8D 0020	STA $2000
7F57: A2 FF	LDX #$FF	; X = FF
7F59: 9A	TXS

7F5A: AD 0220	LDA $2002
7F5D: 29 80	AND #$80	; keep bits x... ....
7F5F: F0 F9	BEQ $7F5A

7F61: AD 0220	LDA $2002
7F64: 29 80	AND #$80	; keep bits x... ....
7F66: F0 F9	BEQ $7F61

7F68: 09 FF	ORA #$FF	; set  bits xxxx xxxx
7F6A: 8D 0080	STA $8000
7F6D: 8D 00A0	STA $A000
7F70: 8D 00C0	STA $C000
7F73: 8D 00E0	STA $E000

7F76: A9 0F	LDA #$0F	; A = 0F
7F78: 20 98BF	JSR $BF98

7F7B: A9 00	LDA #$00	; A = 00
7F7D: 8D 00A0	STA $A000
7F80: 4A	LSR
7F81: 8D 00A0	STA $A000
7F84: 4A	LSR
7F85: 8D 00A0	STA $A000
7F88: 4A	LSR
7F89: 8D 00A0	STA $A000
7F8C: 4A	LSR
7F8D: 8D 00A0	STA $A000

7F90: A9 07	LDA #$07	; A = 07
7F92: 20 ACBF	JSR $BFAC

7F95: 4C 40E4	JMP $E440

----

7F98: 8D 0080	STA $8000
7F9B: 4A	LSR
7F9C: 8D 0080	STA $8000
7F9F: 4A	LSR
7FA0: 8D 0080	STA $8000
7FA3: 4A	LSR
7FA4: 8D 0080	STA $8000
7FA7: 4A	LSR
7FA8: 8D 0080	STA $8000

7FAB: 60	RTS

----

7FAC: 8D 00E0	STA $E000
7FAF: 4A	LSR
7FB0: 8D 00E0	STA $E000
7FB3: 4A	LSR
7FB4: 8D 00E0	STA $E000
7FB7: 4A	LSR
7FB8: 8D 00E0	STA $E000
7FBB: 4A	LSR
7FBC: 8D 00E0	STA $E000

7FBF: 60	RTS

----

7FC0: Unused Space (3A bytes)

--------

// End of Bank //

--------
